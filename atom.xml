<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>PyGo²</title>
  
  <subtitle>一个爱&lt;font size=&quot;5&quot; color=&quot;#BF0060&quot;&gt;老婆&lt;/font&gt;的&lt;font size=&quot;5&quot; color=&quot;#FF4500&quot;&gt;Python&lt;/font&gt;程序猿。。。。。。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://pygo2.top/"/>
  <updated>2022-06-04T00:32:21.000Z</updated>
  <id>http://pygo2.top/</id>
  
  <author>
    <name>mingliang.gao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python实现PDF转WORD的方式</title>
    <link href="http://pygo2.top/articles/11221/"/>
    <id>http://pygo2.top/articles/11221/</id>
    <published>2022-06-04T00:32:21.000Z</published>
    <updated>2022-06-04T00:32:21.000Z</updated>
    
    <content type="html"><![CDATA[<span class="label primary">Python实战</span><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><div class="note primary">            <p>网上的PDF转WORD都是收费的，写了好几年的Python了，打算想搞一个开源工具网站，其中的一个常用功能之一就是PDF转WORD，所以想探索一下所有的转换方式，<font color="red" size="4.5">持续更新中。。。。。。</font></p>          </div><p><img src="/images/article_youzan.jpeg" alt></p><a id="more"></a><hr><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><table><thead><tr><th style="text-align:center">id</th><th style="text-align:center">name</th><th style="text-align:center">Version</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">Python</td><td style="text-align:center">3.7</td></tr></tbody></table><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><p>记录一下所有的包，有需要的可以进行参考。</p><h4 id="pdf2docx"><a href="#pdf2docx" class="headerlink" title="pdf2docx"></a>pdf2docx</h4><h4 id="LibreOffice"><a href="#LibreOffice" class="headerlink" title="LibreOffice"></a>LibreOffice</h4><h4 id="PyPDF2"><a href="#PyPDF2" class="headerlink" title="PyPDF2"></a>PyPDF2</h4><h4 id="PDFMiner"><a href="#PDFMiner" class="headerlink" title="PDFMiner"></a>PDFMiner</h4>]]></content>
    
    <summary type="html">
    
      &lt;span class=&quot;label primary&quot;&gt;Python实战&lt;/span&gt;
&lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;div class=&quot;note primary&quot;&gt;
            &lt;p&gt;网上的PDF转WORD都是收费的，写了好几年的Python了，打算想搞一个开源工具网站，其中的一个常用功能之一就是PDF转WORD，所以想探索一下所有的转换方式，&lt;font color=&quot;red&quot; size=&quot;4.5&quot;&gt;持续更新中。。。。。。&lt;/font&gt;&lt;/p&gt;
          &lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/article_youzan.jpeg&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://pygo2.top/categories/Python/"/>
    
    
      <category term="Python" scheme="http://pygo2.top/tags/Python/"/>
    
      <category term="Python实战" scheme="http://pygo2.top/tags/Python%E5%AE%9E%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>Python-collections包</title>
    <link href="http://pygo2.top/articles/51993/"/>
    <id>http://pygo2.top/articles/51993/</id>
    <published>2022-05-30T12:08:24.000Z</published>
    <updated>2022-05-30T12:08:24.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Linux学习之增强篇-nc</title>
    <link href="http://pygo2.top/articles/20869/"/>
    <id>http://pygo2.top/articles/20869/</id>
    <published>2022-05-25T12:08:03.000Z</published>
    <updated>2022-05-25T12:08:03.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_awk.jpeg" alt></p><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><div class="note danger">            <p>文件传输，而且还可以装逼的神器：nc（netcat）。</p>          </div><span class="label default">Linux</span> <span class="label primary">nc</span><a id="more"></a><hr><p>目前这个命令主要用来实现Linux服务器之间文件传输，当然还有其他用于传输文件的命令，比如：scp、rz&amp;&amp;sz、rsync（主要用于文件自动化同步）等等，小文件的话用nc就挺好用，小推荐一下。</p><h3 id="推荐指数"><a href="#推荐指数" class="headerlink" title="推荐指数"></a>推荐指数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🌟🌟🌟</span><br></pre></td></tr></table></figure><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 查看是否有命令</span><br><span class="line">which nc</span><br><span class="line"></span><br><span class="line"># 安装</span><br><span class="line">install -y nc</span><br></pre></td></tr></table></figure><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p>介绍文件传输以及扫描端口2大功能。</p><h4 id="传输文件"><a href="#传输文件" class="headerlink" title="传输文件"></a>传输文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 发送端：</span><br><span class="line">nc -v ip port &lt; test.txt</span><br><span class="line"></span><br><span class="line">#接收端：</span><br><span class="line">nc -lp port &gt; test.txt</span><br></pre></td></tr></table></figure><ul><li>l：监听模式</li><li>v：显示过程详情<br>其中，ip为接收端ip地址，port为自定义端口。</li></ul><h4 id="扫描端口"><a href="#扫描端口" class="headerlink" title="扫描端口"></a>扫描端口</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -nv -w -l -z ip port</span><br></pre></td></tr></table></figure><ul><li>n：扫描的目标是个ip地址</li><li>l：监听模式</li><li>v：显示过程详情</li><li>w：设置超时时间</li><li>z 表示 进行端口扫描</li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nc --help</span><br><span class="line"></span><br><span class="line">usage: nc [-46DdhklnrStUuvzC] [-i interval] [-p source_port]</span><br><span class="line">  [-s source_ip_address] [-T ToS] [-w timeout] [-X proxy_version]</span><br><span class="line">  [-x proxy_address[:port]] [hostname] [port[s]]</span><br></pre></td></tr></table></figure><p>参数挺多的，<strong><em>man nc</em></strong>查看明细。</p><p>参考菜鸟命令介绍：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">-g&lt;网关&gt; 设置路由器跃程通信网关，最多可设置8个。</span><br><span class="line">-G&lt;指向器数目&gt; 设置来源路由指向器，其数值为4的倍数。</span><br><span class="line">-h 在线帮助。</span><br><span class="line">-i&lt;延迟秒数&gt; 设置时间间隔，以便传送信息及扫描通信端口。</span><br><span class="line">-l 使用监听模式，管控传入的资料。</span><br><span class="line">-n 直接使用IP地址，而不通过域名服务器。</span><br><span class="line">-o&lt;输出文件&gt; 指定文件名称，把往来传输的数据以16进制字码倾倒成该文件保存。</span><br><span class="line">-p&lt;通信端口&gt; 设置本地主机使用的通信端口。</span><br><span class="line">-r 乱数指定本地与远端主机的通信端口。</span><br><span class="line">-s&lt;来源位址&gt; 设置本地主机送出数据包的IP地址。</span><br><span class="line">-u 使用UDP传输协议。</span><br><span class="line">-v 显示指令执行过程。</span><br><span class="line">-w&lt;超时秒数&gt; 设置等待连线的时间。</span><br><span class="line">-z 使用0输入/输出模式，只在扫描通信端口时使用。</span><br></pre></td></tr></table></figure></p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>其他的功能暂时没怎么探索。</p><h3 id="学习参考"><a href="#学习参考" class="headerlink" title="学习参考"></a>学习参考</h3><p>菜鸟nc介绍：<a href="https://www.runoob.com/linux/linux-comm-nc.html" target="_blank" rel="noopener">https://www.runoob.com/linux/linux-comm-nc.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_awk.jpeg&quot; alt&gt;&lt;/p&gt;
&lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;div class=&quot;note danger&quot;&gt;
            &lt;p&gt;文件传输，而且还可以装逼的神器：nc（netcat）。&lt;/p&gt;
          &lt;/div&gt;
&lt;span class=&quot;label default&quot;&gt;Linux&lt;/span&gt; &lt;span class=&quot;label primary&quot;&gt;nc&lt;/span&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://pygo2.top/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://pygo2.top/tags/Linux/"/>
    
      <category term="Linux增强篇" scheme="http://pygo2.top/tags/Linux%E5%A2%9E%E5%BC%BA%E7%AF%87/"/>
    
  </entry>
  
  <entry>
    <title>DB2的表备份SQL</title>
    <link href="http://pygo2.top/articles/63086/"/>
    <id>http://pygo2.top/articles/63086/</id>
    <published>2022-05-16T13:48:11.000Z</published>
    <updated>2022-05-16T13:48:11.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_db2.jpg" alt></p><div class="note primary">            <p>今天修改DB2的表数据CKZH进行delete，想的是对这个表先进行一个备份，于是想到create table as select * from这个的语法，发现DB2没有这个，但是有表结构+数据复制这样的模式，记录一下日后可能用得到。</p>          </div><span class="label primary">DB2</span> <span class="label default">存储过程</span> <span class="label danger">自动备份</span><a id="more"></a><hr><p>模式：表结构 + 数据</p><blockquote><p>表结构</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE [目标表] AS (SELECT * FROM [原表]) DEFINITION ONLY;</span><br></pre></td></tr></table></figure><p>直接对表进行一个复制，参数如下：<br>目标表：创建的目标表<br>原表：复制的表结构原始表</p><blockquote><p>插入数据</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO JXDX_CKZH_20220516</span><br><span class="line">SELECT * FROM JXDX_CKZH</span><br><span class="line">-- WHERE</span><br></pre></td></tr></table></figure><p>WHERE后面加的是插入数据的限制，没有限制就去掉WHERE就行。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_db2.jpg&quot; alt&gt;&lt;/p&gt;
&lt;div class=&quot;note primary&quot;&gt;
            &lt;p&gt;今天修改DB2的表数据CKZH进行delete，想的是对这个表先进行一个备份，于是想到create table as select * from这个的语法，发现DB2没有这个，但是有表结构+数据复制这样的模式，记录一下日后可能用得到。&lt;/p&gt;
          &lt;/div&gt;
&lt;span class=&quot;label primary&quot;&gt;DB2&lt;/span&gt; &lt;span class=&quot;label default&quot;&gt;存储过程&lt;/span&gt; &lt;span class=&quot;label danger&quot;&gt;自动备份&lt;/span&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://pygo2.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="DB2" scheme="http://pygo2.top/tags/DB2/"/>
    
  </entry>
  
  <entry>
    <title>Element-UI的tree组件子选父不选提交数据问题</title>
    <link href="http://pygo2.top/articles/35413/"/>
    <id>http://pygo2.top/articles/35413/</id>
    <published>2022-05-15T00:51:55.000Z</published>
    <updated>2022-05-15T00:51:55.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/Element-UI.jpg" alt></p><h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>最近也写了一段时间的VUE了，用的就是Element-UI组件，今天使用tree组件的时候，发现<strong><em>el-tree</em></strong>控件中子节点未全部选中，提交树形数据时，后台API接收数据时没有发现父节点，完了在前端console打印了一下log，发现<strong><em>el-tree</em></strong>组件没有提交处于半选择状态的节点ID，记录一下解决方案。</p><span class="label info">VUE</span> <span class="label primary">Element-UI</span><a id="more"></a><hr><h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><p>Element-UI组件中el-tree控件中子节点未全部选中时，父节点ID在提交时不会传给后台接口，导致后台获取不到父节点ID，所以后台API数据中没有半选择的父节点ID数据。</p><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><p>直接上代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">const checked = this.$refs.menuTree.getCheckedKeys() // 全选状态ID</span><br><span class="line">const halfChecked = this.$refs.menuTree.getHalfCheckedKeys() // 半选状态ID</span><br><span class="line"></span><br><span class="line">// 合并数据方式一</span><br><span class="line">const keys = [...checked, ...halfChecked]</span><br><span class="line">// 合并数据方式二</span><br><span class="line">const keys = checked.concat(halfChecked)</span><br></pre></td></tr></table></figure></p><p>提交的部分就自己写了，主要就是封装axios成功方法，Promise去获取数据。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/Element-UI.jpg&quot; alt&gt;&lt;/p&gt;
&lt;h4 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h4&gt;&lt;p&gt;最近也写了一段时间的VUE了，用的就是Element-UI组件，今天使用tree组件的时候，发现&lt;strong&gt;&lt;em&gt;el-tree&lt;/em&gt;&lt;/strong&gt;控件中子节点未全部选中，提交树形数据时，后台API接收数据时没有发现父节点，完了在前端console打印了一下log，发现&lt;strong&gt;&lt;em&gt;el-tree&lt;/em&gt;&lt;/strong&gt;组件没有提交处于半选择状态的节点ID，记录一下解决方案。&lt;/p&gt;
&lt;span class=&quot;label info&quot;&gt;VUE&lt;/span&gt; &lt;span class=&quot;label primary&quot;&gt;Element-UI&lt;/span&gt;
    
    </summary>
    
      <category term="VUE" scheme="http://pygo2.top/categories/VUE/"/>
    
    
      <category term="VUE" scheme="http://pygo2.top/tags/VUE/"/>
    
      <category term="Element-UI" scheme="http://pygo2.top/tags/Element-UI/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript获取屏幕浏览器高宽</title>
    <link href="http://pygo2.top/articles/56199/"/>
    <id>http://pygo2.top/articles/56199/</id>
    <published>2022-05-09T12:08:26.000Z</published>
    <updated>2022-05-09T12:08:26.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_js1.jpg" alt></p><div class="note info">            <p>对于写前端代码的，经常会计算一些css样式，获取屏幕浏览器高宽也是家庭便饭，记录一下。</p>          </div><span class="label info">Hashcat</span><a id="more"></a><hr><p>全局变量，直接上代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 浏览器可用高度、宽度</span><br><span class="line">document.body.scrollHeight</span><br><span class="line">document.body.scrollWidth</span><br><span class="line"></span><br><span class="line">// HTML页面的可用高度、宽度</span><br><span class="line">document.body.clientHeight</span><br><span class="line">document.body.clientWidth</span><br></pre></td></tr></table></figure></p><p>学习参考：</p><ul><li><a href="https://www.jianshu.com/p/e324cbd5ed3d" target="_blank" rel="noopener">https://www.jianshu.com/p/e324cbd5ed3d</a></li><li><a href="https://blog.csdn.net/grkcsdn/article/details/118556380" target="_blank" rel="noopener">https://blog.csdn.net/grkcsdn/article/details/118556380</a></li><li><a href="https://www.jb51.net/article/106472.htm" target="_blank" rel="noopener">https://www.jb51.net/article/106472.htm</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_js1.jpg&quot; alt&gt;&lt;/p&gt;
&lt;div class=&quot;note info&quot;&gt;
            &lt;p&gt;对于写前端代码的，经常会计算一些css样式，获取屏幕浏览器高宽也是家庭便饭，记录一下。&lt;/p&gt;
          &lt;/div&gt;
&lt;span class=&quot;label info&quot;&gt;Hashcat&lt;/span&gt;
    
    </summary>
    
      <category term="VUE" scheme="http://pygo2.top/categories/VUE/"/>
    
    
      <category term="VUE" scheme="http://pygo2.top/tags/VUE/"/>
    
      <category term="JavaScript" scheme="http://pygo2.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>【2022】51劳动节</title>
    <link href="http://pygo2.top/articles/61186/"/>
    <id>http://pygo2.top/articles/61186/</id>
    <published>2022-05-01T15:01:46.000Z</published>
    <updated>2022-05-01T15:01:46.000Z</updated>
    
    <content type="html"><![CDATA[<div class="post_cus_note">中国节-51劳动节</div><p><img src="/images/article_laodongjie.jpg" alt></p><a id="more"></a><hr><p>封城中，2022年第三次疫情了，记录一下。</p><table><thead><tr><th style="text-align:center">时间</th><th style="text-align:center">地点</th></tr></thead><tbody><tr><td style="text-align:center">2022-05-01</td><td style="text-align:center">满洲里</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;post_cus_note&quot;&gt;中国节-51劳动节&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/images/article_laodongjie.jpg&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="节日" scheme="http://pygo2.top/categories/%E8%8A%82%E6%97%A5/"/>
    
    
      <category term="节日" scheme="http://pygo2.top/tags/%E8%8A%82%E6%97%A5/"/>
    
      <category term="中国节" scheme="http://pygo2.top/tags/%E4%B8%AD%E5%9B%BD%E8%8A%82/"/>
    
  </entry>
  
  <entry>
    <title>VUE插件driver.js闪一下问题</title>
    <link href="http://pygo2.top/articles/2813/"/>
    <id>http://pygo2.top/articles/2813/</id>
    <published>2022-04-28T06:55:13.000Z</published>
    <updated>2022-04-28T06:55:13.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><p>前几天搞了一个VUE页面功能向导，那个是在单独的页面，今天把driver.js引入到一些有功能的页面，启动的时候页面就闪了一下，没有向导功能，google了一下，发现原来是VUE渲染的问题。</p><p><img src="/images/article_vue.jpeg" alt></p><span class="label primary">VUE</span> <span class="label info">插件</span><a id="more"></a><hr><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><p>解决问题的代码，在启动的时候加上setTimeout延迟，就可以了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">setTimeout(() =&gt; &#123;</span><br><span class="line">  this.startGuide()</span><br><span class="line">&#125;, 900)</span><br></pre></td></tr></table></figure></p><p>因为我把向导封装成组件了，其他的页面也可以进行引用，所以我用watch监听父组件传递的值，详细的请参考完整代码。</p><h4 id="新问题"><a href="#新问题" class="headerlink" title="新问题"></a>新问题</h4><p>解决上面闪一下不加载的问题，但是浏览器控制台会有警告日志：<br>[Violation] Forced reflow while executing JavaScript took 131ms<br>还没解决，后续解决了更新。</p><h4 id="完成代码"><a href="#完成代码" class="headerlink" title="完成代码"></a>完成代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app-container&quot; /&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Driver from &apos;driver.js&apos; // import driver.js</span><br><span class="line">import &apos;driver.js/dist/driver.min.css&apos; // import driver.js css</span><br><span class="line">import excelMergeSteps from &apos;./steps/excelMergeSteps.js&apos; // import steps js config</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &apos;Guide&apos;,</span><br><span class="line">  emits: [&apos;close-guide&apos;],</span><br><span class="line">  components: &#123;&#125;,</span><br><span class="line">  props: &#123;</span><br><span class="line">    guide: &#123;</span><br><span class="line">      type: Boolean,</span><br><span class="line">      require: true,</span><br><span class="line">      default: false,</span><br><span class="line">      validator(value) &#123;</span><br><span class="line">        return [true, false].includes(value)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    content: &#123;</span><br><span class="line">      type: String,</span><br><span class="line">      require: true,</span><br><span class="line">      default: &apos;&apos;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      driver: null</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;&#125;,</span><br><span class="line">  watch: &#123;</span><br><span class="line">    guide: function() &#123;</span><br><span class="line">      if (this.guide) &#123;</span><br><span class="line">        setTimeout(() =&gt; &#123;</span><br><span class="line">          this.startGuide()</span><br><span class="line">        &#125;, 900)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;&#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    // parameter config</span><br><span class="line">    // 官网API：https://www.npmjs.com/package/driver.js</span><br><span class="line">    this.driver = new Driver(&#123;</span><br><span class="line">      className: &apos;scoped-class&apos;, // className to wrap driver.js popover</span><br><span class="line">      animate: true, // 是否设置动画</span><br><span class="line">      opacity: 0.7, // 背景不透明度（0表示只有弹出框，没有覆盖）</span><br><span class="line">      padding: 0, // 元素与边缘之间的距离</span><br><span class="line">      allowClose: true, // 单击覆盖是否应关闭</span><br><span class="line">      overlayClickNext: false, // 点击覆盖是否应该下一步移动</span><br><span class="line">      stageBackground: &apos;#ffffff&apos;, // default: #ffffff，突出显示元素的背景色</span><br><span class="line">      showButtons: true, // 页脚中是否显示控制按钮</span><br><span class="line">      keyboardControl: true, // 允许通过键盘进行控制（退出关闭，箭头键移动）</span><br><span class="line">      doneBtnText: &apos;完成&apos;, // 完成按钮文本</span><br><span class="line">      closeBtnText: &apos;关闭&apos;, // 关闭按钮文本</span><br><span class="line">      prevBtnText: &apos;上一步&apos;, // 上一步按钮文本</span><br><span class="line">      nextBtnText: &apos;下一步&apos;, // 下一步按钮文本</span><br><span class="line">      onHighlightStarted: (Element) =&gt; &#123;&#125;, // 当元素即将高亮显示时调用</span><br><span class="line">      onHighlighted: (Element) =&gt; &#123;&#125;, // 当元素完全高亮显示时调用</span><br><span class="line">      onDeselected: (Element) =&gt; &#123; // 取消选择元素时调用</span><br><span class="line">        this.onDeselected(Element)</span><br><span class="line">      &#125;,</span><br><span class="line">      onReset: (Element) =&gt; &#123;&#125;, // 将要清除覆盖时调用</span><br><span class="line">      onNext: (Element) =&gt; &#123;&#125;, // 在任何步骤上移动到下一步时调用</span><br><span class="line">      onPrevious: (Element) =&gt; &#123;&#125; // 在任何步骤上移动到上一步时调用</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    startGuide() &#123;</span><br><span class="line">      let data = &#123;&#125;</span><br><span class="line">      if (this.content === &apos;excelMerge&apos;) &#123;</span><br><span class="line">        data = excelMergeSteps</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        return false</span><br><span class="line">      &#125;</span><br><span class="line">      this.driver.defineSteps(data)</span><br><span class="line">      this.driver.start()</span><br><span class="line">    &#125;,</span><br><span class="line">    onDeselected(element) &#123;</span><br><span class="line">      this.$emit(&apos;close-guide&apos;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h4&gt;&lt;p&gt;前几天搞了一个VUE页面功能向导，那个是在单独的页面，今天把driver.js引入到一些有功能的页面，启动的时候页面就闪了一下，没有向导功能，google了一下，发现原来是VUE渲染的问题。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/article_vue.jpeg&quot; alt&gt;&lt;/p&gt;
&lt;span class=&quot;label primary&quot;&gt;VUE&lt;/span&gt; &lt;span class=&quot;label info&quot;&gt;插件&lt;/span&gt;
    
    </summary>
    
      <category term="前端" scheme="http://pygo2.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="VUE" scheme="http://pygo2.top/tags/VUE/"/>
    
  </entry>
  
  <entry>
    <title>VUE插件之driver.js</title>
    <link href="http://pygo2.top/articles/29277/"/>
    <id>http://pygo2.top/articles/29277/</id>
    <published>2022-04-24T02:03:11.000Z</published>
    <updated>2022-04-24T02:03:11.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note success">            <p>在开发OpenTool开源工具的时候，在个人中心部分有一个向导，上网查了一下用driver.js，记录一下各项用到的内容，挺好用的VUE插件，推荐。</p>          </div><p><img src="/images/article_vue.jpeg" alt></p><span class="label primary">VUE</span> <span class="label info">插件</span><a id="more"></a><hr><blockquote><p>作用</p></blockquote><p>用于开发Web页面功能操作向导，官网介绍的很明确，而且也没啥难点，直接贴上代码了。</p><blockquote><p>安装</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -S driver.js</span><br></pre></td></tr></table></figure><blockquote><p>VUE代码</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app-container&quot;&gt;</span><br><span class="line">    &lt;div id=&quot;guide-opr-container&quot;&gt;</span><br><span class="line">      &lt;el-button icon=&quot;el-icon-position&quot; type=&quot;primary&quot; @click.prevent.stop=&quot;guide&quot;&gt;</span><br><span class="line">        开启向导</span><br><span class="line">      &lt;/el-button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div id=&quot;guide-data-container&quot; class=&quot;guide-data-container&quot;&gt;</span><br><span class="line">      &lt;aside&gt;</span><br><span class="line">        The guide page is useful for some people who entered the project for the first time. You can briefly introduce the</span><br><span class="line">        features of the project</span><br><span class="line">      &lt;/aside&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Driver from &apos;driver.js&apos; // import driver.js</span><br><span class="line">import &apos;driver.js/dist/driver.min.css&apos; // import driver.js css</span><br><span class="line">import steps from &apos;./guide/steps.js&apos;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &apos;Guide&apos;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      driver: null</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    // parameter config</span><br><span class="line">    // 官网API：https://www.npmjs.com/package/driver.js</span><br><span class="line">    this.driver = new Driver(&#123;</span><br><span class="line">        className: &apos;scoped-class&apos;, // className to wrap driver.js popover</span><br><span class="line">        animate: true, // 是否设置动画</span><br><span class="line">        opacity: 0.7, // 背景不透明度（0表示只有弹出框，没有覆盖）</span><br><span class="line">        padding: 0, // 元素与边缘之间的距离</span><br><span class="line">        allowClose: true, // 单击覆盖是否应关闭</span><br><span class="line">        overlayClickNext: false, // 点击覆盖是否应该下一步移动</span><br><span class="line">        stageBackground: &apos;#ffffff&apos;, // default: #ffffff，突出显示元素的背景色</span><br><span class="line">        showButtons: true, // 页脚中是否显示控制按钮</span><br><span class="line">        keyboardControl: true, // 允许通过键盘进行控制（退出关闭，箭头键移动）</span><br><span class="line">        doneBtnText: &apos;完成&apos;, // 完成按钮文本</span><br><span class="line">        closeBtnText: &apos;关闭&apos;, // 关闭按钮文本</span><br><span class="line">        prevBtnText: &apos;上一步&apos;, // 上一步按钮文本</span><br><span class="line">        nextBtnText: &apos;下一步&apos;, // 下一步按钮文本</span><br><span class="line">        onHighlightStarted: (Element) =&gt; &#123;&#125;, // 当元素即将高亮显示时调用</span><br><span class="line">        onHighlighted: (Element) =&gt; &#123;&#125;, // 当元素完全高亮显示时调用</span><br><span class="line">        onDeselected: (Element) =&gt; &#123; // 取消选择元素时调用</span><br><span class="line">          this.onDeselected(Element)</span><br><span class="line">        &#125;,</span><br><span class="line">        onReset: (Element) =&gt; &#123;&#125;, // 将要清除覆盖时调用</span><br><span class="line">        onNext: (Element) =&gt; &#123;&#125;, // 在任何步骤上移动到下一步时调用</span><br><span class="line">        onPrevious: (Element) =&gt; &#123;&#125; // 在任何步骤上移动到上一步时调用</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    guide() &#123;</span><br><span class="line">      this.driver.defineSteps(steps)</span><br><span class="line">      this.driver.start()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.guide-data-container &#123;</span><br><span class="line">  margin-top: 20px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><blockquote><p>Steps代码</p></blockquote><p>需要在同等目录下建立一个guide文件夹，再建立一个steps.js文件，用来存放向导的数据，根据不同的模块定制不同的js文件。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">const steps = [</span><br><span class="line">  &#123;</span><br><span class="line">    element: &apos;#sidebar-container&apos;,</span><br><span class="line">    popover: &#123;</span><br><span class="line">      title: &apos;系统菜单&apos;,</span><br><span class="line">      description: &apos;系统功能菜单列表，分为一级菜单、二级菜单&apos;,</span><br><span class="line">      position: &apos;right&apos;, // position: left, left-center, left-bottom, top,</span><br><span class="line">      // top-center, top-right, right, right-center, right-bottom,</span><br><span class="line">      // bottom, bottom-center, bottom-right, mid-center</span><br><span class="line">      offset: 20</span><br><span class="line">    &#125;,</span><br><span class="line">    padding: 0</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    element: &apos;#guide-opr-container&apos;,</span><br><span class="line">    popover: &#123;</span><br><span class="line">      title: &apos;导航菜单&apos;,</span><br><span class="line">      description: &apos;打开&amp;&amp;关闭导航菜单&apos;,</span><br><span class="line">      position: &apos;bottom&apos;, // position: left, left-center, left-bottom, top,</span><br><span class="line">      // top-center, top-right, right, right-center, right-bottom,</span><br><span class="line">      // bottom, bottom-center, bottom-right, mid-center</span><br><span class="line">      offset: 20</span><br><span class="line">    &#125;,</span><br><span class="line">    padding: 0</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    element: &apos;#guide-data-container&apos;,</span><br><span class="line">    popover: &#123;</span><br><span class="line">      title: &apos;数据域&apos;,</span><br><span class="line">      description: &apos;系统定制功能的数据展示域&apos;,</span><br><span class="line">      position: &apos;bottom&apos;,</span><br><span class="line">      offset: 0</span><br><span class="line">    &#125;,</span><br><span class="line">    padding: 0</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">export default steps</span><br></pre></td></tr></table></figure></p><blockquote><p>学习参考</p></blockquote><p>driver.js官网：<a href="https://kamranahmed.info/driver.js/#single-element-no-popover" target="_blank" rel="noopener">https://kamranahmed.info/driver.js/#single-element-no-popover</a><br>npm查询：<a href="https://www.npmjs.com/package/driver.js" target="_blank" rel="noopener">https://www.npmjs.com/package/driver.js</a></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note success&quot;&gt;
            &lt;p&gt;在开发OpenTool开源工具的时候，在个人中心部分有一个向导，上网查了一下用driver.js，记录一下各项用到的内容，挺好用的VUE插件，推荐。&lt;/p&gt;
          &lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/article_vue.jpeg&quot; alt&gt;&lt;/p&gt;
&lt;span class=&quot;label primary&quot;&gt;VUE&lt;/span&gt; &lt;span class=&quot;label info&quot;&gt;插件&lt;/span&gt;
    
    </summary>
    
      <category term="前端" scheme="http://pygo2.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="VUE" scheme="http://pygo2.top/tags/VUE/"/>
    
  </entry>
  
  <entry>
    <title>VUE之Props传值参数</title>
    <link href="http://pygo2.top/articles/52857/"/>
    <id>http://pygo2.top/articles/52857/</id>
    <published>2022-04-18T06:35:14.000Z</published>
    <updated>2022-04-18T06:35:14.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note info">            <p>总结一下VUE关于Props的传值。</p>          </div><p><img src="/images/article_vue.jpeg" alt></p><span class="label info">VUE</span><a id="more"></a><hr><blockquote><p>定义</p></blockquote><ul><li>用于父组件对子组件之间的值传递，属于单向传递（父组件-&gt;子组件），不可逆。</li><li>如果对父组件传递过来的值进行赋值，会报错，子组件如想返回父组件传递值，可以用emit。</li></ul><blockquote><p>用途</p></blockquote><p>如定义，就是父组件-&gt;子组件的值传递。</p><blockquote><p>语法糖</p></blockquote><p>父组件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;excel-merge-opr</span><br><span class="line">  :show=&quot;mergeDialogStatus&quot;</span><br><span class="line">  :list=&quot;selectList&quot;</span><br><span class="line">  @close-file-merge=&quot;closeFileMerge&quot;</span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure></p><p>子组件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">props: &#123;</span><br><span class="line">  show: &#123;</span><br><span class="line">    type: Boolean,</span><br><span class="line">    require: true,</span><br><span class="line">    default: false,</span><br><span class="line">    validator(value) &#123;</span><br><span class="line">      return [true, false].includes(value)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  list: &#123;</span><br><span class="line">    type: Array,</span><br><span class="line">    require: true,</span><br><span class="line">    default: function() &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ul><li><p>type<br>数据类型，也就是JS的数据类型：<br>String<br>Number<br>Boolean<br>Array<br>Object<br>Date<br>Function<br>Symbol</p></li><li><p>require<br>是否必须传入，可选值：true false</p></li><li><p>default<br>默认值</p></li><li><p>validator<br>传入值校验</p></li></ul><blockquote><p>学习参考</p></blockquote><p>官网API：<a href="https://v3.cn.vuejs.org/guide/component-props.html#prop-%E7%B1%BB%E5%9E%8B" target="_blank" rel="noopener">https://v3.cn.vuejs.org/guide/component-props.html#prop-%E7%B1%BB%E5%9E%8B</a></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;
            &lt;p&gt;总结一下VUE关于Props的传值。&lt;/p&gt;
          &lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/article_vue.jpeg&quot; alt&gt;&lt;/p&gt;
&lt;span class=&quot;label info&quot;&gt;VUE&lt;/span&gt;
    
    </summary>
    
      <category term="前端" scheme="http://pygo2.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="VUE" scheme="http://pygo2.top/tags/VUE/"/>
    
  </entry>
  
  <entry>
    <title>ElementUI-table-tree全部展开与关闭</title>
    <link href="http://pygo2.top/articles/21429/"/>
    <id>http://pygo2.top/articles/21429/</id>
    <published>2022-04-10T15:15:39.000Z</published>
    <updated>2022-04-10T15:15:39.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/Element-UI.jpg" alt></p><div class="note primary">            <p>ElementUI官网的table组件有个tree模式，就是类似于树模式的table表格样式，这个功能用于菜单展示挺好看也挺好用。</p>          </div><span class="label default">VUE</span> <span class="label danger">Element-UI</span><a id="more"></a><hr><p>直接上代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app-container&quot;&gt;</span><br><span class="line">    &lt;!-- 按钮 --&gt;</span><br><span class="line">    &lt;el-row&gt;</span><br><span class="line">      &lt;el-button id=&quot;btn-create&quot; :size=&quot;btnBaseAttrs.size&quot; :plain=&quot;btnBaseAttrs.plain&quot; :round=&quot;btnBaseAttrs.round&quot; :disabled=&quot;btnDisabled&quot; @click=&quot;openAddMenu&quot;&gt;</span><br><span class="line">        &lt;svg-icon icon-class=&quot;i_add&quot; /&gt;  新增</span><br><span class="line">      &lt;/el-button&gt;</span><br><span class="line">      &lt;el-button id=&quot;btn-tip&quot; type=&quot;success&quot; class=&quot;btn-margin&quot; :plain=&quot;btnBaseAttrs.plain&quot; :round=&quot;btnBaseAttrs.round&quot; :size=&quot;btnBaseAttrs.size&quot; :disabled=&quot;btnDisabled&quot; @click=&quot;openTip()&quot;&gt;</span><br><span class="line">        &lt;svg-icon icon-class=&quot;i_sm&quot; /&gt;  字段说明</span><br><span class="line">      &lt;/el-button&gt;</span><br><span class="line">      &lt;!-- 是否展开 --&gt;</span><br><span class="line">      &lt;menu-expand :expand=&quot;expandStatus&quot; @menu-expand-status=&quot;menuExpandStatus&quot; /&gt;</span><br><span class="line">    &lt;/el-row&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--Table表格--&gt;</span><br><span class="line">    &lt;div id=&quot;data-container&quot; class=&quot;table-sty&quot;&gt;</span><br><span class="line">      &lt;el-table</span><br><span class="line">        ref=&quot;multipleSourceTableRef&quot;</span><br><span class="line">        :data=&quot;tableData&quot;</span><br><span class="line">        :row-key=&quot;tableAttrs.rowKey&quot;</span><br><span class="line">        :size=&quot;tableAttrs.size&quot;</span><br><span class="line">        :fit=&quot;tableAttrs.fit&quot;</span><br><span class="line">        :show-header=&quot;tableAttrs.showHeader&quot;</span><br><span class="line">        :highlight-current-row=&quot;tableAttrs.hcr&quot;</span><br><span class="line">        :border=&quot;tableAttrs.border&quot;</span><br><span class="line">        style=&quot;width: 100%;margin-bottom: 20px;&quot;</span><br><span class="line">        :default-expand-all=&quot;tableAttrs.expand&quot;</span><br><span class="line">        :default-sort=&quot;&#123; prop: &apos;id&apos;, order: &apos;asc&apos; &#125;&quot;</span><br><span class="line">        :empty-text=&quot;tableAttrs.emptyText&quot;</span><br><span class="line">        :header-cell-style=&quot;setTableHeaderStyle&quot;</span><br><span class="line">        :row-style=&quot;setTableRowStyle&quot;</span><br><span class="line">        :tree-props=&quot;tableAttrs.treeProps&quot;</span><br><span class="line">        :expand-row-keys=&quot;tableOneKeys&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-table-column fixed=&quot;left&quot; prop=&quot;id&quot; label=&quot;菜单ID&quot; width=&quot;180&quot; :align=&quot;tableRowAttrs.align&quot; sortable :show-overflow-tooltip=&quot;tableRowAttrs.sot&quot; /&gt;</span><br><span class="line">        &lt;el-table-column prop=&quot;name&quot; label=&quot;RTX名称&quot; width=&quot;180&quot; :align=&quot;tableRowAttrs.align&quot; sortable :show-overflow-tooltip=&quot;tableRowAttrs.sot&quot; /&gt;</span><br><span class="line">        &lt;el-table-column prop=&quot;title&quot; label=&quot;中文名称&quot; width=&quot;180&quot; :align=&quot;tableRowAttrs.align&quot; sortable :show-overflow-tooltip=&quot;tableRowAttrs.sot&quot; /&gt;</span><br><span class="line">        &lt;el-table-column prop=&quot;path&quot; label=&quot;请求地址&quot; width=&quot;180&quot; :header-align=&quot;tableRowAttrs.headerAlign&quot; align=&quot;left&quot; sortable :show-overflow-tooltip=&quot;tableRowAttrs.sot&quot; /&gt;</span><br><span class="line">        &lt;el-table-column prop=&quot;icon&quot; label=&quot;菜单图标&quot; width=&quot;180&quot; :align=&quot;tableRowAttrs.align&quot; sortable :show-overflow-tooltip=&quot;tableRowAttrs.sot&quot; /&gt;</span><br><span class="line">        &lt;el-table-column prop=&quot;level&quot; label=&quot;级别&quot; width=&quot;180&quot; :align=&quot;tableRowAttrs.align&quot; sortable :show-overflow-tooltip=&quot;tableRowAttrs.sot&quot; /&gt;</span><br><span class="line">        &lt;el-table-column label=&quot;上级菜单信息&quot; :align=&quot;tableRowAttrs.align&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;pid&quot; label=&quot;上级菜单ID&quot; width=&quot;180&quot; :align=&quot;tableRowAttrs.align&quot; sortable :show-overflow-tooltip=&quot;tableRowAttrs.sot&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;pname&quot; label=&quot;上级菜单RTX&quot; width=&quot;180&quot; :align=&quot;tableRowAttrs.align&quot; sortable :show-overflow-tooltip=&quot;tableRowAttrs.sot&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;ptitle&quot; label=&quot;上级菜单名称&quot; width=&quot;180&quot; :align=&quot;tableRowAttrs.align&quot; sortable :show-overflow-tooltip=&quot;tableRowAttrs.sot&quot; /&gt;</span><br><span class="line">        &lt;/el-table-column&gt;</span><br><span class="line">        &lt;el-table-column label=&quot;开发者配置信息&quot; :align=&quot;tableRowAttrs.align&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;component&quot; label=&quot;组件&quot; width=&quot;180&quot; :align=&quot;tableRowAttrs.align&quot; sortable :show-overflow-tooltip=&quot;tableRowAttrs.sot&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;redirect&quot; label=&quot;重定向&quot; width=&quot;180&quot; :align=&quot;tableRowAttrs.align&quot; sortable :show-overflow-tooltip=&quot;tableRowAttrs.sot&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;hidden&quot; label=&quot;Hidden属性&quot; width=&quot;180&quot; :align=&quot;tableRowAttrs.align&quot; sortable :show-overflow-tooltip=&quot;tableRowAttrs.sot&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;noCache&quot; label=&quot;noCache属性&quot; width=&quot;180&quot; :align=&quot;tableRowAttrs.align&quot; sortable :show-overflow-tooltip=&quot;tableRowAttrs.sot&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;affix&quot; label=&quot;Affix属性&quot; width=&quot;180&quot; :align=&quot;tableRowAttrs.align&quot; sortable :show-overflow-tooltip=&quot;tableRowAttrs.sot&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;breadcrumb&quot; label=&quot;Breadcrumb属性&quot; width=&quot;180&quot; :align=&quot;tableRowAttrs.align&quot; sortable :show-overflow-tooltip=&quot;tableRowAttrs.sot&quot; /&gt;</span><br><span class="line">        &lt;/el-table-column&gt;</span><br><span class="line">        &lt;el-table-column label=&quot;创建时间&quot; :header-align=&quot;tableRowAttrs.headerAlign&quot; :align=&quot;tableRowAttrs.align&quot; width=&quot;240&quot; sortable&gt;</span><br><span class="line">          &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">            &lt;i class=&quot;el-icon-time&quot; /&gt;</span><br><span class="line">            &lt;span style=&quot;margin-left: 20px&quot;&gt;&#123;&#123; scope.row.create_time &#125;&#125;&lt;/span&gt;</span><br><span class="line">          &lt;/template&gt;</span><br><span class="line">        &lt;/el-table-column&gt;</span><br><span class="line">        &lt;el-table-column prop=&quot;create_rtx&quot; label=&quot;创建者RTX&quot; width=&quot;180&quot; :align=&quot;tableRowAttrs.align&quot; :show-overflow-tooltip=&quot;tableRowAttrs.sot&quot; /&gt;</span><br><span class="line">        &lt;el-table-column fixed=&quot;right&quot; label=&quot;操作&quot; :align=&quot;tableRowAttrs.align&quot; width=&quot;200&quot;&gt;</span><br><span class="line">          &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">            &lt;el-tooltip effect=&quot;dark&quot; content=&quot;详情&quot; placement=&quot;top&quot;&gt;</span><br><span class="line">              &lt;i class=&quot;el-icon-document&quot; @click=&quot;rowHandleEdit(scope.$index, scope.row, &apos;detail&apos;)&quot; /&gt;</span><br><span class="line">            &lt;/el-tooltip&gt;</span><br><span class="line">            &lt;el-tooltip class=&quot;icon-item&quot; effect=&quot;dark&quot; content=&quot;编辑&quot; placement=&quot;top&quot;&gt;</span><br><span class="line">              &lt;i class=&quot;el-icon-edit&quot; @click=&quot;rowHandleEdit(scope.$index, scope.row, &apos;info&apos;)&quot; /&gt;</span><br><span class="line">            &lt;/el-tooltip&gt;</span><br><span class="line">          &lt;/template&gt;</span><br><span class="line">        &lt;/el-table-column&gt;</span><br><span class="line">        &lt;el-table-column fixed=&quot;right&quot; label=&quot;状态管理&quot; :align=&quot;tableRowAttrs.align&quot; width=&quot;200&quot;&gt;</span><br><span class="line">          &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">            &lt;menu-status :row=&quot;scope.row&quot; /&gt;</span><br><span class="line">          &lt;/template&gt;</span><br><span class="line">        &lt;/el-table-column&gt;</span><br><span class="line">      &lt;/el-table&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 暂定table、tree 2种显示模式，不做page分页 --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 提示说明 --&gt;</span><br><span class="line">    &lt;menu-tip :show=&quot;tipDialogStatus&quot; @close-tip=&quot;closeTip&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 新增 --&gt;</span><br><span class="line">    &lt;menu-add :show=&quot;addDialogStatus&quot; @close-add-menu=&quot;closeAddMenu&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 详情 --&gt;</span><br><span class="line">    &lt;menu-detail :show=&quot;detailDialogStatus&quot; :row-md5=&quot;oprSelectRtx&quot; @close-detail-menu=&quot;closeDetailMenu&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 编辑 --&gt;</span><br><span class="line">    &lt;menu-set :show=&quot;setDialogStatus&quot; :row-md5=&quot;oprSelectRtx&quot; @close-set-menu=&quot;closeSetMenu&quot; /&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import store from &apos;@/store&apos;</span><br><span class="line">import &#123; getMenuList &#125; from &apos;@/api/manage&apos;</span><br><span class="line">import MenuExpand from &apos;@/components/manage/MenuExpand&apos;</span><br><span class="line">import MenuTip from &apos;@/components/manage/MenuTip&apos;</span><br><span class="line">import MenuDetail from &apos;@/components/manage/MenuDetail&apos;</span><br><span class="line">import MenuAdd from &apos;@/components/manage/MenuAdd&apos;</span><br><span class="line">import MenuSet from &apos;@/components/manage/MenuSet&apos;</span><br><span class="line">import MenuStatus from &apos;@/components/manage/MenuStatus&apos;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &apos;Menu&apos;,</span><br><span class="line">  emits: [],</span><br><span class="line">  components: &#123;</span><br><span class="line">    &apos;menu-expand&apos;: MenuExpand,</span><br><span class="line">    &apos;menu-tip&apos;: MenuTip,</span><br><span class="line">    &apos;menu-detail&apos;: MenuDetail,</span><br><span class="line">    &apos;menu-add&apos;: MenuAdd,</span><br><span class="line">    &apos;menu-set&apos;: MenuSet,</span><br><span class="line">    &apos;menu-status&apos;: MenuStatus</span><br><span class="line">  &#125;,</span><br><span class="line">  props: &#123;&#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      btnDisabled: false, // 按钮禁用状态</span><br><span class="line">      expandStatus: false, // 是否展开</span><br><span class="line">      // button attributes</span><br><span class="line">      btnBaseAttrs: &#123;</span><br><span class="line">        size: &apos;medium&apos;, // 大小 medium / small / mini / &apos;&apos;</span><br><span class="line">        type: &apos;primary&apos;, // 类型 primary / success / warning / danger / info / text</span><br><span class="line">        plain: true, // 是否为朴素按钮</span><br><span class="line">        round: false, // 是否为圆角按钮</span><br><span class="line">        circle: false // 是否为圆形按钮</span><br><span class="line">      &#125;,</span><br><span class="line">      // switch attrs</span><br><span class="line">      switchAttrs: &#123; // switch attrs</span><br><span class="line">        disabled: false, // 是否禁用</span><br><span class="line">        width: 40, // 宽度（像素），默认40</span><br><span class="line">        activeText: &apos;展开&apos;, // 打开时的文字描述</span><br><span class="line">        inactiveText: &apos;关闭&apos;, // 关闭时的文字描述</span><br><span class="line">        activeValue: true, // 打开时的value</span><br><span class="line">        inactiveValue: false, // 打开时的value</span><br><span class="line">        activeColor: &apos;#ff4949&apos;, // 打开时的背景色</span><br><span class="line">        inactiveColor: &apos;#13ce66&apos; // 关闭时的背景色</span><br><span class="line">      &#125;,</span><br><span class="line">      // table attributes</span><br><span class="line">      tableAttrs: &#123;</span><br><span class="line">        rowKey: &apos;id&apos;,</span><br><span class="line">        stripe: true, // 是否为斑马纹 true/false</span><br><span class="line">        border: true, // 是否带有纵向边框 true/false</span><br><span class="line">        size: &apos;medium&apos;, // 尺寸 medium / small / mini / &apos;&apos;</span><br><span class="line">        fit: true, // 列的宽度是否自撑开 true/false</span><br><span class="line">        showHeader: true, // 是否显示表头 true/false</span><br><span class="line">        hcr: true, // 是否要高亮当前行highlight-current-row true/false</span><br><span class="line">        height: 450, // 高度</span><br><span class="line">        maxHeight: 450, // 最大高度(属性为Table指定最大高度，此时若表格所需的高度大于最大高度，则会显示一个滚动条。)</span><br><span class="line">        expand: false, // default-expand-all 是否默认展开所有行，当 Table 包含展开行存在或者为树形表格时有效</span><br><span class="line">        treeProps: &#123; children: &apos;children&apos; &#125;, // treeProps</span><br><span class="line">        showSum: true, // 表尾合计</span><br><span class="line">        sumText: &apos;统计&apos;, // 合计行第一列的文</span><br><span class="line">        emptyText: &apos;暂无数据&apos; // 空数据时显示的文本内容</span><br><span class="line">      &#125;,</span><br><span class="line">      // table row: label column-key prop width min-width sortable</span><br><span class="line">      tableRowAttrs: &#123;</span><br><span class="line">        type: &apos;selection&apos;, // selection多选框 / index索引 / expand可展开的按钮</span><br><span class="line">        index: 1, // 如果设置了 type=index，可以通过传递 index 属性来自定义索引</span><br><span class="line">        fixed: true, // 列固定，值有left、right，默认为left</span><br><span class="line">        resizable: true, // 对应列是否可以通过拖动改变宽度 true/false</span><br><span class="line">        align: &apos;center&apos;, // 对齐方式 left / center / right</span><br><span class="line">        headerAlign: &apos;center&apos;, // 表头对齐方式，若不设置该项，则使用表格的对齐方式 left / center / right</span><br><span class="line">        sot: true // showOverflowTooltip 多余的内容会在hover时以tooltip的形式显示出来</span><br><span class="line">      &#125;,</span><br><span class="line">      tableData: [], // table data</span><br><span class="line">      tableOneKeys: [], // 一级菜单的key，格式为[&#123;id: 1&#125;, &#123;id: 2&#125;...]，用于开关闭菜单折叠</span><br><span class="line">      tipDialogStatus: false, // tip</span><br><span class="line">      oprSelectRtx: &apos;&apos;, // 当前选择数据的RTX</span><br><span class="line">      deleteConfirm: false, // 删除确认dialog状态</span><br><span class="line">      detailDialogStatus: false, // 详情dialog</span><br><span class="line">      setDialogStatus: false, // 编辑dialog</span><br><span class="line">      addDialogStatus: false // 新增dialog</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;&#125;,</span><br><span class="line">  watch: &#123;&#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line">    this.getMenuList()</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;&#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    getMenuList() &#123; // 请求后台API初始化表格数据</span><br><span class="line">      // 初始化选择参数</span><br><span class="line">      this.oprSelectRtx = &apos;&apos;</span><br><span class="line"></span><br><span class="line">      // list列表参数</span><br><span class="line">      const data = &#123;</span><br><span class="line">        &apos;rtx_id&apos;: store.getters.rtx_id</span><br><span class="line">      &#125;</span><br><span class="line">      return new Promise((resolve, reject) =&gt; &#123;</span><br><span class="line">        getMenuList(data).then(response =&gt; &#123;</span><br><span class="line">          const &#123; status_id, data &#125; = response</span><br><span class="line">          if (status_id === 100 || status_id === 101) &#123;</span><br><span class="line">            this.tableData = data.list</span><br><span class="line">            this.tableOneKeys = data.keys</span><br><span class="line">          &#125;</span><br><span class="line">          resolve(response)</span><br><span class="line">        &#125;).catch(error =&gt; &#123;</span><br><span class="line">          this.loading = false</span><br><span class="line">          reject(error)</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    setTableHeaderStyle() &#123; // table title样式</span><br><span class="line">      return &#123;</span><br><span class="line">        background: &apos;#eee&apos;,</span><br><span class="line">        color: &apos;#606266&apos;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    setTableRowStyle(&#123; row, rowIndex &#125;) &#123; // table row样式</span><br><span class="line">      if (row &amp;&amp; row.level === &apos;1&apos;) &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">          background: &apos;#FFEE99&apos;, // 42B984 FFFF00</span><br><span class="line">          color: &apos;#000000&apos;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    rowHandleEdit(index, row, type) &#123; // table row 编辑详情</span><br><span class="line">      if (!row || !type || !row.md5_id) &#123;</span><br><span class="line">        return false</span><br><span class="line">      &#125;</span><br><span class="line">      this.oprSelectRtx = row.md5_id</span><br><span class="line">      if (type === &apos;detail&apos;) &#123;</span><br><span class="line">        this.detailDialogStatus = true</span><br><span class="line">      &#125; else if (type === &apos;info&apos;) &#123;</span><br><span class="line">        this.setDialogStatus = true</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    closeDetailMenu() &#123; // 关闭菜单详情dg</span><br><span class="line">      this.detailDialogStatus = false</span><br><span class="line">    &#125;,</span><br><span class="line">    closeSetMenu(isRefresh) &#123; // 关闭编辑菜单dg</span><br><span class="line">      this.setDialogStatus = false</span><br><span class="line">      if (isRefresh) &#123;</span><br><span class="line">        this.getMenuList()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    openAddMenu() &#123; // 打开新增菜单dg</span><br><span class="line">      this.addDialogStatus = true</span><br><span class="line">    &#125;,</span><br><span class="line">    closeAddMenu(isRefresh) &#123; // 关闭新增菜单dg</span><br><span class="line">      this.addDialogStatus = false</span><br><span class="line">      if (isRefresh) &#123;</span><br><span class="line">        this.getMenuList()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    menuExpandStatus(status) &#123; // 打开/关闭table 子菜单</span><br><span class="line">      this.expandStatus = status</span><br><span class="line">      this.tableOneKeys.map(item =&gt; &#123;</span><br><span class="line">        return this.$refs.multipleSourceTableRef.toggleRowExpansion(item, status)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    openTip() &#123; // 开启tip</span><br><span class="line">      this.tipDialogStatus = true</span><br><span class="line">    &#125;,</span><br><span class="line">    closeTip() &#123; // 关闭tip</span><br><span class="line">      this.tipDialogStatus = false</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.btn-margin &#123;</span><br><span class="line">  margin-left: 20px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.table-sty &#123;</span><br><span class="line">  margin-top: 25px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.icon-item &#123;</span><br><span class="line">  margin-left: 45px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/Element-UI.jpg&quot; alt&gt;&lt;/p&gt;
&lt;div class=&quot;note primary&quot;&gt;
            &lt;p&gt;ElementUI官网的table组件有个tree模式，就是类似于树模式的table表格样式，这个功能用于菜单展示挺好看也挺好用。&lt;/p&gt;
          &lt;/div&gt;
&lt;span class=&quot;label default&quot;&gt;VUE&lt;/span&gt; &lt;span class=&quot;label danger&quot;&gt;Element-UI&lt;/span&gt;
    
    </summary>
    
      <category term="VUE" scheme="http://pygo2.top/categories/VUE/"/>
    
    
      <category term="VUE" scheme="http://pygo2.top/tags/VUE/"/>
    
      <category term="Element-UI" scheme="http://pygo2.top/tags/Element-UI/"/>
    
  </entry>
  
  <entry>
    <title>Conda常用命令</title>
    <link href="http://pygo2.top/articles/56751/"/>
    <id>http://pygo2.top/articles/56751/</id>
    <published>2022-04-02T15:45:26.000Z</published>
    <updated>2022-04-02T15:45:26.000Z</updated>
    
    <content type="html"><![CDATA[<span class="label default">Python</span> <span class="label info">Conda</span><div class="note primary">            <p>搞Python都知道玩Python必须得有虚拟环境，那么常用的工具主要有Conda、Virtualenv、Pipenv、Pyflow。。。。。。还有其他的，常用的就是列举的那些了，经过长时间的使用，还是觉得Conda最好用，本篇记录一下Conda常用的命令，，<font color="red" size="4.5">Conda很强发大。。。。。。</font></p>          </div><p><img src="/images/article_conda.jpeg" alt></p><a id="more"></a><hr><p>本篇记录Conda的常用命令，安装略。</p><h4 id="创建虚拟环境"><a href="#创建虚拟环境" class="headerlink" title="创建虚拟环境"></a>创建虚拟环境</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 创建环境，-n为--name的缩写参数</span><br><span class="line">conda create --name env_name</span><br><span class="line">conda create -n env_name</span><br><span class="line"></span><br><span class="line"># 创建指定python3.7版本环境</span><br><span class="line">conda create -n env_name python=3.7</span><br><span class="line"></span><br><span class="line"># 创建指定python版本下包含某些包</span><br><span class="line">conda create -n env_name python=3.7 XXXX XXXX XXXX</span><br><span class="line"></span><br><span class="line"># 克隆其他环境</span><br><span class="line">conda create -n new_env_name --clone old_env_name</span><br></pre></td></tr></table></figure><h4 id="激活-退出"><a href="#激活-退出" class="headerlink" title="激活/退出"></a>激活/退出</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda activate env_name</span><br><span class="line">conda deactivate</span><br></pre></td></tr></table></figure><h4 id="列举环境"><a href="#列举环境" class="headerlink" title="列举环境"></a>列举环境</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda info -e / conda info --envs</span><br><span class="line">conda env list</span><br></pre></td></tr></table></figure><h4 id="删除环境"><a href="#删除环境" class="headerlink" title="删除环境"></a>删除环境</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda remove -n env_name --all</span><br></pre></td></tr></table></figure><h4 id="安装-卸载包"><a href="#安装-卸载包" class="headerlink" title="安装/卸载包"></a>安装/卸载包</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">conda install xxx [-n env_name]</span><br><span class="line">conda uninstall xxx [-n env_name]</span><br><span class="line"></span><br><span class="line"># 激活环境</span><br><span class="line">conda activate env_name</span><br><span class="line"># pip安装/卸载</span><br><span class="line">pip install/uninstall xxxx</span><br></pre></td></tr></table></figure><p>[]括号内容为非必需填写，如果不加为当前环境。</p><h4 id="导出虚拟环境"><a href="#导出虚拟环境" class="headerlink" title="导出虚拟环境"></a>导出虚拟环境</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 导出</span><br><span class="line">conda list -e [-n env_name] &gt; requirements.txt</span><br><span class="line"># 安装</span><br><span class="line">conda install --yes --file requirements.txt</span><br></pre></td></tr></table></figure><h4 id="分享虚拟环境"><a href="#分享虚拟环境" class="headerlink" title="分享虚拟环境"></a>分享虚拟环境</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 导出当前虚拟环境</span><br><span class="line">conda env export &gt; environment.yml</span><br><span class="line"></span><br><span class="line"># 创建保存的虚拟环境</span><br><span class="line">conda env create -f environment.yml</span><br></pre></td></tr></table></figure><h4 id="帮助"><a href="#帮助" class="headerlink" title="帮助"></a>帮助</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 总览命令帮助</span><br><span class="line">conda --help</span><br><span class="line"></span><br><span class="line"># 命令详情帮助</span><br><span class="line">conda xxxx --help</span><br></pre></td></tr></table></figure><p>Conda的功能非常强大，上面只列举的最、最、最常用的命令而已，想详细了解就得花点时间去学了，不过对于日常开发的话学的命令没那么多，整理完成，收工，睡觉去了。</p>]]></content>
    
    <summary type="html">
    
      &lt;span class=&quot;label default&quot;&gt;Python&lt;/span&gt; &lt;span class=&quot;label info&quot;&gt;Conda&lt;/span&gt;
&lt;div class=&quot;note primary&quot;&gt;
            &lt;p&gt;搞Python都知道玩Python必须得有虚拟环境，那么常用的工具主要有Conda、Virtualenv、Pipenv、Pyflow。。。。。。还有其他的，常用的就是列举的那些了，经过长时间的使用，还是觉得Conda最好用，本篇记录一下Conda常用的命令，，&lt;font color=&quot;red&quot; size=&quot;4.5&quot;&gt;Conda很强发大。。。。。。&lt;/font&gt;&lt;/p&gt;
          &lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/article_conda.jpeg&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://pygo2.top/categories/Python/"/>
    
    
      <category term="Python" scheme="http://pygo2.top/tags/Python/"/>
    
      <category term="Conda" scheme="http://pygo2.top/tags/Conda/"/>
    
  </entry>
  
  <entry>
    <title>Element-UI【Form组件】unpected-width报错的解决</title>
    <link href="http://pygo2.top/articles/16084/"/>
    <id>http://pygo2.top/articles/16084/</id>
    <published>2022-03-29T13:21:15.000Z</published>
    <updated>2022-03-29T13:21:15.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/Element-UI.jpg" alt></p><div class="note primary">            <p>在使用Element-UI的Form组件时候，发现控制台报了一个<strong><em>Error：[ElementForm]unpected width</em></strong></p>          </div><span class="label info">VUE</span> <span class="label primary">Element-UI</span><a id="more"></a><hr><p>报错：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">vue.esm.js:1897 Error: [ElementForm]unpected width</span><br><span class="line">    at VueComponent.getLabelWidthIndex (element-ui.common.js:23014)</span><br><span class="line">    at VueComponent.deregisterLabelWidth (element-ui.common.js:23027)</span><br><span class="line">    at VueComponent.updateLabelWidth (element-ui.common.js:23226)</span><br><span class="line">    at VueComponent.beforeDestroy (element-ui.common.js:23253)</span><br><span class="line">    at invokeWithErrorHandling (vue.esm.js:1863)</span><br><span class="line">    at callHook (vue.esm.js:4222)</span><br><span class="line">    at VueComponent.Vue.$destroy (vue.esm.js:3981)</span><br><span class="line">    at destroy (vue.esm.js:3168)</span><br><span class="line">    at invokeDestroyHook (vue.esm.js:6119)</span><br><span class="line">    at invokeDestroyHook (vue.esm.js:6124)</span><br></pre></td></tr></table></figure></p><p>使用<strong><em>el-form</em></strong>组件的时候，设置labelWidth设为auto时，如果el-form-item内容如果你用了v-show会提示上面的错误，可以v-if替换成v-show，每次重新渲染组件，这样就可以了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/Element-UI.jpg&quot; alt&gt;&lt;/p&gt;
&lt;div class=&quot;note primary&quot;&gt;
            &lt;p&gt;在使用Element-UI的Form组件时候，发现控制台报了一个&lt;strong&gt;&lt;em&gt;Error：[ElementForm]unpected width&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
          &lt;/div&gt;
&lt;span class=&quot;label info&quot;&gt;VUE&lt;/span&gt; &lt;span class=&quot;label primary&quot;&gt;Element-UI&lt;/span&gt;
    
    </summary>
    
      <category term="VUE" scheme="http://pygo2.top/categories/VUE/"/>
    
    
      <category term="VUE" scheme="http://pygo2.top/tags/VUE/"/>
    
      <category term="Element-UI" scheme="http://pygo2.top/tags/Element-UI/"/>
    
  </entry>
  
  <entry>
    <title>Hashcat的学习</title>
    <link href="http://pygo2.top/articles/14167/"/>
    <id>http://pygo2.top/articles/14167/</id>
    <published>2022-03-21T12:08:47.000Z</published>
    <updated>2022-03-21T12:08:47.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_hashcat.jpg" alt></p><div class="note info">            <p>业余时间学习一下密码破解，以后能搞个程序破解个WIFI也是好的啊，哈哈哈～</p>          </div><span class="label info">Hashcat</span><a id="more"></a><hr><ul><li>官网：<a href="https://hashcat.net/hashcat/" target="_blank" rel="noopener">https://hashcat.net/hashcat/</a></li><li>Github：<a href="https://github.com/hashcat/hashcat" target="_blank" rel="noopener">https://github.com/hashcat/hashcat</a></li></ul><p><font color="red" size="5.5">自我学习中。。。。</font>！！！。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_hashcat.jpg&quot; alt&gt;&lt;/p&gt;
&lt;div class=&quot;note info&quot;&gt;
            &lt;p&gt;业余时间学习一下密码破解，以后能搞个程序破解个WIFI也是好的啊，哈哈哈～&lt;/p&gt;
          &lt;/div&gt;
&lt;span class=&quot;label info&quot;&gt;Hashcat&lt;/span&gt;
    
    </summary>
    
      <category term="工具集" scheme="http://pygo2.top/categories/%E5%B7%A5%E5%85%B7%E9%9B%86/"/>
    
    
      <category term="Hashcat" scheme="http://pygo2.top/tags/Hashcat/"/>
    
  </entry>
  
  <entry>
    <title>VUE之scripts的学习</title>
    <link href="http://pygo2.top/articles/20773/"/>
    <id>http://pygo2.top/articles/20773/</id>
    <published>2022-03-13T03:27:49.000Z</published>
    <updated>2022-03-13T03:27:49.000Z</updated>
    
    <content type="html"><![CDATA[<span class="label primary">VUE</span><a id="more"></a><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&quot;scripts&quot;: &#123;</span><br><span class="line">  &quot;dev&quot;: &quot;vue-cli-service serve --open --mode development&quot;,</span><br><span class="line">  &quot;lint&quot;: &quot;eslint --ext .js,.vue src&quot;,</span><br><span class="line">  &quot;build:prod&quot;: &quot;vue-cli-service build --report&quot;,</span><br><span class="line">  &quot;build:dev&quot;: &quot;vue-cli-service build --report --mode development&quot;,</span><br><span class="line">  &quot;preview&quot;: &quot;node build/index.js --preview&quot;,</span><br><span class="line">  &quot;new&quot;: &quot;plop&quot;,</span><br><span class="line">  &quot;svgo&quot;: &quot;svgo -f src/icons/svg --config=src/icons/svgo.yml&quot;,</span><br><span class="line">  &quot;test:unit&quot;: &quot;jest --clearCache &amp;&amp; vue-cli-service test:unit&quot;,</span><br><span class="line">  &quot;test:ci&quot;: &quot;npm run lint &amp;&amp; npm run test:unit&quot;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><blockquote><p>dev</p></blockquote><p>开发模式启动we服务</p><blockquote><p>lint</p></blockquote><p>检查代码是否符合eslint语法标准</p><blockquote><p>build:prod</p></blockquote><p>打包生产环境</p><blockquote><p>build:dev</p></blockquote><p>打包开发环境</p><blockquote><p>new</p></blockquote><p>新建一个view/router/store，pop是一个插件，感觉挺不错的</p><blockquote><p>test:unit</p></blockquote><p>单元测试</p><blockquote><p>test:ci</p></blockquote><p>语法检查 + 单元测试</p><font size="5.5" color="red"><strong><em>坚持每天学习。。。。。。</em></strong></font>]]></content>
    
    <summary type="html">
    
      &lt;span class=&quot;label primary&quot;&gt;VUE&lt;/span&gt;
    
    </summary>
    
      <category term="前端" scheme="http://pygo2.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="VUE" scheme="http://pygo2.top/tags/VUE/"/>
    
  </entry>
  
  <entry>
    <title>VUE之.env.xxxx环境的应用</title>
    <link href="http://pygo2.top/articles/55138/"/>
    <id>http://pygo2.top/articles/55138/</id>
    <published>2022-03-09T11:34:34.000Z</published>
    <updated>2022-03-09T11:34:34.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_vue.jpeg" alt></p><p>最近一段时间在写VUE前端项目，发现有.env.development、.env.production，于是查了下官网，学习总结一下。</p><span class="label primary">VUE</span><a id="more"></a><hr><ul><li><p>.env 全局默认配置文件，不论什么环境都会加载合并</p></li><li><p>.env.development 开发环境下的配置文件</p></li><li><p>.env.production 生产环境下的配置文件</p></li></ul><p>加载顺序：.env -&gt; .env.development  或者 .env -&gt; .env.production<br>后续加载配置文件中的变量会覆盖.env环境中同名的变量，而且上述的文件中可以添加变量，添加的变量在项目中可以通过process.env.XXXXX获取。</p><p>注意：<br><div class="note warning">            <p>属性名必须以VUE_APP_开头，比如VUE_APP_XXX</p>          </div></p><p>开发环境.env.development文件示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># base</span><br><span class="line">NODE_ENV = &apos;development&apos;</span><br><span class="line">PORT = 10002</span><br><span class="line"></span><br><span class="line"># api</span><br><span class="line">VUE_APP_BASE_API = &apos;http://127.0.0.1:9999/&apos;</span><br><span class="line">VUE_APP_AVATAR_API = &apos;/user/avatar&apos;</span><br></pre></td></tr></table></figure></p><p>生产环境.env.production文件示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># base</span><br><span class="line">NODE_ENV = &apos;production&apos;</span><br><span class="line">PORT = 10001</span><br><span class="line"></span><br><span class="line"># api</span><br><span class="line">VUE_APP_BASE_API = &apos;http://121.4.56.169:9999/&apos;</span><br><span class="line">VUE_APP_AVATAR_API = &apos;/user/avatar&apos;</span><br></pre></td></tr></table></figure></p><p>官网详细介绍：<a href="https://cli.vuejs.org/zh/guide/mode-and-env.html#%E6%A8%A1%E5%BC%8F" target="_blank" rel="noopener">https://cli.vuejs.org/zh/guide/mode-and-env.html#%E6%A8%A1%E5%BC%8F</a></p><font size="5.5" color="red"><strong><em>坚持每天学习。。。。。。</em></strong></font>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_vue.jpeg&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;最近一段时间在写VUE前端项目，发现有.env.development、.env.production，于是查了下官网，学习总结一下。&lt;/p&gt;
&lt;span class=&quot;label primary&quot;&gt;VUE&lt;/span&gt;
    
    </summary>
    
      <category term="前端" scheme="http://pygo2.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="VUE" scheme="http://pygo2.top/tags/VUE/"/>
    
  </entry>
  
  <entry>
    <title>DB2死锁的处理过程</title>
    <link href="http://pygo2.top/articles/18147/"/>
    <id>http://pygo2.top/articles/18147/</id>
    <published>2022-02-26T12:09:42.000Z</published>
    <updated>2022-02-26T12:09:42.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_db2.jpg" alt></p><div class="note primary">            <p>之前项目主要用Mysql、PostgreSQL，这两天DB2数据库发生-668代码问题，有个表锁死了，大概解决了一天，记录一下。提前说明一下，关于-668以及存在解决方案了，这个文章只是为了记录解决的一个过程，尝试各种方法吧。</p>          </div><span class="label warning">DB2</span> <span class="label info">死锁</span><a id="more"></a><hr><ul><li><a href="http://www.mirocn.com/info/details_156.html" target="_blank" rel="noopener">http://www.mirocn.com/info/details_156.html</a></li><li><a href="https://www.cnblogs.com/ruingy/p/3605487.html" target="_blank" rel="noopener">https://www.cnblogs.com/ruingy/p/3605487.html</a></li><li><a href="https://zhuanlan.zhihu.com/p/201010573" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/201010573</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_db2.jpg&quot; alt&gt;&lt;/p&gt;
&lt;div class=&quot;note primary&quot;&gt;
            &lt;p&gt;之前项目主要用Mysql、PostgreSQL，这两天DB2数据库发生-668代码问题，有个表锁死了，大概解决了一天，记录一下。提前说明一下，关于-668以及存在解决方案了，这个文章只是为了记录解决的一个过程，尝试各种方法吧。&lt;/p&gt;
          &lt;/div&gt;
&lt;span class=&quot;label warning&quot;&gt;DB2&lt;/span&gt; &lt;span class=&quot;label info&quot;&gt;死锁&lt;/span&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://pygo2.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="DB2" scheme="http://pygo2.top/tags/DB2/"/>
    
  </entry>
  
  <entry>
    <title>Gitea代码库的环境搭建</title>
    <link href="http://pygo2.top/articles/3042/"/>
    <id>http://pygo2.top/articles/3042/</id>
    <published>2022-02-22T13:43:18.000Z</published>
    <updated>2022-02-22T13:43:18.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_gitea.jpg" alt></p><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><div class="note primary">            <p>最近基于项目管理文件的事情进行了一些探索，发现github不止可以用来更新、存储代码，也可以作为一个文件仓库存放项目的各类文件，对Github、Gitlab、Gogs、Gitea、Gitee进行了一些学习，也查下了网上对Gitea的呼吁声蛮大的，决定对测试服务器上进行部署使用，看看使用的效果咋样。</p><p><font color="red" size="4.5">学习对Gitea的安装与使用</font>！！！。</p>          </div><span class="label danger">Git</span> <span class="label info">Gitea</span> <span class="label primary">文件仓库</span><a id="more"></a><hr><p>面对项目上建立文件管理仓库，首先想到的就是gitub，平常用这个管理代码项目也居多，但是对于安装集中式管理还是分布式管理当时也纠结了一下，对于统一管理SVN也还是不错的，但是个人更倾向与GIT，下面对于遇到的概念或者安装、部署都做一个记录说明。</p><h4 id="版本管理"><a href="#版本管理" class="headerlink" title="版本管理"></a>版本管理</h4><blockquote><p>集中式版本控制</p></blockquote><p>集中管理的服务器保存所有文件的修订版本，同步更新的时候，需要要先从中央服务器取得最新的版本，然后继续各种处理，最后，再把更新的内容推送给中央服务器。<br>典型的代表SVN，下面是结构图：<br><img src="svn.png" alt></p><blockquote><p>分布式版本控制</p></blockquote><p>分布式版本控制系统根本没有“中央服务器”，每个人的电脑上都是一个完整的版本库。既然每个人电脑上都有一个完整的版本库，那多个人如何协作呢？比方说你在自己电脑上改了文件A，你的同事也在他的电脑上改了文件A，这时，你们俩之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。<br><img src="git.png" alt></p><h4 id="仓库的选择"><a href="#仓库的选择" class="headerlink" title="仓库的选择"></a>仓库的选择</h4><p>之前的单位用的就是Gitlab用来管理内部代码，功能也十分优秀，但是对于几个人维护的项目有点过于强大，所以选择了Gitea小型，够用而且速度没得说。</p><blockquote><p>Github</p></blockquote><p>全球最大的代码托管平台。</p><blockquote><p>Gitlab</p></blockquote><p>是一个用于仓库管理系统的开源项目，使用Git作为代码管理工具，并在此基础上搭建起来的Web服务。</p><blockquote><p>Gogs</p></blockquote><p>目标是打造一个最简单、最快速和最轻松的方式搭建自助 Git 服务。使用 Go 语言开发，并且支持所有平台，包括 Linux、Mac OS X、Windows 以及 ARM 平台。</p><blockquote><p>Gitea</p></blockquote><p>Gogs的一个分支（28.8K）。</p><blockquote><p>Gitee</p></blockquote><p>是开源中国（OSChina）推出的基于Git的代码托管服务，包括三个版本，分别是：社区版、企业版和高校版。</p><h4 id="资源下载"><a href="#资源下载" class="headerlink" title="资源下载"></a>资源下载</h4><p>对于安装部署Gitea环境，需要提前准备好数据库、GitForWindows、Gitea这3个软件就可以，在项目上我选择了MariaDB数据库。</p><ul><li>Gitea：<a href="https://dl.gitea.io/gitea" target="_blank" rel="noopener">https://dl.gitea.io/gitea</a></li><li>Mariadb数据库：<a href="https://mariadb.org/download/?t=mariadb&amp;o=true&amp;p=mariadb&amp;r=5.5.68" target="_blank" rel="noopener">https://mariadb.org/download/?t=mariadb&amp;o=true&amp;p=mariadb&amp;r=5.5.68</a></li><li>Git客户端：<a href="https://gitforwindows.org/" target="_blank" rel="noopener">https://gitforwindows.org/</a></li></ul><p>为了方便大家统一进行下载，也准备了网盘下载地址：<br>链接: <a href="https://pan.baidu.com/s/1AUolZ1FrqLXvnVU1vRr2OA" target="_blank" rel="noopener">https://pan.baidu.com/s/1AUolZ1FrqLXvnVU1vRr2OA</a><br>提取码: pa3s</p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><blockquote><p>数据库</p></blockquote><p>安装略。<br>初始化语句：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">create database gitea default character set utf8 collate utf8_general_ci;</span><br><span class="line">create user &apos;gitea&apos;@&apos;%&apos; identified by &apos;123456&apos;;</span><br><span class="line">grant all privileges on gitea.* to &apos;gitea&apos;@&apos;%&apos;;</span><br><span class="line">flush  privileges;</span><br></pre></td></tr></table></figure></p><blockquote><p>GitForWindows</p></blockquote><p>略。</p><p>以上数据库与GitForWindows请自行安装部署，也很简单。</p><blockquote><p>Gitea</p></blockquote><p>Windows安装部署：<br>1.文件放在D:\gitea<br>2.启动：双击下载文件</p><p>可选操作：加入系统服务。<br>添加服务：sc create gitea start= auto binPath= “\”D:\gitea\gitea.exe\” web –config \”D:\gitea\custom\conf\app.ini\””<br>删除服务：sc delete gitea</p><p>Linux安装部署：<br>1.下载<br>2.文件放在/opt/www/gitea/gitea<br>3.修改权限<br>chmod 777 gitea-1.x.x-linux-amd64<br>4.启动 &amp;&amp; 后台启动<br>nohup /opt/www/gitea/gitea web &gt; /dev/null 2&gt;&amp;1 &amp;</p><p>5.其它方式：<br><a href="https://docs.gitea.io/zh-cn/linux-service/" target="_blank" rel="noopener">https://docs.gitea.io/zh-cn/linux-service/</a></p><h4 id="Gitea命令参数"><a href="#Gitea命令参数" class="headerlink" title="Gitea命令参数"></a>Gitea命令参数</h4><p>以下是Gitea命令参数的详情，常用的就是web、dump这2个命令，详情请参考官网：<a href="https://docs.gitea.io/zh-cn/command-line/" target="_blank" rel="noopener">https://docs.gitea.io/zh-cn/command-line/</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">COMMANDS:</span><br><span class="line">   web              Start Gitea web server 启动服务</span><br><span class="line">   serv             This command should only be called by SSH shell</span><br><span class="line">   hook             Delegate commands to corresponding Git hooks</span><br><span class="line">   dump             Dump Gitea files and database 备份</span><br><span class="line">   cert             Generate self-signed certificate</span><br><span class="line">   admin            Command line interface to perform common administrative operations</span><br><span class="line">   generate         Command line interface for running generators</span><br><span class="line">   migrate          Migrate the database</span><br><span class="line">   keys             This command queries the Gitea database to get the authorized command for a given ssh key fingerprint</span><br><span class="line">   convert          Convert the database</span><br><span class="line">   doctor           Diagnose problems</span><br><span class="line">   manager          Manage the running gitea process</span><br><span class="line">   embedded         Extract embedded resources</span><br><span class="line">   migrate-storage  Migrate the storage</span><br><span class="line">   docs             Output CLI documentation</span><br><span class="line">   dump-repo        Dump the repository from git/github/gitea/gitlab dump其他仓库</span><br><span class="line">   restore-repo     Restore the repository from disk</span><br><span class="line">   help, h          Shows a list of commands or help for one command</span><br></pre></td></tr></table></figure></p><h4 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h4><p>访问本机地址：127.0.0.1:3000<br>默认端口：3000</p><p>初始化gitea，进行下一步系统配置。</p><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><blockquote><p>数据库配置</p></blockquote><p><img src="pz1.png" alt></p><blockquote><p>基本配置</p></blockquote><p><img src="pz2.png" alt></p><blockquote><p>可选配置</p></blockquote><p><img src="pz3.png" alt></p><blockquote><p>用户配置</p></blockquote><p><img src="pz4.png" alt></p><blockquote><p>管理配置</p></blockquote><p><img src="pz5.png" alt></p><h4 id="目录说明"><a href="#目录说明" class="headerlink" title="目录说明"></a>目录说明</h4><p>Gitea系统初始化成功会让自动建立一个管理员，对于上述配置后对应的目录也会自动生成。</p><blockquote><p>custom</p></blockquote><p>配置文件目录，包含项目全局、数据库、仓库存储位置、访问服务、服务等各项配置。</p><blockquote><p>data</p></blockquote><p>数据存放目录。</p><blockquote><p>log</p></blockquote><p>日志存储目录。</p><blockquote><p>gitea执行文件</p></blockquote><p>用于启动服务。</p><h4 id="Gitea应用"><a href="#Gitea应用" class="headerlink" title="Gitea应用"></a>Gitea应用</h4><p>具体Gitea的使用也没什么难度，主要就是创建仓库、维护等操作，对于管理员有个管理权限，部署成功后接下来就是对Gitea的探索。<br>创建仓库：</p><ul><li>拥有者</li><li>仓库名称</li><li>描述</li><li>模板</li><li>工单标签</li><li>.gitignore</li><li>授权许可</li><li>默认分支</li><li>签名信任模型</li></ul><p><img src="create.png" alt></p><h4 id="Git使用"><a href="#Git使用" class="headerlink" title="Git使用"></a>Git使用</h4><p>本来不打算介绍Git的使用了，但是把基础的操作功能记录下，对于初学者也可能比较友好，在Github上搞几个项目Git命令自然而然就会了，基础的功能还是比较好记的，有兴趣的人可以查查官网，命令超级多，而且参数也不少。</p><blockquote><p>GIT初始化仓库</p></blockquote><p>方式一：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gitea创建仓库</span><br><span class="line">git clone 仓库URL</span><br></pre></td></tr></table></figure></p><p>方式二：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git init 仓库名称</span><br><span class="line">git remote add origin 仓库URL</span><br></pre></td></tr></table></figure></p><blockquote><p>GIT提交暂缓区</p></blockquote><p>全量提交：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure></p><p>指定文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add 指定文件</span><br></pre></td></tr></table></figure></p><blockquote><p>GIT提交本地仓库</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m “提交内容”</span><br></pre></td></tr></table></figure><blockquote><p>GIT提交远程仓库与更新</p></blockquote><p>提交远程仓库：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure></p><p>更新远程仓库：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull origin master</span><br></pre></td></tr></table></figure></p><p>这里主要介绍Gitea安装与使用，对于git命令的学习请参考下列学习地址。</p><h4 id="学习参考"><a href="#学习参考" class="headerlink" title="学习参考"></a>学习参考</h4><p>GIT官网：<a href="https://git-scm.com/book/zh/v2" target="_blank" rel="noopener">https://git-scm.com/book/zh/v2</a><br>GIT基础学习：<a href="https://www.runoob.com/manual/git-guide/" target="_blank" rel="noopener">https://www.runoob.com/manual/git-guide/</a><br>GIT菜鸟：<a href="https://www.runoob.com/git/git-basic-operations.html" target="_blank" rel="noopener">https://www.runoob.com/git/git-basic-operations.html</a></p><p><img src="/images/article_gitflow.png" alt></p><font color="red" size="4.5">每天坚持学习！</font>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_gitea.jpg&quot; alt&gt;&lt;/p&gt;
&lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;div class=&quot;note primary&quot;&gt;
            &lt;p&gt;最近基于项目管理文件的事情进行了一些探索，发现github不止可以用来更新、存储代码，也可以作为一个文件仓库存放项目的各类文件，对Github、Gitlab、Gogs、Gitea、Gitee进行了一些学习，也查下了网上对Gitea的呼吁声蛮大的，决定对测试服务器上进行部署使用，看看使用的效果咋样。&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;red&quot; size=&quot;4.5&quot;&gt;学习对Gitea的安装与使用&lt;/font&gt;！！！。&lt;/p&gt;
          &lt;/div&gt;
&lt;span class=&quot;label danger&quot;&gt;Git&lt;/span&gt; &lt;span class=&quot;label info&quot;&gt;Gitea&lt;/span&gt; &lt;span class=&quot;label primary&quot;&gt;文件仓库&lt;/span&gt;
    
    </summary>
    
      <category term="服务器" scheme="http://pygo2.top/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="Linux" scheme="http://pygo2.top/tags/Linux/"/>
    
      <category term="git" scheme="http://pygo2.top/tags/git/"/>
    
      <category term="gitea" scheme="http://pygo2.top/tags/gitea/"/>
    
  </entry>
  
  <entry>
    <title>ES6Async与Await方法的学习</title>
    <link href="http://pygo2.top/articles/17064/"/>
    <id>http://pygo2.top/articles/17064/</id>
    <published>2022-02-18T11:39:37.000Z</published>
    <updated>2022-02-18T11:39:37.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_es6_1.jpeg" alt></p><span class="label primary">VUE</span> <span class="label info">ES6</span><a id="more"></a><hr><h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><p>很简单，一句话：<br>async用于异步方法，await用于等待异步方法执行完成。</p><p>所以，await必须搭配async异步方法使用。</p><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><blockquote><p>async</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">async function demo() &#123;</span><br><span class="line">　　return &apos;hello world&apos;;</span><br><span class="line">&#125;</span><br><span class="line">console.log(demo())</span><br><span class="line">console.log(&apos;run...&apos;)</span><br><span class="line"></span><br><span class="line">运行结果：</span><br><span class="line">run...</span><br><span class="line">hello world</span><br></pre></td></tr></table></figure><p>async函数返回的是一个promise对象，对返回值可以进行then…catch操作。</p><blockquote><p>await</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">async function demo2() &#123;</span><br><span class="line">　　 const res = await demo1()</span><br><span class="line">    console.log(&apos;inner run....&apos;)</span><br><span class="line">&#125;</span><br><span class="line">console.log(demo2())</span><br><span class="line">console.log(&apos;run...&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">运行结果：</span><br><span class="line">run...</span><br><span class="line">hello world</span><br><span class="line">inner run....</span><br></pre></td></tr></table></figure><p>await只能在async方面的里面使用，让后面的执行语句或方法要等待当前await方法的结果后才能再执行。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_es6_1.jpeg&quot; alt&gt;&lt;/p&gt;
&lt;span class=&quot;label primary&quot;&gt;VUE&lt;/span&gt; &lt;span class=&quot;label info&quot;&gt;ES6&lt;/span&gt;
    
    </summary>
    
      <category term="前端" scheme="http://pygo2.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="VUE" scheme="http://pygo2.top/tags/VUE/"/>
    
  </entry>
  
  <entry>
    <title>Flask请求参数的总结</title>
    <link href="http://pygo2.top/articles/40970/"/>
    <id>http://pygo2.top/articles/40970/</id>
    <published>2022-02-11T07:22:56.000Z</published>
    <updated>2022-02-11T07:22:56.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_python.jpg" alt></p><span class="label primary">Python</span> <span class="label danger">Flask</span><a id="more"></a><hr><p>日常写项目用Flask比较多，不管是写成前端集成的还是单独作为API项目性能都还是很不错的，对Flask API接收参数做一个总结，记录一下。<br>首先，引用flask对象的request。</p><h4 id="GET请求"><a href="#GET请求" class="headerlink" title="GET请求"></a>GET请求</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">from flask import request</span><br><span class="line"></span><br><span class="line">@app.route(&apos;/user/info&apos;, methods=[&apos;GET&apos;])</span><br><span class="line">@cross_origin(supports_credentials=True)</span><br><span class="line">def info():</span><br><span class="line">    print(request.args)</span><br><span class="line">    print(request.values)</span><br></pre></td></tr></table></figure><blockquote><p>requests.args</p></blockquote><p>平常开发用这个获取get参数比较多，数据类型：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ImmutableMultiDict([(&apos;rtx&apos;, &apos;mingliang.gao&apos;)])</span><br></pre></td></tr></table></figure></p><blockquote><p>request.values</p></blockquote><p>也可以用这个获取参数，但是values同时获取get以及post请求的参数，数据类型：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CombinedMultiDict([ImmutableMultiDict([(&apos;rtx&apos;, &apos;mingliang.gao&apos;)]), ImmutableMultiDict([])])</span><br></pre></td></tr></table></figure></p><h4 id="POST请求"><a href="#POST请求" class="headerlink" title="POST请求"></a>POST请求</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">from flask import request</span><br><span class="line"></span><br><span class="line">@app.route(&apos;/user/info&apos;, methods=[&apos;GET&apos;])</span><br><span class="line">@cross_origin(supports_credentials=True)</span><br><span class="line">def info():</span><br><span class="line">    print(request.form)</span><br><span class="line">    print(request.data)</span><br><span class="line">    print(request.get_json())</span><br></pre></td></tr></table></figure><blockquote><p>requests.form</p></blockquote><p>主要是对于前端form表单的参数获取，数据类型：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ImmutableMultiDict([])</span><br></pre></td></tr></table></figure></p><blockquote><p>request.data</p></blockquote><p>json数据的获取方式之一，但是数据是byte类型，不建议使用。</p><blockquote><p>request.get_json()</p></blockquote><p>json数据最常用的方式，直接就是dict类型。</p><h4 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">from flask import request</span><br><span class="line"></span><br><span class="line">@app.route(&apos;/file/&apos;, methods=[&apos;GET&apos;])</span><br><span class="line">@cross_origin(supports_credentials=True)</span><br><span class="line">def file():</span><br><span class="line">    print(request.files)</span><br></pre></td></tr></table></figure><blockquote><p>requests.files</p></blockquote><p>用files去获取请求的文件，数据流是二进制文件，stream写入文件。</p><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><blockquote><p>requests.method</p></blockquote><p>用来获取当前请求的方法，get、post等。</p><blockquote><p>requests.url</p></blockquote><p>请求的URL地址。</p><blockquote><p>requests.headers</p></blockquote><p>http请求的headers内容，可以直接用get方法进行数据获取，例如：request.headers.get(‘rtx-id’)。</p><blockquote><p>requests.blueprint</p></blockquote><p>获取请求的蓝图。</p><blockquote><p>requests.endpoint</p></blockquote><p>请求方法的endpoint。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_python.jpg&quot; alt&gt;&lt;/p&gt;
&lt;span class=&quot;label primary&quot;&gt;Python&lt;/span&gt; &lt;span class=&quot;label danger&quot;&gt;Flask&lt;/span&gt;
    
    </summary>
    
      <category term="Python" scheme="http://pygo2.top/categories/Python/"/>
    
    
      <category term="Python" scheme="http://pygo2.top/tags/Python/"/>
    
      <category term="Flask" scheme="http://pygo2.top/tags/Flask/"/>
    
  </entry>
  
</feed>
