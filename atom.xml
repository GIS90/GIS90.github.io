<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>PyGo²</title>
  
  <subtitle>一个爱&lt;font size=&quot;5&quot; color=&quot;#BF0060&quot;&gt;老婆&lt;/font&gt;的&lt;font size=&quot;5&quot; color=&quot;#FF4500&quot;&gt;Python&lt;/font&gt;程序猿。。。。。。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://pygo2.cn/"/>
  <updated>2020-11-28T00:43:34.000Z</updated>
  <id>http://pygo2.cn/</id>
  
  <author>
    <name>mingliang.gao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux云服务器环境初始化</title>
    <link href="http://pygo2.cn/articles/49695/"/>
    <id>http://pygo2.cn/articles/49695/</id>
    <published>2020-11-28T00:43:34.000Z</published>
    <updated>2020-11-28T00:43:34.000Z</updated>
    
    <content type="html"><![CDATA[<span class="label success">Linux</span> <span class="label info">SSH</span> <span class="label default">git</span> <span class="label warning">Supervisor</span> <span class="label danger">Swap</span>  <span class="label primary">Nginx</span><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><div class="note info">            <p>新购买的腾讯云服务器需要在上面进行环境的一些处理以及软件安装，这里我介绍一下我的服务器初始化过程。</p>          </div><p><img src="/images/article_linux_yun.jpg" alt></p><a id="more"></a><hr><h3 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h3><p>CentOS Linux release 7.5.1804 (Core)</p><p>Linux查看系统版本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/*release*</span><br></pre></td></tr></table></figure></p><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><h4 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h4><blockquote><p>添加用户与组</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 新建用户</span><br><span class="line">useradd mingliang.gao</span><br><span class="line"># 新建组</span><br><span class="line">groupadd opsdev</span><br><span class="line"># 用户设置密码</span><br><span class="line">passwd mingliang.gao</span><br><span class="line"># 用户添加工作组</span><br><span class="line">usermod -G opsdev mingliang.gao</span><br></pre></td></tr></table></figure><blockquote><p>配置用户root权限</p></blockquote><p>root用户vim /etc/sudoers<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rootALL=(ALL) ALL</span><br><span class="line">mingliang.gao    ALL=(ALL)    ALL</span><br></pre></td></tr></table></figure></p><blockquote><p>其他</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">删除用户：userdel 用户名</span><br><span class="line">删除组：groupdel 组名</span><br></pre></td></tr></table></figure><h4 id="VIM"><a href="#VIM" class="headerlink" title="VIM"></a>VIM</h4><p>新的云服务器初始化环境只有VI，但是编辑的时候VIM很好用，需要安装。</p><blockquote><p>安装</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install vim</span><br></pre></td></tr></table></figure><blockquote><p>配置</p></blockquote><p>vi /etc/vimrc，打开vimrc配置问题添加一下2行简单配置，如果详细配置请百度。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set nu          // 设置显示行号</span><br><span class="line">set showmode    // 设置在命令行界面最下面显示当前模式等</span><br></pre></td></tr></table></figure></p><h4 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a>SSH</h4><p>用于免密码连接登录。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id 用户@服务器IP</span><br><span class="line">输入用户登录密码</span><br></pre></td></tr></table></figure></p><p>详情：<a href="/articles/1431/" target="_blank" class="block_project_a">SSH之免密码登录</a></p><h4 id="SWAP"><a href="#SWAP" class="headerlink" title="SWAP"></a>SWAP</h4><p>有些人可能对swap可能陌生，简单说下SWAP可以理解成虚拟内存，当服务器物理内存不足时，拿出部分硬盘指定空间当swap分区（虚拟成内存）使用，从而解决内存容量不足的情况。<br>可以先free一下看下是否又swap，如果想配置请用root用户操作。</p><blockquote><p>生成</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dd if=/dev/zero of=/var/swap bs=1024 count=3072000</span><br><span class="line">mkswap /var/swap</span><br><span class="line">swapon /var/swap</span><br><span class="line">free -m</span><br></pre></td></tr></table></figure><p>解释一下dd，可以理解成dd获取了磁盘的一块空间，有兴趣的可以深入学习一下dd。</p><blockquote><p>Swap开机初始化</p></blockquote><p>vi /etc/fstab，最后一行添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swap /var/swap swap defaults 0 0</span><br></pre></td></tr></table></figure></p><blockquote><p>清理swap</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swapoff /var/swap</span><br></pre></td></tr></table></figure><blockquote><p>Swap活跃使用度</p></blockquote><p>vim /proc/sys/vm/swappiness，范围是0～100，指数越大使用的活跃度越大，建议30-50即可。</p><h4 id="git"><a href="#git" class="headerlink" title="git"></a>git</h4><blockquote><p>查看</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">which git</span><br></pre></td></tr></table></figure><blockquote><p>安装</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install git</span><br></pre></td></tr></table></figure><blockquote><p>配置</p></blockquote><p>下面是全局配置，也可以在单独的git项目中单独配置属于项目的git配置。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 用户名</span><br><span class="line">git config --global user.name &quot;mingliang.gao&quot;</span><br><span class="line"># 邮箱</span><br><span class="line">git config --global user.email &quot;gaoming971366@163.com&quot;</span><br><span class="line"></span><br><span class="line"># 查看配置</span><br><span class="line">git config --list</span><br></pre></td></tr></table></figure></p><h4 id="MariaDB"><a href="#MariaDB" class="headerlink" title="MariaDB"></a>MariaDB</h4><p><a href="/articles/3296/" target="_blank" class="block_project_a">MariaDB安装与配置</a></p><h4 id="Supervisor"><a href="#Supervisor" class="headerlink" title="Supervisor"></a>Supervisor</h4><blockquote><p>安装</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yum install -y supervisor</span><br><span class="line"></span><br><span class="line"># 启动服务</span><br><span class="line">systemctl start supervisord</span><br><span class="line"></span><br><span class="line"># 开机自启动：</span><br><span class="line">systemctl enable supervisord</span><br></pre></td></tr></table></figure><blockquote><p>查看下进程</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep supervisord</span><br></pre></td></tr></table></figure><p>系统默认的启用命令是：/usr/bin/supervisord -c /etc/supervisord.conf</p><blockquote><p>自定义配置</p></blockquote><p>切换root执行。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">echo_supervisord_conf &gt; /etc/supervisord.d/supervisord.conf</span><br><span class="line">cd /etc/supervisord.d</span><br><span class="line">mkdir include</span><br><span class="line">mkdir -p /var/log/supervisord</span><br></pre></td></tr></table></figure></p><p>echo_supervisord_conf是配置文件写入，把项目配置文件与是sp的配置文件放在一起便于管理，建立include存放项目的对应配置文件，以下是本人的配置文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[unix_http_server]</span><br><span class="line">file=/var/run/supervisor.sock   ;;UNIX socket 文件，supervisorctl会使用其与supervisord通信</span><br><span class="line">chmod=0777                     ;;socket文件的mode，默认是0700</span><br><span class="line">;chown=nobody:nogroup           ;;socket文件的owner，格式：uid:gid</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[supervisorctl]</span><br><span class="line">serverurl=unix:///var/run/supervisor.sock   ;;通过UNIX socket连接supervisord，路径与unix_http_server部分的file一致</span><br><span class="line"></span><br><span class="line">[rpcinterface:supervisor]</span><br><span class="line">supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface</span><br><span class="line"></span><br><span class="line">[supervisord]</span><br><span class="line">logfile=/var/log/supervisord/supervisord.log    ;;日志文件</span><br><span class="line">logfile_maxbytes=50MB               ;;日志文件大小，超出会rotate，默认 50MB。如果设成0，表示不限制大小</span><br><span class="line">logfile_backups=10                  ;;日志文件保留备份数量默认10，设为0表示不备份</span><br><span class="line">loglevel=info                       ;;日志级别，默认info，其它: debug,warn,trace</span><br><span class="line">pidfile=/var/run/supervisord.pid    ;;pid 文件</span><br><span class="line">nodaemon=false                      ;;是否在前台启动，默认是false，即以 daemon 的方式启动</span><br><span class="line">minfds=1024                         ;;可以打开的文件描述符的最小值，默认 1024</span><br><span class="line">minprocs=200                        ;;可以打开的进程数的最小值，默认 200</span><br><span class="line"></span><br><span class="line">[include]</span><br><span class="line">files = /etc/supervisord.d/include/*.conf</span><br></pre></td></tr></table></figure></p><p>启动命令：/usr/bin/supervisord -c /etc/supervisord.d/supervisord.conf<br>-c为指定配置文件。</p><p>这样启动的supervisor如果重启需要杀死进程：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep supervisord</span><br><span class="line">kill 进程ID</span><br></pre></td></tr></table></figure></p><p>为了方便我把2个命令合并到一起：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep supervisord | grep -v grep | awk -F &quot; &quot; &apos;&#123;print $2&#125;&apos; | xargs kill</span><br></pre></td></tr></table></figure></p><p>直接执行上面这句话就可以直接杀死进行，这是个通用杀死指定进程的命令，只需要更换grep supervisord需要查询过滤的进程关键字。</p><blockquote><p>其他</p></blockquote><p>贴一下自己的supervisord项目配置文件。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[program:htinfo_mngs]</span><br><span class="line">directory=/home/mingliang.gao/py_project/htinfo_mngs</span><br><span class="line">command=.venv/bin/gunicorn -c etc/prod/gunicorn.conf wsgi:app</span><br><span class="line">autostart=False                         ;; 是否开机自动启动</span><br><span class="line">autorestart=False                       ;; 是否挂了自动重启</span><br><span class="line">redirect_stderr=True                    ;; 是否把stderr定向到stdout</span><br><span class="line">stopasgroup=True</span><br><span class="line">;;user=mingliang.gao                    ;;用哪个用户启动进程，默认是root</span><br><span class="line">priority=999                            ;;进程启动优先级，默认999，值小的优先启动</span><br><span class="line">stdout_logfile_maxbytes=20MB            ;;stdout 日志文件大小，默认50MB</span><br><span class="line">stdout_logfile_backups = 20             ;;stdout 日志文件备份数，默认是10</span><br><span class="line">stdout_logfile=/var/log/supervisord/supervisor_htinfo_mngs.log</span><br></pre></td></tr></table></figure></p><h4 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h4><blockquote><p>检查gcc环境</p></blockquote><p>gcc编译器。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 检查gcc环境</span><br><span class="line">gcc -v</span><br><span class="line"></span><br><span class="line"># 安装</span><br><span class="line">yum -y install gcc</span><br></pre></td></tr></table></figure></p><blockquote><p>安装Nginx</p></blockquote><p>root用户或者sudo命令。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 查看版本</span><br><span class="line">yum list | grep nginx</span><br><span class="line"></span><br><span class="line"># 安装</span><br><span class="line">yum -y install nginx</span><br></pre></td></tr></table></figure></p><p>安装后执行whereis Nginx</p><ul><li>执行目录：/usr/sbin/nginx</li><li>模块所在目录：/usr/lib64/nginx</li><li>配置所在目录：/etc/nginx/</li><li>默认站点目录：/usr/share/nginx/html</li></ul><blockquote><p>启动</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 启动/停止/重启</span><br><span class="line">systemctl start/stop/restart nginx.service</span><br><span class="line"># 开启启动</span><br><span class="line">systemctl enable nginx.service</span><br><span class="line"># 重新加载配置</span><br><span class="line">systemctl reload nginx.service</span><br><span class="line"># 查看状态</span><br><span class="line">systemctl status nginx.service</span><br></pre></td></tr></table></figure><blockquote><p>查看进程</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep nginx</span><br></pre></td></tr></table></figure><blockquote><p>开放端口</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 添加端口</span><br><span class="line">firewall-cmd --zone=public --add-port=80/tcp --permanent</span><br><span class="line"></span><br><span class="line"># 重加载或者重启</span><br><span class="line">firewall-cmd --reload</span><br><span class="line">systemctl restart firewalld</span><br><span class="line"></span><br><span class="line"># 查看</span><br><span class="line">firewall-cmd --list-all</span><br></pre></td></tr></table></figure><p>这里根据自己的项目需求，对外开放端口。</p><blockquote><p>配置</p></blockquote><p>下面是我的nginx配置，仅供参考：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"># For more information on configuration, see:</span><br><span class="line">#   * Official English Documentation: http://nginx.org/en/docs/</span><br><span class="line">#   * Official Russian Documentation: http://nginx.org/ru/docs/</span><br><span class="line"></span><br><span class="line">user root;</span><br><span class="line">worker_processes 2;</span><br><span class="line">error_log /var/log/nginx/error.log;</span><br><span class="line">pid /run/nginx.pid;</span><br><span class="line"></span><br><span class="line"># Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.</span><br><span class="line">include /usr/share/nginx/modules/*.conf;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    # use epoll</span><br><span class="line">    worker_connections 1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># sendfile on;</span><br><span class="line"># tcp_nopush on;</span><br><span class="line"></span><br><span class="line"># keepalive_timeout 65;</span><br><span class="line"></span><br><span class="line"># gzip压缩功能设置</span><br><span class="line"># gzip on;</span><br><span class="line"># gzip_min_length 1k;</span><br><span class="line"># gzip_buffers 4 16k;</span><br><span class="line"># gzip_http_version 1.0;</span><br><span class="line"># gzip_comp_level 6;</span><br><span class="line"># gzip_types text/html text/plain text/css text/javascript application/json application/javascript application/x-javascript application/xml;</span><br><span class="line"># gzip_vary on;</span><br><span class="line"></span><br><span class="line"># http_proxy 设置</span><br><span class="line"># client_max_body_size 10m;</span><br><span class="line"># client_body_buffer_size 128k;</span><br><span class="line"># proxy_connect_timeout 75;</span><br><span class="line"># proxy_send_timeout 75;</span><br><span class="line"># proxy_read_timeout 75;</span><br><span class="line"># proxy_buffer_size 4k;</span><br><span class="line"># proxy_buffers 4 32k;</span><br><span class="line"># proxy_busy_buffers_size 64k;</span><br><span class="line"># proxy_temp_file_write_size 64k;</span><br><span class="line"># proxy_temp_path /usr/local/nginx/proxy_temp 1 2;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">                      &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">                      &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile            on;</span><br><span class="line">    tcp_nopush          on;</span><br><span class="line">    tcp_nodelay         on;</span><br><span class="line">    keepalive_timeout   65;</span><br><span class="line">    types_hash_max_size 2048;</span><br><span class="line"></span><br><span class="line">    include             /etc/nginx/mime.types;</span><br><span class="line">    default_type        application/octet-stream;</span><br><span class="line"></span><br><span class="line">    # Load modular configuration files from the /etc/nginx/conf.d directory.</span><br><span class="line">    # See http://nginx.org/en/docs/ngx_core_module.html#include</span><br><span class="line">    # for more information.</span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line"></span><br><span class="line"># Settings for a TLS enabled server.</span><br><span class="line">#</span><br><span class="line">#    server &#123;</span><br><span class="line">#        listen       443 ssl http2 default_server;</span><br><span class="line">#        listen       [::]:443 ssl http2 default_server;</span><br><span class="line">#        server_name  _;</span><br><span class="line">#        root         /usr/share/nginx/html;</span><br><span class="line">#</span><br><span class="line">#        ssl_certificate &quot;/etc/pki/nginx/server.crt&quot;;</span><br><span class="line">#        ssl_certificate_key &quot;/etc/pki/nginx/private/server.key&quot;;</span><br><span class="line">#        ssl_session_cache shared:SSL:1m;</span><br><span class="line">#        ssl_session_timeout  10m;</span><br><span class="line">#        ssl_ciphers HIGH:!aNULL:!MD5;</span><br><span class="line">#        ssl_prefer_server_ciphers on;</span><br><span class="line">#</span><br><span class="line">#        # Load configuration files for the default server block.</span><br><span class="line">#        include /etc/nginx/default.d/*.conf;</span><br><span class="line">#</span><br><span class="line">#        location / &#123;</span><br><span class="line">#        &#125;</span><br><span class="line">#</span><br><span class="line">#        error_page 404 /404.html;</span><br><span class="line">#            location = /40x.html &#123;</span><br><span class="line">#        &#125;</span><br><span class="line">#</span><br><span class="line">#        error_page 500 502 503 504 /50x.html;</span><br><span class="line">#            location = /50x.html &#123;</span><br><span class="line">#        &#125;</span><br><span class="line">#    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ul><li>因为有些参数在腾讯云服务器不能识别，所以有些被注释。</li><li>user root本人使用root用户启动，使用哪个用户就配置哪个</li></ul><p>server配置，单独文件，存放/etc/nginx/conf.d<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen  80;</span><br><span class="line">    server_name     _;</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/default_server.access.log  main;</span><br><span class="line">    root        /home/mingliang.gao/projects/blog;</span><br><span class="line"></span><br><span class="line">    location = / &#123;</span><br><span class="line">        # index    index.html index.htm;</span><br><span class="line">        index    root.html;</span><br><span class="line">    &#125;</span><br><span class="line">    location / &#123;</span><br><span class="line">        index index.jsp index.html index.htm;</span><br><span class="line">        proxy_redirect off;</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Real-PORT $remote_port;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    error_page 404 /error.html;</span><br><span class="line">        location = /40x.html &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    error_page 500 502 503 504 /error.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ul><li>server_name：域名</li><li>listen：端口</li></ul><blockquote><p>常用命令</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 指定配置文件</span><br><span class="line">nginx -c /etc/nginx/nginx.conf</span><br><span class="line"></span><br><span class="line"># 重新加载配置文件，执行这个可以不用重启</span><br><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure><blockquote><p>访问</p></blockquote><p>配置完把nginx重启之后，访问IP:PORT。</p><blockquote><p>源码安装</p></blockquote><p><a href="/articles/47364/" target="_blank" class="block_project_a">Nginx源码安装教程</a></p><h3 id="详细连接"><a href="#详细连接" class="headerlink" title="详细连接"></a>详细连接</h3><p><a href="/articles/3296/" target="_blank" class="block_project_a">MariaDB安装与配置</a><br><a href="/articles/40662/" target="_blank" class="block_project_a">Git服务器仓库并上传</a><br>Supervisor学习：<a href="https://www.cnblogs.com/xuezhigu/p/7660203.html" target="_blank" rel="noopener">https://www.cnblogs.com/xuezhigu/p/7660203.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;span class=&quot;label success&quot;&gt;Linux&lt;/span&gt; &lt;span class=&quot;label info&quot;&gt;SSH&lt;/span&gt; &lt;span class=&quot;label default&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;label warning&quot;&gt;Supervisor&lt;/span&gt; &lt;span class=&quot;label danger&quot;&gt;Swap&lt;/span&gt;  &lt;span class=&quot;label primary&quot;&gt;Nginx&lt;/span&gt;
&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;div class=&quot;note info&quot;&gt;
            &lt;p&gt;新购买的腾讯云服务器需要在上面进行环境的一些处理以及软件安装，这里我介绍一下我的服务器初始化过程。&lt;/p&gt;
          &lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/article_linux_yun.jpg&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="服务器" scheme="http://pygo2.cn/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="Mysql" scheme="http://pygo2.cn/tags/Mysql/"/>
    
      <category term="Linux" scheme="http://pygo2.cn/tags/Linux/"/>
    
      <category term="git" scheme="http://pygo2.cn/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>MariaDB安装与配置</title>
    <link href="http://pygo2.cn/articles/3296/"/>
    <id>http://pygo2.cn/articles/3296/</id>
    <published>2020-11-23T15:38:32.000Z</published>
    <updated>2020-11-23T15:38:32.000Z</updated>
    
    <content type="html"><![CDATA[<span class="label default">MariaDB</span> <span class="label success">配置</span> <span class="label info">user</span><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><div class="note primary">            <p>在腾讯云上的服务器到期了，又重新买了一个3年的，需要把项目、数据库、管理工具都得迁移新的机器，本篇主要讲MariaDB的安装、初始化以及一些配置，后续会给出一个云服务器环境初始化的讲解。<br>简单说下Mysql与MariaDB的不同：MySQL创始人担心MySQL被Oracle收购后使用MySQL收费，于是基于MySQL6.0研发的分支研发了MariaDB，开源、性能、操作等与MySQL一样。</p>          </div><p><img src="/images/article_mariadb1.jpg" alt></p><a id="more"></a><hr><h3 id="系统说明"><a href="#系统说明" class="headerlink" title="系统说明"></a>系统说明</h3><table><thead><tr><th style="text-align:center">Name</th><th style="text-align:center">Version</th></tr></thead><tbody><tr><td style="text-align:center">服务器</td><td style="text-align:center">Centos7.5x64</td></tr><tr><td style="text-align:center">MariaDB</td><td style="text-align:center">5.5.68</td></tr></tbody></table><h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install mariadb mariadb-server</span><br></pre></td></tr></table></figure><ul><li>mariadb为客户端</li><li>mariadb-server服务端</li></ul><blockquote><p>安装指定版本</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># yum 查询 &amp;&amp; 安装</span><br><span class="line">yum list | grep mariadb</span><br><span class="line">yum -y install mariadb-server.x86_64</span><br><span class="line"></span><br><span class="line"># rpm 不建议使用</span><br><span class="line">rpm -qa | grep mariadb</span><br><span class="line">rpm -ivh xxxxx</span><br></pre></td></tr></table></figure><h4 id="开启服务"><a href="#开启服务" class="headerlink" title="开启服务"></a>开启服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 开启服务</span><br><span class="line">systemctl start mariadb</span><br><span class="line"># 设置为开机自启动服务</span><br><span class="line">systemctl enable mariadb</span><br></pre></td></tr></table></figure><p>Centos7之后，服务管理用systemctl。</p><h4 id="初始化配置"><a href="#初始化配置" class="headerlink" title="初始化配置"></a>初始化配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_secure_installation</span><br></pre></td></tr></table></figure><p>执行数据库初始化命令：</p><ul><li>Enter current password for root (enter for none):<br>回车就行，初始化的时候root密码默认是空的。</li><li>Set root password? [Y/n]<br>是否设置root用户密码，输入y</li><li>New password:</li><li>Re-enter new password:<br>输入2次root密码，2次不一样会让重新输入。</li><li>Remove anonymous users? [Y/n]<br>是否移除匿名用户，输入 y</li><li>Disallow root login remotely? [Y/n]<br>是否拒绝root远程登录，建议输入y，毕竟是root，为了数据安全，为每个数据库创建指定用户，在创建一个总的用户来进行操作，后续会给出相关配置。</li><li>Remove test database and access to it? [Y/n]<br>是否删除test数据库，输入y，不需要测试数据库。</li><li>Reload privilege tables now? [Y/n]<br>重新加载权限表，输入y。</li></ul><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><p>输入密码即可。</p><h4 id="配置UTF-8字符"><a href="#配置UTF-8字符" class="headerlink" title="配置UTF-8字符"></a>配置UTF-8字符</h4><p>切换root用户，vim操作。</p><blockquote><p>/etc/my.cnf</p></blockquote><p>在[mysqld]标签下添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">init_connect=&apos;SET collation_connection = utf8_unicode_ci&apos;</span><br><span class="line">init_connect=&apos;SET NAMES utf8&apos;</span><br><span class="line">character-set-server=utf8</span><br><span class="line">collation-server=utf8_unicode_ci</span><br><span class="line">skip-character-set-client-handshake</span><br></pre></td></tr></table></figure></p><blockquote><p>/etc/my.cnf.d/client.cnf</p></blockquote><p>在[client]标签下添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">default-character-set=utf8</span><br></pre></td></tr></table></figure></p><blockquote><p>/etc/my.cnf.d/mysql-clients.cnf</p></blockquote><p>在[mysql]标签下添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">default-character-set=utf8</span><br></pre></td></tr></table></figure></p><blockquote><p>重启服务</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart mariadb</span><br></pre></td></tr></table></figure><blockquote><p>查看字符集</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">show variables like &quot;%character%&quot;;</span><br><span class="line">show variables like &quot;%collation%&quot;;</span><br></pre></td></tr></table></figure><div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 50%;"><img src="2.png" alt></div><div class="group-picture-column" style="width: 50%;"><img src="1.png" alt></div></div></div></div><h4 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h4><p>上面说过了，创建一个新的用户用来管理或者连接所有数据，这个账号可以作为管理账号，以后创建每一个数据库都对应创建一个用户，分配指定权限，用于数据隔离。创建用户之前在Mysql常用命令中我已经总结了，在这里直接干命令了。<br>连接数据库：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grant all on *.* to &apos;用户名称&apos;@&apos;%&apos; indentified by &apos;密码&apos;;</span><br><span class="line">flush  privileges;</span><br></pre></td></tr></table></figure></p><ul><li>创建一个mingliang.gao的用户，%代表可以远程连接。</li><li>授权所有数据库*所有表对mingliang.gao用户，第一个星号为数据库，第二个为表内容，常用的就是第一个星号改成对应分配的数据以及用户。</li></ul><h4 id="开启远程连接"><a href="#开启远程连接" class="headerlink" title="开启远程连接"></a>开启远程连接</h4><p>云服务器都是禁用端口访问的，所以需要开启，这里用到了firewall-cmd命令，不清楚的可以baidu一下。<br>Root用户操作：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 查看所有防火墙信息</span><br><span class="line">firewall-cmd --list-all</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[sudo] password for mingliang.gao:</span><br><span class="line">public</span><br><span class="line">  target: default</span><br><span class="line">  icmp-block-inversion: no</span><br><span class="line">  interfaces:</span><br><span class="line">  sources:</span><br><span class="line">  services: dhcpv6-client ssh</span><br><span class="line">  ports: 3306/tcp</span><br><span class="line">  protocols:</span><br><span class="line">  masquerade: no</span><br><span class="line">  forward-ports:</span><br><span class="line">  source-ports:</span><br><span class="line">  icmp-blocks:</span><br><span class="line">  rich rules:</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 添加端口</span><br><span class="line">firewall-cmd --zone=public --add-port=3306/tcp --permanent</span><br><span class="line"></span><br><span class="line"># 加载或者重启</span><br><span class="line">firewall-cmd --reload</span><br><span class="line">systemctl restart firewalld</span><br></pre></td></tr></table></figure><p>添加完需要reload或者重启服务，在进行list-all查询，在本机或者其他机器可以进行连接了。</p><h3 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h3><p>后续会出一篇关于云服务器初始化环境的文章。</p><hr><font size="6.5" color="red">既然决定了在技术道路上走下去，就要坚持，致自己。。。。。。</font>]]></content>
    
    <summary type="html">
    
      &lt;span class=&quot;label default&quot;&gt;MariaDB&lt;/span&gt; &lt;span class=&quot;label success&quot;&gt;配置&lt;/span&gt; &lt;span class=&quot;label info&quot;&gt;user&lt;/span&gt;
&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;div class=&quot;note primary&quot;&gt;
            &lt;p&gt;在腾讯云上的服务器到期了，又重新买了一个3年的，需要把项目、数据库、管理工具都得迁移新的机器，本篇主要讲MariaDB的安装、初始化以及一些配置，后续会给出一个云服务器环境初始化的讲解。&lt;br&gt;简单说下Mysql与MariaDB的不同：MySQL创始人担心MySQL被Oracle收购后使用MySQL收费，于是基于MySQL6.0研发的分支研发了MariaDB，开源、性能、操作等与MySQL一样。&lt;/p&gt;
          &lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/article_mariadb1.jpg&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://pygo2.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Mysql" scheme="http://pygo2.cn/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>Windows常用命令</title>
    <link href="http://pygo2.cn/articles/48352/"/>
    <id>http://pygo2.cn/articles/48352/</id>
    <published>2020-11-19T13:42:32.000Z</published>
    <updated>2020-11-19T13:42:32.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note primary">            <p>目前换工作之后，对于Windows系统的机子或者服务器接触日益频繁，身为一个开发，无时不刻不能忘记自己的使命，<font color="red" size="6.5">用命令去装13</font>。<br>在这里总结一下常用的Windows常用的系统命令，比如：cmd、shutdown、compmgmt.msc、net等等，方便快捷的打开需要的软件或者设置。</p>          </div><span class="label success">Windows</span> <span class="label primary">常用命令</span><a id="more"></a><hr><blockquote><p>方式</p></blockquote><p>command + R打开允许，输入命令。</p><blockquote><p>常用命令</p></blockquote><table><thead><tr><th style="text-align:center">describe</th><th style="text-align:center">command</th></tr></thead><tbody><tr><td style="text-align:center">控制台</td><td style="text-align:center">cmd</td></tr><tr><td style="text-align:center">打开资源管理器（我的电脑）</td><td style="text-align:center">explorer</td></tr><tr><td style="text-align:center">注销</td><td style="text-align:center">logoff</td></tr><tr><td style="text-align:center">关机（60s后）</td><td style="text-align:center">shutdown</td></tr><tr><td style="text-align:center">计算机管理</td><td style="text-align:center">compmgmt.msc</td></tr><tr><td style="text-align:center">系统服务</td><td style="text-align:center">services.msc</td></tr><tr><td style="text-align:center">任务管理器</td><td style="text-align:center">taskmgr</td></tr><tr><td style="text-align:center">记事本</td><td style="text-align:center">notepad</td></tr><tr><td style="text-align:center">垃圾整理</td><td style="text-align:center">clearmgr</td></tr><tr><td style="text-align:center">开启/关闭XXXXX服务</td><td style="text-align:center">net start/stop XXXXX</td></tr><tr><td style="text-align:center">计算器</td><td style="text-align:center">calc</td></tr><tr><td style="text-align:center">注册表</td><td style="text-align:center">regedit.exe</td></tr><tr><td style="text-align:center">远程桌面连接</td><td style="text-align:center">mstsc</td></tr></tbody></table><blockquote><p>学习参考</p></blockquote><p>Windows命令大全：<a href="https://www.jb51.net/article/141568.htm" target="_blank" rel="noopener">https://www.jb51.net/article/141568.htm</a></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note primary&quot;&gt;
            &lt;p&gt;目前换工作之后，对于Windows系统的机子或者服务器接触日益频繁，身为一个开发，无时不刻不能忘记自己的使命，&lt;font color=&quot;red&quot; size=&quot;6.5&quot;&gt;用命令去装13&lt;/font&gt;。&lt;br&gt;在这里总结一下常用的Windows常用的系统命令，比如：cmd、shutdown、compmgmt.msc、net等等，方便快捷的打开需要的软件或者设置。&lt;/p&gt;
          &lt;/div&gt;
&lt;span class=&quot;label success&quot;&gt;Windows&lt;/span&gt; &lt;span class=&quot;label primary&quot;&gt;常用命令&lt;/span&gt;
    
    </summary>
    
      <category term="Windows" scheme="http://pygo2.cn/categories/Windows/"/>
    
    
      <category term="Windows" scheme="http://pygo2.cn/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>DB2导入与导出</title>
    <link href="http://pygo2.cn/articles/33542/"/>
    <id>http://pygo2.cn/articles/33542/</id>
    <published>2020-11-10T14:55:24.000Z</published>
    <updated>2020-11-10T14:55:24.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_db2.jpg" alt></p><div class="note primary">            <p>继续学习DB2，本篇主要关于导入与导出的操作。</p>          </div><span class="label warning">DB2</span> <span class="label default">导入</span> <span class="label info">导出</span><a id="more"></a><hr><p>说明：<br>操作在db2cmd控制台。</p><h4 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h4><p>模式说明：<br>一共有5种。</p><ul><li>CREATE：首先创建目标表和它的索引，然后将数据导入到新表中。该选项惟一支持的文件格式是 PC/IXF，还可以指定新表所在表空间的名称。</li><li>INSERT：将导入的数据插入表中，目标表必须已经存在。</li><li>INSERT_UPDATE：将数据插入表中，或者更新表中具有匹配主键的行。目标表必须已经存在，并且定义了一个主键。</li><li>REPLACE：删除所有已有的数据，并将导入的数据插入到一个已有的目标表中。</li><li>REPLACE_CREATE：如果目标表已经存在，则导入实用程序删除已有的数据，并插入新的数据，就像REPLACE选项那样。</li></ul><p>codepage编码：</p><ul><li>1386 GBK</li><li>1208 UTF-8</li></ul><blockquote><p>load</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 无行警告</span><br><span class="line">db2 load from 文件全路径 of del modified by norowwarnings replace into 表名</span><br><span class="line"># 设置编码</span><br><span class="line">db2 load from 文件全路径 of del modified by codepage=1386 replace into 表名</span><br><span class="line"></span><br><span class="line"># 监控载入的进展</span><br><span class="line">db2 load query table 表名</span><br><span class="line"></span><br><span class="line"># 中断加载</span><br><span class="line">db2 load from 文件全路径 of del terminate into 表名</span><br></pre></td></tr></table></figure><blockquote><p>import</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># 标准</span><br><span class="line">db2 import from XXXX.ixf of ixf insert into table</span><br><span class="line"></span><br><span class="line"># 批量提交</span><br><span class="line">db2 import from filename of del COMMITCOUNT 50000 insert into tabname</span><br><span class="line"></span><br><span class="line"># 批量插入</span><br><span class="line">db2 import from filename of del MODIFIED BY COMPOUND=500 insert into tabname</span><br><span class="line"></span><br><span class="line"># 导入条数限制</span><br><span class="line">db2 import from filename of del ROWCOUNT 10000 insert into tabname</span><br><span class="line"></span><br><span class="line"># 导入指定起点数据</span><br><span class="line">db2 import from filename of del RESTARTCOUNT 10 insert into tabname</span><br><span class="line"></span><br><span class="line"># 警告数据的条数限制</span><br><span class="line">db2 import from filename of del WARNINGCOUNT 10 insert into tabname</span><br><span class="line"></span><br><span class="line"># 禁止发出行警告</span><br><span class="line">db2 import from filename of del MODIFIED BY NOROWWARNINGS insert into tabname</span><br></pre></td></tr></table></figure><blockquote><p>db2<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db2 –cvf xxx.sql</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>导入存储过程/函数</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db2 -td@ -v -f e:\procudure.sql</span><br></pre></td></tr></table></figure><h4 id="导出"><a href="#导出" class="headerlink" title="导出"></a>导出</h4><blockquote><p>export</p></blockquote><p>单个表导出数据，支持IXF，DEL或WSF。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 标准语法</span><br><span class="line">db2 export to XXXX.ixf of ixf select * from XXXX where XXXX</span><br><span class="line"></span><br><span class="line"># 不同字符集的导出 MODIFIED BY CODEPAGE=1386</span><br><span class="line">db2 exprot to filename.del for del MODIFIED BY CODEPAGE=1386 select * from XXXX where XXXX</span><br><span class="line"></span><br><span class="line"># 时间字段格式化的 MODIFIED BY TIMESTAMPFORMAT=&quot;yyyy-mm-dd hh:mm:ss tt&quot;</span><br><span class="line">db2 exprot to filename.del for del MODIFIED BY TIMESTAMPFORMAT=&quot;yyyy-mm-dd hh:mm:ss tt&quot; select * from XXXX where XXXX</span><br></pre></td></tr></table></figure></p><blockquote><p>db2move</p></blockquote><p>导入数据库的所有表及数据<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db2move &lt;数据库名&gt; import</span><br></pre></td></tr></table></figure></p><blockquote><p>db2look</p></blockquote><p>导出表创建语句<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db2look -d xxxpas -e -a -x -i pas -w pas123 -o e:\db2look.sql</span><br><span class="line">db2look -d &lt;数据库名&gt; -u &lt;用户&gt; -e -o &lt;脚本名称&gt;.sql</span><br></pre></td></tr></table></figure></p><h4 id="备份与恢复"><a href="#备份与恢复" class="headerlink" title="备份与恢复"></a>备份与恢复</h4><p>缺点：必须断开所有连接，属于离线备份。</p><blockquote><p>准备工作</p></blockquote><p>首先，在指定存放文件备份的目前建立对应数据的文件夹。<br>第二，在执行下列命令，断开所有连接：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db2 force application all</span><br></pre></td></tr></table></figure></p><blockquote><p>备份</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db2 backup db &lt;database name&gt; [ to &lt;dir name&gt; ]</span><br></pre></td></tr></table></figure><p>database name:表示数据库<br>to dir name:表示为备份到的目录路径,为可选项,默认在当前目录下</p><blockquote><p>恢复</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db2 restore db &lt;database name&gt; [ from &lt;dir name&gt; ]</span><br></pre></td></tr></table></figure><p>database name:表示恢复的数据库名<br>from dir name:表示为从哪个目录路径下恢复,为可选项,默认在当前目录下</p><blockquote><p>历史备份查看</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db2 list history backup all for 数据库</span><br></pre></td></tr></table></figure><h4 id="学习参考"><a href="#学习参考" class="headerlink" title="学习参考"></a>学习参考</h4><p>导入与导出：<a href="https://blog.csdn.net/reaper1022/article/details/18601973" target="_blank" rel="noopener">https://blog.csdn.net/reaper1022/article/details/18601973</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_db2.jpg&quot; alt&gt;&lt;/p&gt;
&lt;div class=&quot;note primary&quot;&gt;
            &lt;p&gt;继续学习DB2，本篇主要关于导入与导出的操作。&lt;/p&gt;
          &lt;/div&gt;
&lt;span class=&quot;label warning&quot;&gt;DB2&lt;/span&gt; &lt;span class=&quot;label default&quot;&gt;导入&lt;/span&gt; &lt;span class=&quot;label info&quot;&gt;导出&lt;/span&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://pygo2.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="DB2" scheme="http://pygo2.cn/tags/DB2/"/>
    
  </entry>
  
  <entry>
    <title>DB2基础学习之常用命令</title>
    <link href="http://pygo2.cn/articles/8747/"/>
    <id>http://pygo2.cn/articles/8747/</id>
    <published>2020-11-07T02:59:02.000Z</published>
    <updated>2020-11-07T02:59:02.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_db2.jpg" alt></p><div class="note primary">            <p>工作环境的原因，第一次实际上使用到了DB2这个数据库，记录一下学习的要点与过程，都是一些比较基础的命令。</p>          </div><span class="label danger">DB2</span> <span class="label default">命令</span><a id="more"></a><hr><h4 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h4><blockquote><p>cmd</p></blockquote><p>在系统cmd中执行的命令。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 普通用户</span><br><span class="line">db2cmd</span><br><span class="line"></span><br><span class="line"># 管理员cmd，有权限执行：db2start，db2stop</span><br><span class="line">db2cmdadmin</span><br></pre></td></tr></table></figure></p><blockquote><p>创建数据库</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># SAMPLE数据库</span><br><span class="line">db2sampl</span><br><span class="line">db2sampl -force</span><br><span class="line"></span><br><span class="line"># 标准数据库创建</span><br><span class="line">db2 create db TEST  alias TEST using codeset gbk territory cn collate using system PAGESIZE 8 K</span><br></pre></td></tr></table></figure><blockquote><p>删除数据库</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db2 drop db XXXX</span><br></pre></td></tr></table></figure><blockquote><p>查看数据库列表</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 数据库</span><br><span class="line">db2 list db directory</span><br><span class="line"></span><br><span class="line"># 节点</span><br><span class="line">db2 list node directory</span><br></pre></td></tr></table></figure><blockquote><p>数据库连接</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 连接</span><br><span class="line">db2 connect to XXXX user 用户名 using 密码</span><br><span class="line"></span><br><span class="line"># 断开（2种方式）</span><br><span class="line">db2 connect reset</span><br><span class="line">db2 terminate</span><br><span class="line"></span><br><span class="line"># 断开所有</span><br><span class="line">db2 force application all</span><br></pre></td></tr></table></figure><blockquote><p>数据库添加schema</p></blockquote><p>connect数据库状态<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 创建</span><br><span class="line">db2 CREATE SCHEMA XXXX</span><br><span class="line"># 设置</span><br><span class="line">db2 SET SCHEMA XXXX</span><br><span class="line"># 删除</span><br><span class="line">db2  DROP SCHEMA XXXX RESTRICT</span><br></pre></td></tr></table></figure></p><blockquote><p>授权</p></blockquote><p>connect数据库状态<br>授权在这里说2种，都是亲身实践<br><div class="post_cus_note">代码方式</div><br>语法糖：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db2 grant 权限 on database to user XXXX</span><br></pre></td></tr></table></figure></p><p>注意：sql语句中的database是固定写法，不是数据库名称。</p><ul><li>dbadm：DBADM 用户对一个数据库有几乎完全的控制能力。DBADM 用户不能执行某些维护或管理任务</li><li>CREATETAB：用户可以在数据库中创建表。 　　</li><li>BINDADD：用户可以使用 BIND 命令在数据库中创建包。 　　</li><li>CONNECT：用户可以连接数据库。 　　</li><li>CREATE_NOT_FENCED：用户可以创建 unfenced 用户定义函数(UDF)。 　　</li><li>IMPLICIT_SCHEMA：用户可以在数据库中隐式地创建模式，而不需要使用 CREATE SCHEMA 命令。</li><li>LOAD：用户可以将数据装载进表中。 　　</li><li>QUIESCE_CONNECT：用户可以访问处于静默(quiesced)状态的数据库。 　　</li><li>CREATE_EXTERNAL_ROUTINE：用户可以创建供应用程序和数据库的其他用户使用的过程。</li><li>secadm：安全性管理员</li></ul><div class="post_cus_note">可视化操作方式</div><ul><li>打开DB2的控制中心</li><li>点击要进行授权的数据库</li><li>找到用户和组对象-&gt;数据库用户</li><li>双击要进行授权的用户</li><li>勾选权限，确定</li></ul><p><img src="db2_grant.png" alt></p><blockquote><p>缓冲池</p></blockquote><p>connect数据库连接状态<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 创建 XXXX为名称</span><br><span class="line">db2 CREATE BUFFERPOOL XXXX IMMEDIATE SIZE 250 AUTOMATIC PAGESIZE 8 K</span><br><span class="line"></span><br><span class="line"># 查看</span><br><span class="line">db2 select * from SYSCAT.BUFFERPOOLS</span><br><span class="line"></span><br><span class="line"># 删除</span><br><span class="line">db2 DROP BUFFERPOOL XXXX</span><br></pre></td></tr></table></figure></p><blockquote><p>数据库参数配置</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 查看</span><br><span class="line">db2 get db cfg</span><br><span class="line"></span><br><span class="line"># 更新</span><br><span class="line">db2 &quot;UPDATE DB CFG USING KEY VALUE&quot;</span><br></pre></td></tr></table></figure><p>在更新的语法糖上，key为DB2数据库参数，value为参数值。</p><h4 id="高级操作"><a href="#高级操作" class="headerlink" title="高级操作"></a>高级操作</h4><blockquote><p>表空间</p></blockquote><p>表空间类别：</p><ul><li><p>系统表空间（SYSCATSPACE）<br>系统表空间又称为系统编目表空间，DB2系统编目表是DB2数据库保存所有DB2对象元数据的地方。</p></li><li><p>系统工具表空间（SYSTOOLSPACE）<br>系统工具表空间是供DB2管理工具和SQL管理例程使用的特定表空。</p></li><li><p>用户表空间（USERSPACE）<br>用户表空间也是数据库创建时自动创建的，表空间名称为USERSPACE1<br>数据库中用户表默认存放于这个表空间中，必须至少有一个用户表空间。</p></li><li><p>临时表空间（TEMPSPACE）<br>数据库管理器使用临时表空间在执行SQL操作时存储临时数据，例如排序，表重组，索引创建以及表链接等操作所产生的中间表都由临时表空间存储，数据库必须至少有一个临时表空间，也可以有多个。<br>DB2支持系统临时表空间和用户临时表空间两种类型，系统临时表空间必须存在，用户临时表空间可以有0个或多个。</p></li><li><p>常规表空间<br>常规表空间根据容量将表空间划分为常规表空间和大型表空间。</p></li></ul><p>表空间管理类型：</p><ul><li><p>系统管理表空间（SMS，System-Managed Space）<br>数据存储空间完全由操作系统管理；<br>SMS表空间的大小是可以动态增加的。</p></li><li><p>数据库管理表空间（DMS，Database-Managed Space）<br>DMS表空间由数据库管理系统（DBMS）自己管理控制；<br>这些容器的空间都是预先分配的且不允许修改大小的。</p></li><li><p>DMS自动存储表空间（Automatic Storage DMS）<br>它是DMS存储的另外一种处理方法。<br>DMS需要很多的维护操作，而自动存储器则是作为一种简化的空间管理手段，</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># 创建</span><br><span class="line">db2 create large tablespace 表空间名 pagesize 页大小 managed by database using(容器类型 路径 大小) bufferpool 缓冲池名</span><br><span class="line"># 示例</span><br><span class="line">db2 CREATE LARGE TABLESPACE TBS_PAS PAGESIZE 16 K MANAGED BY DATABASE USING ( FILE &apos;/home/TBS_PAS01&apos; 1000M) BUFFERPOOL  IBMDEFAULTBP</span><br><span class="line"></span><br><span class="line"># 删除</span><br><span class="line">db2 drop tablespace 表空间名</span><br><span class="line"></span><br><span class="line"># 增加表空间容器</span><br><span class="line">db2 ALTER TABLESPACE  TBS_PAS add (FILE &apos;/home/TBS_PAS02&apos; 1000)</span><br><span class="line"></span><br><span class="line"># 增加容器会涉及到表空间容器的重新平衡，可使用命令</span><br><span class="line">db2 list utilities [show detail]</span><br><span class="line"></span><br><span class="line"># 更改表空间容器</span><br><span class="line">db2 ALTER TABLESPACE TBS_PAS resize (FILE &apos;/home/TBS_PAS02&apos; 1000M)</span><br><span class="line"></span><br><span class="line"># 删除表空间容器</span><br><span class="line">db2 ALTER TABLESPACE TBS_PAS drop (FILE &apos;/home/TBS_PAS02&apos;)</span><br></pre></td></tr></table></figure><blockquote><p>修改用户密码（控制台）</p></blockquote><p>密码与系统用户保持一致，也可以通过更改用户密码来更改数据库用户密码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db2 connect to neu user db2admin using db2admin</span><br><span class="line">db2 connect to neu user db2admin using db2admin new 1 confirm 1</span><br></pre></td></tr></table></figure></p><blockquote><p>node节点操作</p></blockquote><p>个人认为，node主要用于集群，如果是单节点，貌似没啥用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">增加结点编目：db2 catalog tcpip node 结点名字 remote 结点所在ip地址 server 服务端口</span><br><span class="line">查看结点编目：db2 list node directory</span><br><span class="line">删除结点编目：db2 uncatalog node 结点别名</span><br><span class="line"></span><br><span class="line">增加数据库编目：db2 catalog db 远程数据库名字 as 数据库别名 at node 结点名字</span><br><span class="line">查看数据库编目：db2 list db directory</span><br><span class="line">删除数据库编目：db2 uncatalog db 数据库别名</span><br></pre></td></tr></table></figure></p><h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><blockquote><p>命令编辑器</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db2ce</span><br></pre></td></tr></table></figure><blockquote><p>控制中心</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db2cc</span><br></pre></td></tr></table></figure><blockquote><p>配置助手</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db2ca</span><br></pre></td></tr></table></figure><blockquote><p>查看db2参数</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db2 list command options</span><br></pre></td></tr></table></figure><h4 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h4><div class="note danger">            <p>1.节点名称不能包含下划线</p>          </div><h4 id="学习参考"><a href="#学习参考" class="headerlink" title="学习参考"></a>学习参考</h4><p>授权：<a href="http://blog.sina.com.cn/s/blog_626e70700102uxu0.html" target="_blank" rel="noopener">http://blog.sina.com.cn/s/blog_626e70700102uxu0.html</a><br>DB2删除schema：<a href="https://blog.csdn.net/conglushao5834/article/details/100469210?utm_medium=distribute.pc_relevant.none-task-blog-OPENSEARCH-3.edu_weight&depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-3.edu_weight" target="_blank" class="block_project_a">DB2删除schema</a><br>表空间：<a href="http://macsishu.com/db23000/db23400" target="_blank" rel="noopener">http://macsishu.com/db23000/db23400</a><br>node节点操作：<a href="http://blog.sina.com.cn/s/blog_4d887acf0102wydv.html" target="_blank" rel="noopener">http://blog.sina.com.cn/s/blog_4d887acf0102wydv.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_db2.jpg&quot; alt&gt;&lt;/p&gt;
&lt;div class=&quot;note primary&quot;&gt;
            &lt;p&gt;工作环境的原因，第一次实际上使用到了DB2这个数据库，记录一下学习的要点与过程，都是一些比较基础的命令。&lt;/p&gt;
          &lt;/div&gt;
&lt;span class=&quot;label danger&quot;&gt;DB2&lt;/span&gt; &lt;span class=&quot;label default&quot;&gt;命令&lt;/span&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://pygo2.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="DB2" scheme="http://pygo2.cn/tags/DB2/"/>
    
  </entry>
  
  <entry>
    <title>Git服务器仓库并上传</title>
    <link href="http://pygo2.cn/articles/40662/"/>
    <id>http://pygo2.cn/articles/40662/</id>
    <published>2020-10-30T12:53:28.000Z</published>
    <updated>2020-10-30T12:53:28.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note primary">            <p>项目要经常修改bug、上线等操作，如果是公司的话会有统一的gitlab、jenkins等工具，但是对于我个人来说，我自己的博客、开源项目都需要发不到服务器上。<br>目前，本人经常用2种方式：</p><ul><li>把项目tar打包压缩，通过scp上传到服务器，解压，通过supervisor管理项目。</li><li>在服务器上做一个git仓库，用来实时更新。<br>本篇主要讲述第二种git仓库方式，<font color="red" size="4.5">完美使用</font>！！！。</li></ul>          </div><p><img src="/images/article_git.jpg" alt></p><span class="label default">git实战</span> <span class="label primary">代码发布</span> <span class="label success">版本管理</span><a id="more"></a><hr><blockquote><p>ssh 用户@服务器IP</p></blockquote><blockquote><p>切换目录</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd 目标目录</span><br><span class="line"># git目录</span><br><span class="line">mkdir -p /home/mingliang.gao/git</span><br><span class="line"># 项目目录</span><br><span class="line">mkdir -p /home/mingliang.gao/projects</span><br></pre></td></tr></table></figure><p>这里要mkdir2个目录，一个用于存放git仓库，一个用于真实存放项目文件。</p><blockquote><p>初始化仓库</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd 仓库目录</span><br><span class="line">git init --bare 项目名.git</span><br></pre></td></tr></table></figure><blockquote><p>编辑post-receive钩子</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd 项目名.git/hooks</span><br><span class="line">vim post-receive</span><br></pre></td></tr></table></figure><p>post-receive内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">git --work-tree=/home/mingliang.gao/projects/blog --git-dir=/home/mingliang.gao/git/blog.git checkout -f</span><br></pre></td></tr></table></figure></p><p>–work-tree：项目实际目录<br>–git-dir：仓库目录</p><blockquote><p>post-receive权限</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 post-receive</span><br></pre></td></tr></table></figure><blockquote><p>push</p></blockquote><p>到这里就可以对项目进行git操作，push项目到服务器了。</p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note primary&quot;&gt;
            &lt;p&gt;项目要经常修改bug、上线等操作，如果是公司的话会有统一的gitlab、jenkins等工具，但是对于我个人来说，我自己的博客、开源项目都需要发不到服务器上。&lt;br&gt;目前，本人经常用2种方式：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;把项目tar打包压缩，通过scp上传到服务器，解压，通过supervisor管理项目。&lt;/li&gt;&lt;li&gt;在服务器上做一个git仓库，用来实时更新。&lt;br&gt;本篇主要讲述第二种git仓库方式，&lt;font color=&quot;red&quot; size=&quot;4.5&quot;&gt;完美使用&lt;/font&gt;！！！。&lt;/li&gt;&lt;/ul&gt;
          &lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/article_git.jpg&quot; alt&gt;&lt;/p&gt;
&lt;span class=&quot;label default&quot;&gt;git实战&lt;/span&gt; &lt;span class=&quot;label primary&quot;&gt;代码发布&lt;/span&gt; &lt;span class=&quot;label success&quot;&gt;版本管理&lt;/span&gt;
    
    </summary>
    
      <category term="工具集" scheme="http://pygo2.cn/categories/%E5%B7%A5%E5%85%B7%E9%9B%86/"/>
    
    
      <category term="git" scheme="http://pygo2.cn/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Javascript添加和移除Class类名</title>
    <link href="http://pygo2.cn/articles/27102/"/>
    <id>http://pygo2.cn/articles/27102/</id>
    <published>2020-10-13T08:47:46.000Z</published>
    <updated>2020-10-13T08:47:46.000Z</updated>
    
    <content type="html"><![CDATA[<span class="label info">Javascript</span><h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><div class="note primary">            <p>最近再写一个综合系统，包含业务部分、日常任务管理、软件/模板管理等多种功能，前端使用的Adminlte样式，基于Bootstrap的。但是，写HTML经常会遇到添加和移除Class类名的情况，经常忘记，写个blog来记录。</p>          </div><p><img src="/images/article_javascript.jpeg" alt></p><a id="more"></a><hr><h4 id="添加Class类名"><a href="#添加Class类名" class="headerlink" title="添加Class类名"></a>添加Class类名</h4><blockquote><p>方法一</p></blockquote><p>一次只能设定一个类。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 获取元素</span><br><span class="line">element = document.getElementById(&apos;元素id&apos;);</span><br><span class="line">element.className = &apos;类名&apos;;</span><br><span class="line"></span><br><span class="line">// 等同代码</span><br><span class="line">document.getElementById(&apos;元素id&apos;).className = &apos;类名&apos;;</span><br></pre></td></tr></table></figure></p><blockquote><p>方法二</p></blockquote><p>用来设置自定义属性和值，如果是class，直接传入”class”即可；可以通过 .getAttribute 方法获取。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">element = document.getElementById(&apos;元素id&apos;);</span><br><span class="line">element.setAttribute(&apos;属性名&apos;,&apos;值&apos;);</span><br><span class="line"></span><br><span class="line">// 等同代码</span><br><span class="line">document.getElementById(&apos;元素id&apos;).setAttribute(&apos;属性名&apos;,&apos;值&apos;);</span><br></pre></td></tr></table></figure></p><h4 id="移除Class类名"><a href="#移除Class类名" class="headerlink" title="移除Class类名"></a>移除Class类名</h4><p>移除的方法与添加的方式都是对应的。</p><blockquote><p>方法一</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 获取元素</span><br><span class="line">element = document.getElementById(&apos;元素id&apos;);</span><br><span class="line">element.className = &apos;&apos;;</span><br><span class="line"></span><br><span class="line">// 等同代码</span><br><span class="line">document.getElementById(&apos;元素id&apos;).className = &apos;&apos;;</span><br></pre></td></tr></table></figure><blockquote><p>方法二</p></blockquote><p>直接通过removeAttribute移除。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">element = document.getElementById(&apos;元素id&apos;);</span><br><span class="line">element.removeAttribute(&apos;属性名&apos;);</span><br><span class="line"></span><br><span class="line">// 等同代码</span><br><span class="line">document.getElementById(&apos;元素id&apos;).removeAttribute(&apos;属性名&apos;);</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;span class=&quot;label info&quot;&gt;Javascript&lt;/span&gt;
&lt;h4 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h4&gt;&lt;div class=&quot;note primary&quot;&gt;
            &lt;p&gt;最近再写一个综合系统，包含业务部分、日常任务管理、软件/模板管理等多种功能，前端使用的Adminlte样式，基于Bootstrap的。但是，写HTML经常会遇到添加和移除Class类名的情况，经常忘记，写个blog来记录。&lt;/p&gt;
          &lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/article_javascript.jpeg&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="http://pygo2.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Javascript" scheme="http://pygo2.cn/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>Mac卡顿Updating-Homebrew的解决方案</title>
    <link href="http://pygo2.cn/articles/62547/"/>
    <id>http://pygo2.cn/articles/62547/</id>
    <published>2020-09-11T06:14:03.000Z</published>
    <updated>2020-09-11T06:14:03.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h4><div class="note primary">            <p>MacOS系统，用brew进行安装，但是每次执行brew install XXXX，都会有Updating Homebrew的提示，而且还要花费很久等待的时候，<font color="red" size="6.5">是时候展现真正的技术了</font>。</p>          </div><a id="more"></a><hr><p>归根结底就是brew开启了自动更新，关闭即可。</p><blockquote><p>编辑配置文件</p></blockquote><p>我用的是item2 + zsh。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.zshrc</span><br></pre></td></tr></table></figure></p><p>如果使用自带的shell，编辑下面文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bash_profile</span><br></pre></td></tr></table></figure></p><blockquote><p>文件结尾新增一行</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export HOMEBREW_NO_AUTO_UPDATE=true</span><br></pre></td></tr></table></figure><blockquote><p>重新加载配置文件</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">source ~/.zshrc</span><br><span class="line">source ~/.bash_profile</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;问题背景&quot;&gt;&lt;a href=&quot;#问题背景&quot; class=&quot;headerlink&quot; title=&quot;问题背景&quot;&gt;&lt;/a&gt;问题背景&lt;/h4&gt;&lt;div class=&quot;note primary&quot;&gt;
            &lt;p&gt;MacOS系统，用brew进行安装，但是每次执行brew install XXXX，都会有Updating Homebrew的提示，而且还要花费很久等待的时候，&lt;font color=&quot;red&quot; size=&quot;6.5&quot;&gt;是时候展现真正的技术了&lt;/font&gt;。&lt;/p&gt;
          &lt;/div&gt;
    
    </summary>
    
      <category term="日常问题" scheme="http://pygo2.cn/categories/%E6%97%A5%E5%B8%B8%E9%97%AE%E9%A2%98/"/>
    
    
      <category term="Mac" scheme="http://pygo2.cn/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>感谢DataTables的礼物</title>
    <link href="http://pygo2.cn/articles/50358/"/>
    <id>http://pygo2.cn/articles/50358/</id>
    <published>2020-08-26T13:31:58.000Z</published>
    <updated>2020-08-26T13:31:58.000Z</updated>
    
    <content type="html"><![CDATA[<font size="5.5" color="red">背景</font><div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 50%;"><img src="/images/article_dt1.png" alt></div><div class="group-picture-column" style="width: 50%;"><img src="/images/article_dt2.png" alt></div></div></div></div><blockquote class="blockquote-center"><p>感谢DataTables赠送的七夕节小熊宝宝礼物。</p></blockquote><a id="more"></a><hr><div class="note success">            <p><font size="5.5" color="red">简介：</font><br>Datatables是一款jquery表格插件。它是一个高度灵活的工具，可以将任何HTML表格添加高级的交互功能。</p><p><font size="5.5" color="red">特色：</font><br><span class="label success">实用</span> <span class="label warning">简单</span> <span class="label danger">上手快</span></p>          </div><font size="5.5"><br>DataTables官网：<a href="http://datatables.club/" target="_blank" rel="noopener">http://datatables.club/</a><br>DataTables QQ交流群：20779435<br></font><font size="6.5" color="red">欢迎大家一起来交流Share。。。。。。</font>]]></content>
    
    <summary type="html">
    
      &lt;font size=&quot;5.5&quot; color=&quot;red&quot;&gt;背景&lt;/font&gt;

&lt;div class=&quot;group-picture&quot;&gt;&lt;div class=&quot;group-picture-container&quot;&gt;&lt;div class=&quot;group-picture-row&quot;&gt;&lt;div class=&quot;group-picture-column&quot; style=&quot;width: 50%;&quot;&gt;&lt;img src=&quot;/images/article_dt1.png&quot; alt&gt;&lt;/div&gt;&lt;div class=&quot;group-picture-column&quot; style=&quot;width: 50%;&quot;&gt;&lt;img src=&quot;/images/article_dt2.png&quot; alt&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;感谢DataTables赠送的七夕节小熊宝宝礼物。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="生活" scheme="http://pygo2.cn/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="生活" scheme="http://pygo2.cn/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>Linux-学习之基础篇-cat</title>
    <link href="http://pygo2.cn/articles/10790/"/>
    <id>http://pygo2.cn/articles/10790/</id>
    <published>2020-08-03T07:16:08.000Z</published>
    <updated>2020-08-03T07:16:08.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_linux_cat.jpeg" alt></p><span class="label danger">Linux</span> <span class="label primary">cat</span> <span class="label success">基础教程系列</span><blockquote class="blockquote-center"><font size="6.5" color="red">concatenate files and print on the standard output</font></blockquote><a id="more"></a><hr><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><div class="note default">            <p>你看没错，本篇研究的是<strong>cat</strong>，不顾不是会动的cat，它是用来查看日志的cat。</p>          </div><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>cat主要使用来查看文件的命令，其他的命令还有tac、tail（tail -f xxx 动态的查看日志）、awk（增强篇中已有）、sed、less、more等等，很多命令。</p><p>cat主要用来<font size="6.5" color="red"><strong>全量查看日志</strong></font>。</p><h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><h4 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat [参数] [文件名]</span><br></pre></td></tr></table></figure><h4 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h4><blockquote><p>-n</p></blockquote><p>对输出的文件添加<strong>行号</strong>，包含空行。</p><blockquote><p>-b</p></blockquote><p>对输出的文件添加<strong>行号</strong>，去掉空行。</p><h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><blockquote><p>基本</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat 文件名</span><br></pre></td></tr></table></figure><p>可以是相对路径，也可以是绝对路径。</p><blockquote><p>输出行号</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat -n 文件名</span><br><span class="line"></span><br><span class="line">cat -n 文件名 &gt; 新文件</span><br></pre></td></tr></table></figure><p>第二个命令可以把原来不带行号的文件输出到新的文件，并且带行号。</p><blockquote><p>查找关键字的行</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat 文件名 | grep &quot;关键字&quot;</span><br></pre></td></tr></table></figure><p>这个命令平时用的相对较多。</p><h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><p>关于其他查看日志的方式以后会陆续给出文章。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_linux_cat.jpeg&quot; alt&gt;&lt;/p&gt;
&lt;span class=&quot;label danger&quot;&gt;Linux&lt;/span&gt; &lt;span class=&quot;label primary&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;label success&quot;&gt;基础教程系列&lt;/span&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;font size=&quot;6.5&quot; color=&quot;red&quot;&gt;concatenate files and print on the standard output&lt;/font&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://pygo2.cn/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://pygo2.cn/tags/Linux/"/>
    
      <category term="Linux基础篇" scheme="http://pygo2.cn/tags/Linux%E5%9F%BA%E7%A1%80%E7%AF%87/"/>
    
  </entry>
  
  <entry>
    <title>邪恶力量</title>
    <link href="http://pygo2.cn/articles/57641/"/>
    <id>http://pygo2.cn/articles/57641/</id>
    <published>2020-07-25T01:28:42.000Z</published>
    <updated>2020-07-25T01:28:42.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_xieeliliang.jpg" alt></p><div class="post_cus_note">《邪恶力量》</div><span class="label default">剧情</span> <span class="label primary">灵异</span> <span class="label success">魔幻</span> <span class="label info">悬疑</span> <span class="label danger">惊悚</span><a id="more"></a><hr><div class="note success">            <p><font size="4" color="red"><strong>简介</strong></font><br>美国驱魔类型题材的电视剧，目前已经出了十三季，本人看到第六季，<font size="4.5" color="red">very good</font>，与《康斯但丁》大同小异。</p>          </div><blockquote><p>推荐指数</p></blockquote><pre><code>⭐️⭐️⭐️⭐️⭐️</code></pre><blockquote><p>人物角色</p></blockquote><p>主角：兄弟二人</p><div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 50%;"><img src="nan1.png" alt></div><div class="group-picture-column" style="width: 50%;"><img src="nan2.png" alt></div></div></div></div><blockquote><p>主线剧情</p></blockquote><p>兄弟二人代表人类，与特天使、恶魔进行斗智斗勇的故事。</p><blockquote><p>观后感</p></blockquote><p><strong><em><font color="#dd0000" size="5">科幻、刺激</font></em></strong></p><blockquote><p>观看地址</p></blockquote><p>人人视频（并不是打广告，而且真的好用）。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_xieeliliang.jpg&quot; alt&gt;&lt;/p&gt;

&lt;div class=&quot;post_cus_note&quot;&gt;《邪恶力量》&lt;/div&gt;

&lt;span class=&quot;label default&quot;&gt;剧情&lt;/span&gt; &lt;span class=&quot;label primary&quot;&gt;灵异&lt;/span&gt; &lt;span class=&quot;label success&quot;&gt;魔幻&lt;/span&gt; &lt;span class=&quot;label info&quot;&gt;悬疑&lt;/span&gt; &lt;span class=&quot;label danger&quot;&gt;惊悚&lt;/span&gt;
    
    </summary>
    
      <category term="影视说" scheme="http://pygo2.cn/categories/%E5%BD%B1%E8%A7%86%E8%AF%B4/"/>
    
    
      <category term="电视剧" scheme="http://pygo2.cn/tags/%E7%94%B5%E8%A7%86%E5%89%A7/"/>
    
      <category term="美国大片" scheme="http://pygo2.cn/tags/%E7%BE%8E%E5%9B%BD%E5%A4%A7%E7%89%87/"/>
    
  </entry>
  
  <entry>
    <title>Mysql常用命令</title>
    <link href="http://pygo2.cn/articles/14802/"/>
    <id>http://pygo2.cn/articles/14802/</id>
    <published>2020-07-07T13:00:04.000Z</published>
    <updated>2020-07-07T13:00:04.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_mysql.png" alt></p><div class="note primary">            <p>记录一下常用的命令，虽然关于查询相关的命令常用（select、order by、where、join等），但是关于建立数据库、建立用户、授权等并不常用的命令，做个整理，也方便了自己进行查询和使用。</p>          </div><span class="label default">Mysql</span> <span class="label primary">select into</span> <span class="label success">create</span> <span class="label info">user</span><a id="more"></a><hr><blockquote><h4 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h4></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database 数据库名称 default character set utf8 collate utf8_general_ci;</span><br></pre></td></tr></table></figure><blockquote><h4 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h4></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">create user &apos;用户名&apos;@&apos;%&apos; IDENTIFIED BY &apos;密码&apos;;</span><br><span class="line">-- % 表示通配符，任意远程主机都可以连接主机【常用】</span><br><span class="line"></span><br><span class="line">create user &apos;用户名&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;123456&apos;;</span><br><span class="line">-- localhost 表示本机，用户只有通过本机进行连接主机</span><br><span class="line"></span><br><span class="line">create user &apos;用户名&apos;@&apos;XXX.XXX.XX.XXX&apos; IDENTIFIED BY &apos;123456&apos;;</span><br><span class="line">-- XXX.XXX.XX.XXX 表示ip，用户只有通过指定的ip主机进行连接</span><br></pre></td></tr></table></figure><blockquote><h4 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h4></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 所有权限 所有表【常用】</span><br><span class="line">grant all on *.* to &apos;用户名称&apos;;</span><br><span class="line"></span><br><span class="line"># 所有权限 指定数据库 外网连接【常用】</span><br><span class="line">grant all on 数据库名称.* to &apos;用户名称&apos;@&apos;%&apos;;</span><br><span class="line"></span><br><span class="line"># 指定权限 指定数据库</span><br><span class="line">grant select,insert,update,delete,create on 数据库名称.* to &apos;用户名称&apos;;</span><br><span class="line"></span><br><span class="line"># 刷新生效</span><br><span class="line">flush  privileges;</span><br><span class="line"></span><br><span class="line"># 查看权限</span><br><span class="line">show grants for &apos;用户名称&apos;;</span><br></pre></td></tr></table></figure><blockquote><p>创建用户并授权</p></blockquote><p>如果没有这个用户会自动新建。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant all on *.* to &apos;用户名称&apos;@&apos;%&apos; indentified by &apos;密码&apos;;</span><br></pre></td></tr></table></figure></p><blockquote><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4></blockquote><p>数据库列表：show database;<br>表列表：show tables;<br>切换数据库：use 数据库;</p><div class="post_cus_note">查询方面略</div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_mysql.png&quot; alt&gt;&lt;/p&gt;
&lt;div class=&quot;note primary&quot;&gt;
            &lt;p&gt;记录一下常用的命令，虽然关于查询相关的命令常用（select、order by、where、join等），但是关于建立数据库、建立用户、授权等并不常用的命令，做个整理，也方便了自己进行查询和使用。&lt;/p&gt;
          &lt;/div&gt;
&lt;span class=&quot;label default&quot;&gt;Mysql&lt;/span&gt; &lt;span class=&quot;label primary&quot;&gt;select into&lt;/span&gt; &lt;span class=&quot;label success&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;label info&quot;&gt;user&lt;/span&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://pygo2.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Mysql" scheme="http://pygo2.cn/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>抖音BMG</title>
    <link href="http://pygo2.cn/articles/16635/"/>
    <id>http://pygo2.cn/articles/16635/</id>
    <published>2020-06-30T05:47:57.000Z</published>
    <updated>2020-06-30T05:47:57.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><p><img src="/images/article_douyin.jpg" alt></p><div class="note primary">            <p>抖音记录美好生活</p><p>记录自己喜欢的BGM，喜欢的请拿去，不用谢</p>          </div><a id="more"></a><hr><div class="post_cus_note">Pygo</div><ul><li>batte fort 凤舞九天：<a href="https://music.163.com/#/song?id=1379910808&amp;userid=555314631" target="_blank" rel="noopener">https://music.163.com/#/song?id=1379910808&amp;userid=555314631</a></li><li>Dan Bălan-Lendo Calendo：<a href="https://music.163.com/#/song?id=1435770027&amp;userid=555314631" target="_blank" rel="noopener">https://music.163.com/#/song?id=1435770027&amp;userid=555314631</a></li><li>等什么君-赤伶：<a href="https://music.163.com/song?id=1447509197&amp;userid=555314631" target="_blank" rel="noopener">https://music.163.com/song?id=1447509197&amp;userid=555314631</a></li><li>杨千嬅-野孩子抖音：<a href="https://music.163.com/song?id=1385757429&amp;userid=555314631" target="_blank" rel="noopener">https://music.163.com/song?id=1385757429&amp;userid=555314631</a></li><li>猜不透 (咚鼓版)：<a href="https://music.163.com/song?id=1361558668&amp;userid=555314631" target="_blank" rel="noopener">https://music.163.com/song?id=1361558668&amp;userid=555314631</a></li><li>真的爱你 (咚鼓版)：<a href="https://music.163.com/song?id=1396568322&amp;userid=555314631" target="_blank" rel="noopener">https://music.163.com/song?id=1396568322&amp;userid=555314631</a></li><li>送给未来的你(DJ弹鼓版)：<a href="https://music.163.com/song?id=1425463866&amp;userid=555314631" target="_blank" rel="noopener">https://music.163.com/song?id=1425463866&amp;userid=555314631</a></li><li>Tony Igy-Astronomia：<a href="https://music.163.com/song?id=446154202&amp;userid=555314631" target="_blank" rel="noopener">https://music.163.com/song?id=446154202&amp;userid=555314631</a></li><li>世间美好与你环环相扣：<a href="https://music.163.com/song?id=1399664349&amp;userid=555314631" target="_blank" rel="noopener">https://music.163.com/song?id=1399664349&amp;userid=555314631</a></li><li>Be Your Sun (DJ版)：<a href="https://music.163.com/song?id=1386946637&amp;userid=555314631" target="_blank" rel="noopener">https://music.163.com/song?id=1386946637&amp;userid=555314631</a></li><li>ProgHouse（DJ抖音版）：<a href="https://music.163.com/song?id=1401433235&amp;userid=555314631" target="_blank" rel="noopener">https://music.163.com/song?id=1401433235&amp;userid=555314631</a></li><li>Bingo（DJ抖音版）：<a href="https://music.163.com/song?id=22834906&amp;userid=555314631" target="_blank" rel="noopener">https://music.163.com/song?id=22834906&amp;userid=555314631</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;/images/article_douyin.jpg&quot; alt&gt;&lt;/p&gt;
&lt;div class=&quot;note primary&quot;&gt;
            &lt;p&gt;抖音记录美好生活&lt;/p&gt;&lt;p&gt;记录自己喜欢的BGM，喜欢的请拿去，不用谢&lt;/p&gt;
          &lt;/div&gt;
    
    </summary>
    
      <category term="生活" scheme="http://pygo2.cn/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="音乐" scheme="http://pygo2.cn/tags/%E9%9F%B3%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title>系统实例之人员信息管理系统</title>
    <link href="http://pygo2.cn/articles/12268/"/>
    <id>http://pygo2.cn/articles/12268/</id>
    <published>2020-06-25T05:09:00.000Z</published>
    <updated>2020-06-25T05:09:00.000Z</updated>
    
    <content type="html"><![CDATA[<span class="label default">Python实战</span> <span class="label primary">Demo系统</span> <span class="label success">Web</span> <span class="label danger">flask</span> <span class="label info">脚手架</span><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><div class="note primary">            <p>项目基于Python+mysql+gunicorn+supervisor进行搭建的一个web脚手架，python的web框架使用的是flask。架子已经基本搭建起来，备具Restful API、验证session、页面模板功能、一键式安装包、启动等功能。</p><p>通过这个脚手架开发的一个员工信息管理小系统，用来做Demo，<font color="red" size="4.5">完美使用</font>！！！。</p>          </div><p><img src="/images/article_python_system.jpg" alt></p><a id="more"></a><hr><h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ol><li><h4 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h4></li></ol><table><thead><tr><th style="text-align:center">id</th><th style="text-align:center">name</th><th style="text-align:center">Version</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">Os</td><td style="text-align:center">MacOS10.15.6</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">IDE</td><td style="text-align:center">PyCharm</td></tr></tbody></table><ol start="2"><li><h4 id="基础架构"><a href="#基础架构" class="headerlink" title="基础架构"></a>基础架构</h4></li></ol><table><thead><tr><th style="text-align:center">id</th><th style="text-align:center">name</th><th style="text-align:center">Version</th><th style="text-align:center">Function</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">Python</td><td style="text-align:center">2.7</td><td style="text-align:center">开发语言，基于python2</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">flask</td><td style="text-align:center">1.1.2</td><td style="text-align:center">使用的web框架</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">MariaDB</td><td style="text-align:center">5.5.65</td><td style="text-align:center">数据库</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">gunicorn</td><td style="text-align:center">20.0.4</td><td style="text-align:center">web服务与进程</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">supervisor</td><td style="text-align:center">3.4.0</td><td style="text-align:center">项目启动、停止、重启等操作</td></tr></tbody></table><p>项目主要运行于Linux系统上，本人开发使用的是MacOS，线上服务使用的是腾讯云服务器（Centos7.0）。</p><h3 id="项目说明"><a href="#项目说明" class="headerlink" title="项目说明"></a>项目说明</h3><ol><li><h4 id="项目地址（gitub）"><a href="#项目地址（gitub）" class="headerlink" title="项目地址（gitub）"></a>项目地址（gitub）</h4><p> <a href="https://github.com/GIS90/base_webframe" target="_blank" rel="noopener">https://github.com/GIS90/base_webframe</a></p></li><li><h4 id="Demo地址"><a href="#Demo地址" class="headerlink" title="Demo地址"></a>Demo地址</h4></li></ol><ul><li>地址：<a href="http://212.64.61.62:11111/" target="_blank" rel="noopener">http://212.64.61.62:11111/</a></li><li>账号：admin</li><li><p>密码：0</p><p>  <img src="demo.png" alt></p></li></ul><ol start="3"><li><h4 id="环境搭建与项目运行"><a href="#环境搭建与项目运行" class="headerlink" title="环境搭建与项目运行"></a>环境搭建与项目运行</h4></li></ol><ul><li>Centos7.0系统服务器（建议Mac或者云服务器）</li><li>mysql数据库安装与配置（略，建议baidu一下）</li><li>安装git命令，如果有进行下一步（检测：which git）</li><li>git clone <a href="https://github.com/GIS90/base_webframe.git" target="_blank" rel="noopener">https://github.com/GIS90/base_webframe.git</a></li><li>更新web配置文件：etc/prod/config.py（线上）、etc/dev/config.py（测试），根据不同需求进行项目更改</li><li>安装项目运行的环境：python install_env.py，建立项目独立的运行环境，安装了virtualenv、python、gunicorn、packages等操作，了解具体详情请参考代码</li><li>cd 项目根目录</li><li>项目根目录：source .venv/bin/activate：激活项目环境</li><li>启动项目：gunicorn -c etc/prod/gunicorn.conf（线上）、gunicorn -c etc/dev/gunicorn.conf（测试）或者手动启动（下面有介绍），关于dev/prod配置请参考上面介绍</li><li>【选做】：安装supervisor &amp;&amp; 项目加入supervisor进行管理，项目包含了supervisord配置文件&amp;&amp;项目supervisor配置文件</li></ul><ol start="4"><li><h4 id="配置说明"><a href="#配置说明" class="headerlink" title="配置说明"></a>配置说明</h4><p>项目配置主要有2套，位于项目的根目录etc下：</p><ul><li>dev 测试环境</li><li>prod 线上环境</li></ul><p>每套配置文件夹下有3个配置文件，config与gunicorn进行绑定：</p><ul><li>config：项目的db、mail、log等配置，这里的log记录项目的log，关于项目相关的配置都可以在此文件进行配置</li><li>gunicorn：项目启动时所需要的IP、port、log、进程数量等配置</li><li>supervisor: 项目管理的配置信息</li></ul><p>.yaml格式的配置文件是有deploy/config.py进行解析的，如果在config.yaml配置文件中添加配置信息，需要在此文件进行解析添加，建议添加配置默认值。</p></li><li><h4 id="手动启动"><a href="#手动启动" class="headerlink" title="手动启动"></a>手动启动</h4></li></ol><ul><li>项目根目录wsgi.py文件加入</li><li>app.run(host=”0.0.0.0”, port=11111, debug=True)</li><li><p>执行sudo python wsgi.py，代码目前已写入，处于注释状态</p>  <div class="note danger">            <p><font size="5.5" color="red">注意：</font></p><ul><li>通过手动启动的项目为dev开发环境配置，可在deploy/config.py中进行默认调整（mode = os.environ.get(‘mode’) or ‘dev’）</li><li>如果手动启动模式开启，在gunicorn进行启动，会error: [Errno 48] Address already in use.</li><li>启动项目一定要用virtualenv安装的python环境进行启动（source .venv/bin/activate）</li></ul>          </div></li></ul><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ol><li><h4 id="安装包"><a href="#安装包" class="headerlink" title="安装包"></a>安装包</h4><p> 手动进行包安装：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure><p> 此程序运行于python2，其中requirements.txt项目所需要的包，已固定版本。</p></li><li><h4 id="supervisor"><a href="#supervisor" class="headerlink" title="supervisor"></a>supervisor</h4><p> 管理项目进程的启动、停止、重启等操作。<br> 安装：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install supervisor</span><br></pre></td></tr></table></figure><p> 配置：</p><ul><li>dev：etc/dev/supervisor_base_webframe.conf</li><li>prod：etc/prod/supervisor_base_webframe.conf</li></ul><p>把指定环境的supervisor_base_webframe.conf cp到/etc/supervisord.d/include/*下。<br>项目root根目录下有supervisord.conf文件，用来配置supervisord。</p></li><li><h4 id="管理gunicorn"><a href="#管理gunicorn" class="headerlink" title="管理gunicorn"></a>管理gunicorn</h4><p> 负责web项目进程、服务。</p><p> 安装：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install gunicorn</span><br></pre></td></tr></table></figure><p> 配置：</p><ul><li>dev：etc/dev/gunicorn.conf</li><li>prod：etc/prod/gunicorn.conf</li></ul><p>如需特别项目启动信息，可以加入gunicorn.conf或者更改命令行gunicorn启动方式加入参数即可。</p></li><li><h4 id="sql"><a href="#sql" class="headerlink" title="sql"></a>sql</h4><p> 创建sql：<br> deploy&gt;sql&gt;table_create_sql.sql，直接执行即可。</p><p> 插入sql：<br> deploy&gt;sql&gt;print_insert_sql.py，具体需要哪些insert的数据，看代码，根据需要插入。</p></li><li><h4 id="其他-1"><a href="#其他-1" class="headerlink" title="其他"></a>其他</h4><ul><li>base_webframe_start.bash、base_webframe_end.bash为手动方式进行项目启动与项目结束（已废弃）。</li><li>deploy&gt;utils&gt;utils.py 为工具方法，任何python2项目都适合使用。</li></ul></li></ol><h3 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h3><font size="6.5" color="red">如果觉得脚手架还可以，麻烦在github上点个小星星。。。。。。</font>]]></content>
    
    <summary type="html">
    
      &lt;span class=&quot;label default&quot;&gt;Python实战&lt;/span&gt; &lt;span class=&quot;label primary&quot;&gt;Demo系统&lt;/span&gt; &lt;span class=&quot;label success&quot;&gt;Web&lt;/span&gt; &lt;span class=&quot;label danger&quot;&gt;flask&lt;/span&gt; &lt;span class=&quot;label info&quot;&gt;脚手架&lt;/span&gt;
&lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;div class=&quot;note primary&quot;&gt;
            &lt;p&gt;项目基于Python+mysql+gunicorn+supervisor进行搭建的一个web脚手架，python的web框架使用的是flask。架子已经基本搭建起来，备具Restful API、验证session、页面模板功能、一键式安装包、启动等功能。&lt;/p&gt;&lt;p&gt;通过这个脚手架开发的一个员工信息管理小系统，用来做Demo，&lt;font color=&quot;red&quot; size=&quot;4.5&quot;&gt;完美使用&lt;/font&gt;！！！。&lt;/p&gt;
          &lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/article_python_system.jpg&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://pygo2.cn/categories/Python/"/>
    
    
      <category term="Python" scheme="http://pygo2.cn/tags/Python/"/>
    
      <category term="Python程序篇" scheme="http://pygo2.cn/tags/Python%E7%A8%8B%E5%BA%8F%E7%AF%87/"/>
    
  </entry>
  
  <entry>
    <title>Nginx源码安装</title>
    <link href="http://pygo2.cn/articles/47364/"/>
    <id>http://pygo2.cn/articles/47364/</id>
    <published>2020-05-20T12:30:22.000Z</published>
    <updated>2020-05-20T12:30:22.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note primary">            <p>身为一个Python Web开发者，当然对Nginx的使用需要了解一点，本篇对Nginx安装进行记录，<font color="red" size="4.5">基于源码安装</font>！！！。</p>          </div><p><img src="/images/article_nginx.jpg" alt></p><span class="label primary">Nginx</span><a id="more"></a><hr><blockquote><p>系统环境</p></blockquote><p>腾讯云服务器：CentOS Linux release 7.5.1804 (Core)</p><blockquote><p>安装依赖</p></blockquote><ul><li><p>gcc<br>Nginx编译需要依赖编译依赖gcc环境，如果没有gcc环境，则需要安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install gcc</span><br></pre></td></tr></table></figure></li><li><p>pcre pcre-devel<br>都是正则表达库。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y pcre pcre-devel</span><br></pre></td></tr></table></figure></li><li><p>zlib<br>压缩和解压缩库。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y zlib zlib-devel</span><br></pre></td></tr></table></figure></li><li><p>OpenSSL 安装<br>ssl协议库。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y openssl openssl-devel</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>下载Nginx源码包</p></blockquote><p>访问下列地址，看使用哪个源码包进行下载，又开发版、稳定版、历史版本，建议稳定版。<br><a href="https://nginx.org/en/download.html，" target="_blank" rel="noopener">https://nginx.org/en/download.html，</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://nginx.org/download/nginx-1.18.0.tar.gz</span><br></pre></td></tr></table></figure></p><p>使用wget进行下载，没有的搞一下，wget可是一个下载神器。</p><p>解压<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf  nginx-1.9.9.tar.gz</span><br></pre></td></tr></table></figure></p><blockquote><p>编译安装</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd nginx-1.18.0</span><br><span class="line"></span><br><span class="line">./configure</span><br><span class="line"></span><br><span class="line">make</span><br><span class="line"></span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>如果在编译安装过程中出现错误，大部分原因都是依赖问题，yum去解决依赖问题即可。</p><p>查看安装目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whereis nginx</span><br></pre></td></tr></table></figure></p><p>执行目录：/usr/sbin/nginx<br>模块所在目录：/usr/lib64/nginx<br>配置所在目录：/etc/nginx/<br>默认站点目录：/usr/share/nginx/html</p><blockquote><p>启动</p></blockquote><p>两种方式启动。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 启动/停止/重启</span><br><span class="line">systemctl start/stop/restart nginx.service</span><br><span class="line">nginx -c /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure></p><blockquote><p>其他设置</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 开启启动</span><br><span class="line">systemctl enable nginx.service</span><br><span class="line"># 重新加载配置</span><br><span class="line">systemctl reload nginx.service</span><br><span class="line"># 查看状态</span><br><span class="line">systemctl status nginx.service</span><br></pre></td></tr></table></figure><blockquote><p>进程</p></blockquote><ul><li><p>查看进程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep nginx</span><br></pre></td></tr></table></figure></li><li><p>杀死</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill 进程ID</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>常用命令</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 指定配置文件</span><br><span class="line">nginx -c /etc/nginx/nginx.conf</span><br><span class="line"></span><br><span class="line"># 重新加载配置文件，执行这个可以不用重启</span><br><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure><blockquote><p>访问</p></blockquote><p>配置完把nginx重启之后，访问IP:PORT。</p><p><img src="/images/nginx.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note primary&quot;&gt;
            &lt;p&gt;身为一个Python Web开发者，当然对Nginx的使用需要了解一点，本篇对Nginx安装进行记录，&lt;font color=&quot;red&quot; size=&quot;4.5&quot;&gt;基于源码安装&lt;/font&gt;！！！。&lt;/p&gt;
          &lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/article_nginx.jpg&quot; alt&gt;&lt;/p&gt;
&lt;span class=&quot;label primary&quot;&gt;Nginx&lt;/span&gt;
    
    </summary>
    
      <category term="工具集" scheme="http://pygo2.cn/categories/%E5%B7%A5%E5%85%B7%E9%9B%86/"/>
    
    
      <category term="Nginx" scheme="http://pygo2.cn/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Linux学习之番外篇-nohup</title>
    <link href="http://pygo2.cn/articles/23692/"/>
    <id>http://pygo2.cn/articles/23692/</id>
    <published>2020-05-13T01:46:47.000Z</published>
    <updated>2020-05-13T01:46:47.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_linux_nohup.jpeg" alt></p><span class="label default">Linux</span> <span class="label primary">nohub...&</span> <span class="label info">后台运行命令</span> <span class="label success">番外教程系列</span><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><div class="note danger">            <p><font color="#red" size="5">用途</font>：用于linux后台执行命令，与&amp;一起使用，nohup不挂断地运行命令（退出终端不会影响程序的运行）。</p><p><font color="#blue" size="5">语法</font>：nohup command 参数 2&gt;&amp;1 &amp;</p>          </div><a id="more"></a><hr><p>这个就是比较实用而且没有任何参数的命令，语法糖就一种。</p><h4 id="基本"><a href="#基本" class="headerlink" title="基本"></a>基本</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~/py_work]#nohup /root/py_work/start.sh &amp;</span><br><span class="line">[1] 31491</span><br><span class="line">[root@localhost ~/py_work]#nohup: ignoring input and appending output to ‘nohup.out’</span><br></pre></td></tr></table></figure><ul><li>建议命令写全路径，在命令可以写成sh脚本，也可以是直接<strong><em>命令+参数</em></strong>形式。</li><li>执行完nohup的时候，出现日志说明，会在<strong><em>当前命令执行文件夹建立日志文件</em></strong>。</li><li>终端退出的时候建议用exit。</li></ul><h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup /root/py_work/start.sh &gt; xxxxxx.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><p>2&gt;&amp;1说明：<br>将标准错误（2）重定向到标准输出（&amp;1），标准输出（&amp;1）再被重定向输入到日志xxxxxx.log文件中。</p><ul><li>0 stdin (standard input）标准输入</li><li>1 stdout (standard output）标准输出</li><li>2 stderr (standard error）标准错误输出</li><li>/dev/null 表示空设备文件</li></ul><p>输出文件中的方式：</p><ul><li><code>&gt;</code> xxxx.log <strong>输出</strong>到文件</li><li><code>&gt;&gt;</code> xxxx.log <strong>追加</strong>到文件</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_linux_nohup.jpeg&quot; alt&gt;&lt;/p&gt;
&lt;span class=&quot;label default&quot;&gt;Linux&lt;/span&gt; &lt;span class=&quot;label primary&quot;&gt;nohub...&amp;&lt;/span&gt; &lt;span class=&quot;label info&quot;&gt;后台运行命令&lt;/span&gt; &lt;span class=&quot;label success&quot;&gt;番外教程系列&lt;/span&gt;
&lt;h4 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h4&gt;&lt;div class=&quot;note danger&quot;&gt;
            &lt;p&gt;&lt;font color=&quot;#red&quot; size=&quot;5&quot;&gt;用途&lt;/font&gt;：用于linux后台执行命令，与&amp;amp;一起使用，nohup不挂断地运行命令（退出终端不会影响程序的运行）。&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#blue&quot; size=&quot;5&quot;&gt;语法&lt;/font&gt;：nohup command 参数 2&amp;gt;&amp;amp;1 &amp;amp;&lt;/p&gt;
          &lt;/div&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://pygo2.cn/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://pygo2.cn/tags/Linux/"/>
    
      <category term="Linux番外篇" scheme="http://pygo2.cn/tags/Linux%E7%95%AA%E5%A4%96%E7%AF%87/"/>
    
  </entry>
  
  <entry>
    <title>WIKI Confluence授权的延期</title>
    <link href="http://pygo2.cn/articles/39160/"/>
    <id>http://pygo2.cn/articles/39160/</id>
    <published>2020-04-16T01:14:11.000Z</published>
    <updated>2020-04-16T01:14:11.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h4><div class="post_cus_note">关于WIKI Confluence的延期授权</div><span class="label default">WIKI</span> <span class="label primary">Confluence</span> <span class="label success">授权</span> <span class="label info">延期</span><a id="more"></a><hr><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><blockquote><p>点击My Altassian，进入到<a href="https://my.atlassian.com/官网。" target="_blank" rel="noopener">https://my.atlassian.com/官网。</a></p></blockquote><p><img src="1.png" alt></p><blockquote><p>点击New Trial License，创建新的Trial License。</p></blockquote><p><img src="2.png" alt></p><blockquote><p>选择相关对应的产品：confluence。</p></blockquote><p><img src="3.png" alt></p><blockquote><p>使用admin登录confluence服务器。</p></blockquote><p><img src="4.png" alt></p><blockquote><p>查看confluence的服务器ID，在<font color="red" size="6.0">设置-&gt;一般配置-&gt;管理→授权细节</font>，复制服务ID信息。</p></blockquote><p><img src="5.png" alt></p><blockquote><p>在填写New Trial License页面的相关信息，选择confluence产品，输入服务器ID，在create license，会自动生成授权码（复制）。</p></blockquote><p><img src="6.png" alt></p><blockquote><p>回到confluence授权细节页面，把复制的授权码粘贴在授权细节中的授权码，点击保存，完成延期使用。</p></blockquote><p><img src="7.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;简述&quot;&gt;&lt;a href=&quot;#简述&quot; class=&quot;headerlink&quot; title=&quot;简述&quot;&gt;&lt;/a&gt;简述&lt;/h4&gt;
&lt;div class=&quot;post_cus_note&quot;&gt;关于WIKI Confluence的延期授权&lt;/div&gt;

&lt;span class=&quot;label default&quot;&gt;WIKI&lt;/span&gt; &lt;span class=&quot;label primary&quot;&gt;Confluence&lt;/span&gt; &lt;span class=&quot;label success&quot;&gt;授权&lt;/span&gt; &lt;span class=&quot;label info&quot;&gt;延期&lt;/span&gt;
    
    </summary>
    
      <category term="工具集" scheme="http://pygo2.cn/categories/%E5%B7%A5%E5%85%B7%E9%9B%86/"/>
    
    
      <category term="WIKI" scheme="http://pygo2.cn/tags/WIKI/"/>
    
      <category term="运维工具" scheme="http://pygo2.cn/tags/%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Mysql的表复制</title>
    <link href="http://pygo2.cn/articles/34145/"/>
    <id>http://pygo2.cn/articles/34145/</id>
    <published>2020-04-15T06:12:43.000Z</published>
    <updated>2020-04-15T06:12:43.000Z</updated>
    
    <content type="html"><![CDATA[<span class="label default">Mysql</span> <span class="label primary">表复制</span> <span class="label success">INSERT INTO</span> <span class="label danger">SELECT * INTO</span><h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><p><img src="/images/article_mariadb.jpeg" alt></p><div class="note primary">            <p>玩数据的都会涉及数据库，虽然Navicate带来了许多便利，但是本人还是喜欢使用sql，本篇介绍一下关于表复制的相关sql。</p>          </div><a id="more"></a><hr><h4 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h4><p>表复制分为表结构复制、表数据复制与整表（表结构+表数据）复制。</p><blockquote><p>表结构</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 创建表结构</span><br><span class="line">CREATE TABLE 新表 LIKE 旧表;</span><br><span class="line"></span><br><span class="line">CREATE TABLE 新表 SELECT * FROM 旧表 WHERE 1=2;</span><br><span class="line"></span><br><span class="line">SELECT * INTO 表2 FROM 表1 WHERE 1=2;</span><br><span class="line"></span><br><span class="line"># 查看创建表的sql</span><br><span class="line">SHOW CREATE TABLE 旧表;</span><br></pre></td></tr></table></figure><blockquote><p>表数据</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT * INTO 新表 FROM 旧表;</span><br><span class="line"></span><br><span class="line">INSERT INTO 新表 SELECT * FROM 旧表;</span><br></pre></td></tr></table></figure><blockquote><p>表结构+表数据</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE 新表 SELECT * FROM 旧表;</span><br></pre></td></tr></table></figure><div class="note danger">            <p><font size="5.5" color="red">弊端：</font><br>新表中没有旧表的primary key、auto_increment等属性，需要通过alter进行添加。</p>          </div><h4 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h4><p>如果是想复制出一个一模一样的表，建议使用：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 查看创建表的sql</span><br><span class="line">SHOW CREATE TABLE 旧表;</span><br><span class="line"></span><br><span class="line">INSERT INTO 新表 SELECT * FROM 旧表;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;span class=&quot;label default&quot;&gt;Mysql&lt;/span&gt; &lt;span class=&quot;label primary&quot;&gt;表复制&lt;/span&gt; &lt;span class=&quot;label success&quot;&gt;INSERT INTO&lt;/span&gt; &lt;span class=&quot;label danger&quot;&gt;SELECT * INTO&lt;/span&gt;
&lt;h4 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;/images/article_mariadb.jpeg&quot; alt&gt;&lt;/p&gt;
&lt;div class=&quot;note primary&quot;&gt;
            &lt;p&gt;玩数据的都会涉及数据库，虽然Navicate带来了许多便利，但是本人还是喜欢使用sql，本篇介绍一下关于表复制的相关sql。&lt;/p&gt;
          &lt;/div&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://pygo2.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Mysql" scheme="http://pygo2.cn/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>Linux-学习之增强篇-crontab</title>
    <link href="http://pygo2.cn/articles/40314/"/>
    <id>http://pygo2.cn/articles/40314/</id>
    <published>2020-04-01T02:11:01.000Z</published>
    <updated>2020-04-01T02:11:01.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><div class="note danger">            <p><font size="5.5" color="#FF6600">Linux自带的定时任务命令</font>。<br><img src="/images/article_crontab.png" alt></p>          </div><span class="label danger">Linux</span> <span class="label warning">crontab</span> <span class="label success">高级教程系列</span> <span class="label info">定时任务</span><a id="more"></a><hr><h4 id="推荐指数"><a href="#推荐指数" class="headerlink" title="推荐指数"></a>推荐指数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🌟🌟🌟</span><br></pre></td></tr></table></figure><h4 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h4><p>定时去执行指定的程序。</p><p>首先，先查看一下命令基础使用规则：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]#cat /etc/crontab</span><br><span class="line">SHELL=/bin/bash</span><br><span class="line">PATH=/sbin:/bin:/usr/sbin:/usr/bin</span><br><span class="line">MAILTO=root</span><br><span class="line"></span><br><span class="line"># For details see man 4 crontabs</span><br><span class="line"></span><br><span class="line"># Example of job definition:</span><br><span class="line"># .---------------- minute (0 - 59)</span><br><span class="line"># |  .------------- hour (0 - 23)</span><br><span class="line"># |  |  .---------- day of month (1 - 31)</span><br><span class="line"># |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...</span><br><span class="line"># |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat</span><br><span class="line"># |  |  |  |  |</span><br><span class="line"># *  *  *  *  * user-name  command to be executed</span><br></pre></td></tr></table></figure></p><p>结合上图，可以语法糖：分钟 小时 日期 月份 星期 [用户] 命令</p><h4 id="参数详解"><a href="#参数详解" class="headerlink" title="参数详解"></a>参数详解</h4><p>crontab的参数很少。</p><blockquote><p>-e</p></blockquote><p>编辑任务，已vim的方式打开crontab的任务列表，可以进行新增、编辑、删除等任务操作。</p><blockquote><p>-l</p></blockquote><p>查看任务，相当于cat 任务表。</p><h4 id="符号说明"><a href="#符号说明" class="headerlink" title="符号说明"></a>符号说明</h4><blockquote><p>*</p></blockquote><p>代表全部，默认*。</p><blockquote><p>/</p></blockquote><p>代表除，符合能被后面等数整除的条件，例如：/2</p><blockquote><p>-</p></blockquote><p>代表范围，8-12包含：8、9、10、11、12</p><blockquote><p>,（英文）</p></blockquote><p>代表指定的数，1,10,22，只有在1,10,22才执行</p><h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><blockquote><p>每小时的第5和第10分钟执行command</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5,10 * * * * command</span><br></pre></td></tr></table></figure><blockquote><p>每隔5min执行command</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/5 * * * * command</span><br></pre></td></tr></table></figure><blockquote><p>每隔1小时执行command</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* */1 * * * command</span><br></pre></td></tr></table></figure><blockquote><p>8点的第5分钟执行command：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5 8 * * * command</span><br></pre></td></tr></table></figure><blockquote><p>8-11点的第5和10分钟执行command：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5,10 8-11 * * * command</span><br></pre></td></tr></table></figure><blockquote><p>每周一8-11点的第5和10分钟执行command：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5,10 8-11 * * 1 command</span><br></pre></td></tr></table></figure><blockquote><p>每月1，5，10号的8-11点的第5和10分钟执行command：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5,10 8-11 1,5,10 * 1 command</span><br></pre></td></tr></table></figure><h4 id="特别说明"><a href="#特别说明" class="headerlink" title="特别说明"></a>特别说明</h4><p>crontab很简单，但是很实用，欢迎大家一起交流share。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h4&gt;&lt;div class=&quot;note danger&quot;&gt;
            &lt;p&gt;&lt;font size=&quot;5.5&quot; color=&quot;#FF6600&quot;&gt;Linux自带的定时任务命令&lt;/font&gt;。&lt;br&gt;&lt;img src=&quot;/images/article_crontab.png&quot; alt&gt;&lt;/p&gt;
          &lt;/div&gt;
&lt;span class=&quot;label danger&quot;&gt;Linux&lt;/span&gt; &lt;span class=&quot;label warning&quot;&gt;crontab&lt;/span&gt; &lt;span class=&quot;label success&quot;&gt;高级教程系列&lt;/span&gt; &lt;span class=&quot;label info&quot;&gt;定时任务&lt;/span&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://pygo2.cn/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://pygo2.cn/tags/Linux/"/>
    
      <category term="Linux增强篇" scheme="http://pygo2.cn/tags/Linux%E5%A2%9E%E5%BC%BA%E7%AF%87/"/>
    
  </entry>
  
  <entry>
    <title>Linux-学习之增强篇:firewall-cmd</title>
    <link href="http://pygo2.cn/articles/60013/"/>
    <id>http://pygo2.cn/articles/60013/</id>
    <published>2020-03-28T01:16:18.000Z</published>
    <updated>2020-03-28T01:16:18.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><div class="note danger">            <p>CentOS7开始，默认使用firewall来配置防火墙，没有安装iptables（旧版默认安装）。<br><img src="/images/article_firewall.jpg" alt></p><font color="#dd0000" size="5">时代在更新、CentOS也在更新，我们也必须要更新。</font>          </div><span class="label info">Linux</span> <span class="label warning">防火墙</span> <span class="label success">高级教程系列</span><a id="more"></a><hr><p>防火墙没什么好说的，直接开始正餐。</p><h4 id="推荐指数"><a href="#推荐指数" class="headerlink" title="推荐指数"></a>推荐指数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🌟🌟🌟🌟🌟</span><br></pre></td></tr></table></figure><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install firewalld</span><br></pre></td></tr></table></figure><h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><blockquote><p>查看运行状态</p></blockquote><table><thead><tr><th style="text-align:center">command</th></tr></thead><tbody><tr><td style="text-align:center">firewall-cmd –state</td></tr><tr><td style="text-align:center">systemctl status firewalld</td></tr></tbody></table><blockquote><p>启动</p></blockquote><table><thead><tr><th style="text-align:center">function</th><th style="text-align:center">command</th></tr></thead><tbody><tr><td style="text-align:center">开启服务</td><td style="text-align:center">systemctl start firewalld.service</td></tr><tr><td style="text-align:center">关闭服务</td><td style="text-align:center">systemctl stop firewalld.service</td></tr><tr><td style="text-align:center">开机自动启动</td><td style="text-align:center">systemctl enable firewalld.service</td></tr><tr><td style="text-align:center">关闭开机启动</td><td style="text-align:center">systemctl disable firewalld.service</td></tr></tbody></table><blockquote><p>增加端口</p></blockquote><table><thead><tr><th style="text-align:center">function</th><th style="text-align:center">command</th></tr></thead><tbody><tr><td style="text-align:center">永久</td><td style="text-align:center">firewall-cmd –permanent –zone=public –add-port=8080-8081/tcp</td></tr><tr><td style="text-align:center">临时</td><td style="text-align:center">firewall-cmd –zone=public –add-port=8080-8081/tcp</td></tr></tbody></table><ul><li>firewall-cmd：Linux中提供的操作firewall的工具。<br>– zone：指定作用域。<br>– add-port=3306/tcp：添加的端口，格式为：端口/通讯协议。<br>– permanent：表示永久生效，没有此参数重启后会失效。</li></ul><blockquote><p>删除端口</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --remove-port=3306/tcp --permanent</span><br></pre></td></tr></table></figure><p>改变端口即可。</p><blockquote><p>查看端口</p></blockquote><table><thead><tr><th style="text-align:center">function</th><th style="text-align:center">command</th></tr></thead><tbody><tr><td style="text-align:center">简略</td><td style="text-align:center">firewall-cmd –list-ports</td></tr><tr><td style="text-align:center">详情</td><td style="text-align:center">firewall-cmd –list-ports</td></tr></tbody></table><h4 id="其他知识"><a href="#其他知识" class="headerlink" title="其他知识"></a>其他知识</h4><p>关于<strong><em>–zone=public</em></strong>，应该会有人不了解，对<strong>–zone</strong>的参数做个说明：</p><table><thead><tr><th style="text-align:center">type</th><th style="text-align:left">desc</th></tr></thead><tbody><tr><td style="text-align:center">drop</td><td style="text-align:left">任何接受的网络数据包都被丢弃，没有任何回复</td></tr><tr><td style="text-align:center">block</td><td style="text-align:left">任何接收的网络连接都被IPv4的icmp-host-prohibited信息和IPv6的icmp6-adm-prohibited信息所拒绝</td></tr><tr><td style="text-align:center">public</td><td style="text-align:left">在公共区域内使用，不能相信网络内的其他计算机不会对你的计算机造成危害</td></tr><tr><td style="text-align:center">external</td><td style="text-align:left">特别是为路由器启动了伪装功能的外部网</td></tr><tr><td style="text-align:center">dmz</td><td style="text-align:left">用于你的非军事区内的电脑</td></tr><tr><td style="text-align:center">work</td><td style="text-align:left">用于工作区</td></tr><tr><td style="text-align:center">home</td><td style="text-align:left">用于家庭网络</td></tr><tr><td style="text-align:center">internal</td><td style="text-align:left">用于内部网络。你可以基本相信网络内的其他计算机不会危害到你</td></tr><tr><td style="text-align:center">trusted</td><td style="text-align:left">可接受所有的网络连接</td></tr></tbody></table><p>firewalld 的默认zone是public。</p><p>详细了解firewall-cmd，请使用<strong><em>firewall-cmd –help</em></strong>查看。</p><h4 id="特殊说明"><a href="#特殊说明" class="headerlink" title="特殊说明"></a>特殊说明</h4><p>添加完端口之后，记得reload或者重启，重新加载，否则不会生效。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># reload</span><br><span class="line">firewall-cmd --reload</span><br><span class="line"></span><br><span class="line"># restart</span><br><span class="line">#别忘记重启防火墙</span><br><span class="line">systemctl restart firewalld</span><br></pre></td></tr></table></figure></p><p>本人也是属于探索阶段，欢迎大家一起交流，有问题请在博客进行留言。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;div class=&quot;note danger&quot;&gt;
            &lt;p&gt;CentOS7开始，默认使用firewall来配置防火墙，没有安装iptables（旧版默认安装）。&lt;br&gt;&lt;img src=&quot;/images/article_firewall.jpg&quot; alt&gt;&lt;/p&gt;&lt;font color=&quot;#dd0000&quot; size=&quot;5&quot;&gt;时代在更新、CentOS也在更新，我们也必须要更新。&lt;/font&gt;
          &lt;/div&gt;
&lt;span class=&quot;label info&quot;&gt;Linux&lt;/span&gt; &lt;span class=&quot;label warning&quot;&gt;防火墙&lt;/span&gt; &lt;span class=&quot;label success&quot;&gt;高级教程系列&lt;/span&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://pygo2.cn/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://pygo2.cn/tags/Linux/"/>
    
      <category term="Linux增强篇" scheme="http://pygo2.cn/tags/Linux%E5%A2%9E%E5%BC%BA%E7%AF%87/"/>
    
  </entry>
  
</feed>
