<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>PyGo²</title>
  
  <subtitle>一个爱老婆的python程序猿。。。。。。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://gis90.github.io/"/>
  <updated>2019-12-15T07:19:18.000Z</updated>
  <id>https://gis90.github.io/</id>
  
  <author>
    <name>mingliang.gao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ffmpeg的基础学习</title>
    <link href="https://gis90.github.io/articles/37692/"/>
    <id>https://gis90.github.io/articles/37692/</id>
    <published>2019-12-15T07:19:18.000Z</published>
    <updated>2019-12-15T07:19:18.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note primary">            <h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p><img src="/images/article_ffmpeg.png" alt></p><p>大致的意思：FFmpeg是一款多媒体框架，能处理音频、视频等，不管什么格式的数据都可以进行处理，支持MacOS、Windows、Linux等各种系统。</p><p>FFmpeg：<font size="6" color="red">我是处理媒介数据方面的专家，我很牛逼，快来用我吧！！！</font><br>我：<font size="6" color="blue">好的，👌！</font></p>          </div><a id="more"></a><hr><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>因为公司做了一个宣传片，把宣传片视频上传到第三方网站上，发现非会员会有广告。这还得了，如果客户没有会员，岂不是要等，为了解决这个问题，从一个程序员的角度来想办法，直接做个页面，把视频放进去，通过域名访问就可以解决无广告的问题。</p><p>周末花了一上午的时候搞完了，通过域名直接访问看，可以播放视频，但是发现视频有点卡，查看了一下视频大小：6分钟的视频500M，有点大啊，于是想压缩一下，上网搜索<strong><em>在线 视频压缩</em></strong>，TMD，要不就收费、要不就限制100M，身为程序员的我咋可能花钱去处理。于是，继续搜索<strong><em>python 视频压缩</em></strong>，看到了自己没有见过的<strong><em>ffmpeg</em></strong>命令，查了下资料，评价还不错，花了1小时搞定了<strong><em>ffmpeg</em></strong>环境，压缩 + 转格式的方式处理，最后视频110M，压缩了将近4/5，为了方便日后使用以及推荐给大家使用，写下本篇。</p><p>背景介绍完毕了，开始搞。</p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>安装需要下载2个文件：ffmpeg音视频处理工具，yasm是一款汇编器。yasm是安不安装都可以，既然ffmpeg里面都要求了就装上，省得日后麻烦。<br>文件下载地址：<br>yasm：<a href="http://yasm.tortall.net/Download.html" target="_blank" rel="noopener">http://yasm.tortall.net/Download.html</a><br>ffmpeg：<a href="http://ffmpeg.org/download.html" target="_blank" rel="noopener">http://ffmpeg.org/download.html</a></p><p>都是国外下载地址，如果翻不过去，本篇提供下载地址，百度云盘：</p><table><thead><tr><th style="text-align:center">name</th><th style="text-align:center">url</th><th style="text-align:center">password</th></tr></thead><tbody><tr><td style="text-align:center">yasm</td><td style="text-align:center"><a href="https://pan.baidu.com/s/14CEpqZvDhgyIcwjsINw4Gg" target="_blank" rel="noopener">https://pan.baidu.com/s/14CEpqZvDhgyIcwjsINw4Gg</a></td><td style="text-align:center">ymw5</td></tr><tr><td style="text-align:center">ffmpeg</td><td style="text-align:center"><a href="https://pan.baidu.com/s/1n65Ss2S7rtp5bYIFxKHeHQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1n65Ss2S7rtp5bYIFxKHeHQ</a></td><td style="text-align:center">j3oj</td></tr></tbody></table><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="上传-amp-amp-解压"><a href="#上传-amp-amp-解压" class="headerlink" title="上传 &amp;&amp; 解压"></a>上传 &amp;&amp; 解压</h4><p>把yasm &amp;&amp; ffmpeg文件下载到本地，需要上传到Linux服务器，在这里我采用的<strong><em>scp</em></strong>命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp ~/Downloads/ffmpeg/* root@192.168.151.64:~</span><br></pre></td></tr></table></figure><p>上传完之后，ssh连接服务器，找到上传的文件进行解压：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># ffmpeg</span><br><span class="line">tar -jxvf ffmpeg-4.2.1.tar.bz2</span><br><span class="line"></span><br><span class="line"># yasm</span><br><span class="line">tar -zxvf yasm-1.3.0.tar.gz</span><br></pre></td></tr></table></figure><p>看好了，在这里yasm用的参数是<strong>z</strong>，ffmpeg用的是<strong>j</strong>，因为压缩的格式不一样，所以参数是不一样的，不知道的请看下tar的用法。</p><p><img src="ffmpeg.png" alt></p><h4 id="yasm安装"><a href="#yasm安装" class="headerlink" title="yasm安装"></a>yasm安装</h4><p>进入到yasm-1.3.0进行编译安装，因为是源码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd yasm-1.3.0/</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure></p><p>这个安装过程是没有任何问题的，等待安装完成即可。</p><h4 id="ffmpeg安装"><a href="#ffmpeg安装" class="headerlink" title="ffmpeg安装"></a>ffmpeg安装</h4><p>进入ffmpeg-4.2.1文件夹进行编译安装。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./configure --enable-shared --prefix=/usr/loacl/ffmpeg</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure></p><p>编译过程有点长，请耐心等待，也可以做些别的事情。<br>安装成功后，<strong><em>cd /usr/loacl/ffmpeg</em></strong>进入安装目录，查看一下发现有bin、include,、ib、share这4个目录，</p><ul><li>bin：是ffmpeg主程序二进制目录</li><li>include是C/C++头文件目录</li><li>lib是编译好的库文件目录</li><li>share是文档目录</li></ul><h4 id="lib配置"><a href="#lib配置" class="headerlink" title="lib配置"></a>lib配置</h4><blockquote><p>ld.so.conf</p></blockquote><p>编辑lib包的配置文件，加入<strong><em>/usr/local/ffmpeg/lib</em></strong>内容（/usr/local/ffmpeg是ffmpeg的安装目录，根据个人不同安装目录修改）。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ld.so.conf</span><br></pre></td></tr></table></figure></p><p>更新环境变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldconfig</span><br></pre></td></tr></table></figure></p><blockquote><p>/etc/profile</p></blockquote><p>打开/etc/profile文件，在文件末尾加入以下内容:<br>export PATH=”/usr/local/ffmpeg/bin:$PATH”<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure></p><p>然后保存并运行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure></p><h4 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h4><p>如果上步配置正确了，那么运行ffmpeg命令就会出现下图所示，因为ffmpeg不是系统命令，也不再系统PATH里面，所以执行要写全路径+ffmpeg。</p><p><img src="ffmpeg_run.png" alt></p><h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">libavdevice.so.57: cannot open shared object file: No such file or directory</span><br></pre></td></tr></table></figure><p>如果出现了以上问题，那么就检查一下在lib配置配置那步，是否做对了；如果解决不了，欢迎留言咨询。</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><blockquote><p>获得媒体文件的信息：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/ffmpeg/bin/ffmpeg -i file_name</span><br></pre></td></tr></table></figure><p>音频、视频都可以。</p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note primary&quot;&gt;
            &lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/images/article_ffmpeg.png&quot; alt&gt;&lt;/p&gt;&lt;p&gt;大致的意思：FFmpeg是一款多媒体框架，能处理音频、视频等，不管什么格式的数据都可以进行处理，支持MacOS、Windows、Linux等各种系统。&lt;/p&gt;&lt;p&gt;FFmpeg：&lt;font size=&quot;6&quot; color=&quot;red&quot;&gt;我是处理媒介数据方面的专家，我很牛逼，快来用我吧！！！&lt;/font&gt;&lt;br&gt;我：&lt;font size=&quot;6&quot; color=&quot;blue&quot;&gt;好的，👌！&lt;/font&gt;&lt;/p&gt;
          &lt;/div&gt;
    
    </summary>
    
      <category term="工具集" scheme="https://gis90.github.io/categories/%E5%B7%A5%E5%85%B7%E9%9B%86/"/>
    
    
      <category term="ffmpeg" scheme="https://gis90.github.io/tags/ffmpeg/"/>
    
  </entry>
  
  <entry>
    <title>Confluence之隐藏人员菜单栏</title>
    <link href="https://gis90.github.io/articles/13168/"/>
    <id>https://gis90.github.io/articles/13168/</id>
    <published>2019-12-10T06:15:33.000Z</published>
    <updated>2019-12-10T06:15:33.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note primary">            <h4 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h4><p>在公司搭建了一个Wiki，用的是Confluence + MariaDB + Linux架构，搭建之后不管在任何用户的菜单栏都会有用户这个选项，导致不管任何用户都可以邀请、注册等操作，正常来说用户管理只有管理员才有的权限，解决前如下图：</p><p><img src="/images/article_confluence_qian.png" alt></p><font color="red" size="6.0">解决后如下图：</font><p><img src="/images/article_confluence_hou.png" alt></p>          </div><a id="more"></a><hr><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><p>在网上查了很多，都没有实际的解决方案。于是，官网走起，在官网的<font color="red" size="6.0">Search</font>下，搜索关键字：<font color="red" size="6.0">hide tools menu users</font>，结果如下：</p><p><img src="confluence_search.png" alt></p><p>点进去查看之后，发现给了我一个解决的灵感，具体如下：</p><blockquote><p>登录管理员账户</p></blockquote><blockquote><p>打开设置 -&gt; 一般配置</p></blockquote><p><img src="confluence_config.png" alt></p><blockquote><p>找到自定义HTML</p></blockquote><p><img src="confluence_html.png" alt></p><blockquote><p>在HEAD尾部加入一下代码</p></blockquote><p><img src="confluence_set.png" alt></p><blockquote><p>保存后进行刷新测试</p></blockquote><h4 id="具体代码"><a href="#具体代码" class="headerlink" title="具体代码"></a>具体代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">jQuery().ready(function() &#123;</span><br><span class="line">  jQuery(&quot;#people-directory-link&quot;).hide();</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="官方说明"><a href="#官方说明" class="headerlink" title="官方说明"></a>官方说明</h4><p>Confluence官方：<a href="https://confluence.atlassian.com/confkb/how-to-hide-the-space-tools-menu-for-certain-users-or-groups-in-confluence-816877024.html" target="_blank" rel="noopener">https://confluence.atlassian.com/confkb/how-to-hide-the-space-tools-menu-for-certain-users-or-groups-in-confluence-816877024.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note primary&quot;&gt;
            &lt;h4 id=&quot;问题背景&quot;&gt;&lt;a href=&quot;#问题背景&quot; class=&quot;headerlink&quot; title=&quot;问题背景&quot;&gt;&lt;/a&gt;问题背景&lt;/h4&gt;&lt;p&gt;在公司搭建了一个Wiki，用的是Confluence + MariaDB + Linux架构，搭建之后不管在任何用户的菜单栏都会有用户这个选项，导致不管任何用户都可以邀请、注册等操作，正常来说用户管理只有管理员才有的权限，解决前如下图：&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/images/article_confluence_qian.png&quot; alt&gt;&lt;/p&gt;&lt;font color=&quot;red&quot; size=&quot;6.0&quot;&gt;解决后如下图：&lt;/font&gt;&lt;p&gt;&lt;img src=&quot;/images/article_confluence_hou.png&quot; alt&gt;&lt;/p&gt;
          &lt;/div&gt;
    
    </summary>
    
      <category term="工具集" scheme="https://gis90.github.io/categories/%E5%B7%A5%E5%85%B7%E9%9B%86/"/>
    
    
      <category term="WIKI" scheme="https://gis90.github.io/tags/WIKI/"/>
    
  </entry>
  
  <entry>
    <title>Linux学习之增强篇-lsof</title>
    <link href="https://gis90.github.io/articles/35042/"/>
    <id>https://gis90.github.io/articles/35042/</id>
    <published>2019-12-06T01:53:46.000Z</published>
    <updated>2019-12-06T01:53:46.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note danger">            <h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Linux万能命令之lsof，<font size="6.5" color="red">只有你想不到的，没有踏做不到</font>。<br><img src="/images/article_lsof.png" alt></p>          </div><a id="more"></a><hr><h3 id="推荐指数"><a href="#推荐指数" class="headerlink" title="推荐指数"></a>推荐指数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🌟🌟🌟🌟🌟</span><br></pre></td></tr></table></figure><h3 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h3><p>lsof = list opened files，大致的意思就是列举系统中被打开的文件。玩linux的人都知道：“linux万物皆文件”，目录、sockets文件、字符设备、块设备、管道符等等。所以在linux系统之内，不管干什么都会跟文件挂上边，lsof是打开这些被使用文件列表的一个工具。不过，在平常，我用的最多就是查端口以及文件被哪个进程使用，命令非常强大。</p><h3 id="文件类型"><a href="#文件类型" class="headerlink" title="文件类型"></a>文件类型</h3><p>在关于lsof能进行查看的文件类型，做了一下分类统计，结果如下：</p><ul><li>普通文件（.txt、.log等等）</li><li>目录</li><li>网络文件系统的文件</li><li>字符或设备文件</li><li>(函数)共享库（lib文件目录下的，.so等）</li><li>管道、命名管道（.pip等）</li><li>符号链接（软链）</li><li>网络文件（socket相关文件，.sock）</li></ul><p>应该还有其他的文件，本人刚入linux系统，不足的地方请各路神山补充，欢迎留言👏👏👏。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>lsof命令是linux系统非自带的一个命令。</p><blockquote><p>检查是否已安装</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">方式一：</span><br><span class="line">lsof</span><br><span class="line"></span><br><span class="line">方式二：</span><br><span class="line">which lsof</span><br></pre></td></tr></table></figure><p>出现<strong><em>-bash: lsof: command not found </em></strong>，说明命令还没被安装，如果命令已存在，忽略安装步骤。</p><blockquote><p>安装</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# yum install lsof</span><br><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">base                                                                                | 3.6 kB  00:00:00</span><br><span class="line">extras                                                                              | 3.4 kB  00:00:00</span><br><span class="line">updates                                                                             | 3.4 kB  00:00:00</span><br><span class="line">extras/7/x86_64/primary_db                                                          | 200 kB  00:00:00</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: mirrors.tuna.tsinghua.edu.cn</span><br><span class="line"> * extras: mirrors.tuna.tsinghua.edu.cn</span><br><span class="line"> * updates: mirrors.tuna.tsinghua.edu.cn</span><br><span class="line">Resolving Dependencies</span><br><span class="line">--&gt; Running transaction check</span><br><span class="line">---&gt; Package lsof.x86_64 0:4.87-6.el7 will be installed</span><br><span class="line">--&gt; Finished Dependency Resolution</span><br><span class="line"></span><br><span class="line">Dependencies Resolved</span><br><span class="line"></span><br><span class="line">===========================================================================================================</span><br><span class="line"> Package                Arch                     Version                      Repository              Size</span><br><span class="line">===========================================================================================================</span><br><span class="line">Installing:</span><br><span class="line"> lsof                   x86_64                   4.87-6.el7                   base                   331 k</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">===========================================================================================================</span><br><span class="line">Install  1 Package</span><br><span class="line"></span><br><span class="line">Total download size: 331 k</span><br><span class="line">Installed size: 927 k</span><br><span class="line">Is this ok [y/d/N]: y</span><br><span class="line">Downloading packages:</span><br><span class="line">lsof-4.87-6.el7.x86_64.rpm                                                          | 331 kB  00:00:00</span><br><span class="line">Running transaction check</span><br><span class="line">Running transaction test</span><br><span class="line">Transaction test succeeded</span><br><span class="line">Running transaction</span><br><span class="line">  Installing : lsof-4.87-6.el7.x86_64                                                                  1/1</span><br><span class="line">  Verifying  : lsof-4.87-6.el7.x86_64                                                                  1/1</span><br><span class="line"></span><br><span class="line">Installed:</span><br><span class="line">  lsof.x86_64 0:4.87-6.el7</span><br><span class="line"></span><br><span class="line">Complete!</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>整个安装过程问题不大，大大小小的lsof安装已经也装过10几次了，重没发生过意外，有问题的话可以邮件、微信联系我，一起来进行解决。</p><h3 id="输出内容"><a href="#输出内容" class="headerlink" title="输出内容"></a>输出内容</h3><p>这个先简单介绍一下lsof输出信息的内容，具体格式如图：</p><p><img src="lsof_fields.png" alt></p><blockquote><p>COMMAND</p></blockquote><p>command，进程的名称</p><blockquote><p>PID</p></blockquote><p>process id，进程标识符id</p><blockquote><p>TID</p></blockquote><p>thread id，线程标识符id</p><blockquote><p>USER</p></blockquote><p>user，进程所属用户</p><blockquote><p>FD</p></blockquote><p>file description，文件描述符，应用程序可以通过文件描述符识别该文件，一般有以下取值：</p><ul><li>cwd：current work dirctory，应用程序启动的目录</li><li>txt：program text (code and data)，该类型的文件是程序代码，如应用程序二进制文件本身或共享库</li><li>lnn：library references (AIX)</li><li>er：FD information error (see NAME column)</li><li>jld：jail directory (FreeBSD)</li><li>ltx：shared library text (code and data)</li><li>mxx：hex memory-mapped type number xx</li><li>m86：DOS Merge mapped file</li><li>mem：memory-mapped file</li><li>mmap：memory-mapped device</li><li>pd：parent directory</li><li>rtd：root directory</li><li>tr：kernel trace file (OpenBSD)</li><li>v86：VP/ix mapped file</li><li>0：表示标准输出</li><li>1：表示标准输入</li><li>2：表示标准错误</li></ul><blockquote><p>TYPE</p></blockquote><p>type，文件类型，常见的文件类型有以下几种：</p><ul><li>DIR：表示目录</li><li>CHR：表示字符类型</li><li>BLK：块设备类型</li><li>UNIX：UNIX域套接字</li><li>FIFO：先进先出(FIFO)队列</li><li>IPv4：网际协议(IP)套接字</li></ul><blockquote><p>DEVICE</p></blockquote><p>device，指定磁盘的名称</p><blockquote><p>SIZE/OFF</p></blockquote><p>size，文件的大小</p><blockquote><p>NODE</p></blockquote><p>node，索引节点，在这里啰嗦几句，磁盘存储机制，来个比喻吧：每个磁盘是一个大房子，大房子里面有多个小房子用来存储东西，但是呢每个小房子都有自己的房间号1、2、3、4、5、6……就这样一直排，我们把需要存储的数据放在小房子里面，一个不够就两个、两个不够就三个、以此类推，但是有个记录表需要记录刚存储的数据所对应的房间号，这样物流存储与房间号就对应起来了，所谓的房间号就是现在看的NODE节点，NODE节点就是文件在磁盘上的标识。</p><blockquote><p>NAME</p></blockquote><p>name，打开文件的确切名称</p><h3 id="参数详解"><a href="#参数详解" class="headerlink" title="参数详解"></a>参数详解</h3><p>lsof参数有太多太多，这里不一一列举，只讲解一下常用的参数，如果有想深入了解的，请<font size="5.5" color="red">man lsof</font>。</p><blockquote><p>-a</p></blockquote><p>列出打开文件存在的进程</p><blockquote><p>-c &lt;进程名&gt;</p></blockquote><p>列出指定名称进程所使用到的文件</p><blockquote><p>-d &lt;文件&gt;</p></blockquote><p>列出打开指定文件描述的进程</p><blockquote><p>+d &lt;目录&gt;</p></blockquote><p>列出目录下被打开的文件</p><blockquote><p>+D &lt;目录&gt;</p></blockquote><p>递归列出目录下被打开的文件</p><blockquote><p>-n &lt;目录&gt;</p></blockquote><p>列出使用NFS的文件</p><blockquote><p>-u &lt;用户名&gt;</p></blockquote><p>列出指定用户打开的文件</p><blockquote><p>-p &lt;进程id&gt;</p></blockquote><p>列出指定进程号所打开的文件</p><blockquote><p>-i &lt;条件&gt;</p></blockquote><p>列出打开的套接字，过滤条件：tcp、udp、4、6、协议、:端口、 @ip</p><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><blockquote><p>查看端口</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -i :80</span><br></pre></td></tr></table></figure><p><img src="lsof_port.png" alt></p><p>列出80端口目前打开的文件列表。</p><blockquote><p>查看连接</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 所有网络连接信息</span><br><span class="line">lsof -i</span><br><span class="line"></span><br><span class="line"># TCP网络连接信息</span><br><span class="line">lsof -i tcp</span><br><span class="line"></span><br><span class="line"># UDP网络连接信息</span><br><span class="line">lsof -i udp</span><br><span class="line"></span><br><span class="line"># TCP连接方式、端口为8080的连接信息</span><br><span class="line">lsof -i tcp:8080</span><br><span class="line"></span><br><span class="line"># UDP连接方式、端口为8080的连接信息</span><br><span class="line">lsof -i udp:8080</span><br></pre></td></tr></table></figure><p><img src="lsof_i.png" alt></p><blockquote><p>指定进程名称</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -c ngin</span><br></pre></td></tr></table></figure><p><img src="lsof_c.png" alt></p><p>列出以ngin开头的进程打开的文件列表。</p><blockquote><p>指定进程id</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -p 3215</span><br></pre></td></tr></table></figure><p><img src="lsof_c_id.png" alt></p><p>列出指定进程打开的文件列表。</p><blockquote><p>指定用户</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -u root</span><br></pre></td></tr></table></figure><p><img src="lsof_user.png" alt></p><p>列出指定用户打开的文件列表。</p><blockquote><p>查看指定目录被打开的文件（目录非遍历）</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof +d /usr/local/</span><br></pre></td></tr></table></figure><p><img src="lsof_dd.png" alt></p><p>列出目录下被进程打开的文件列表。</p><blockquote><p>查看指定目录被打开的文件（目录遍历）</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof +D /usr/local/</span><br></pre></td></tr></table></figure><p><img src="lsof_D.png" alt></p><p>遍历搜索的方式列出目录下被进程打开的文件列表。</p><h3 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h3><p>本篇先写到这里吧，以上是我常用的命令以及参数说明，各种参数可以一起使用，如果不能满足大家的需求请见谅，毕竟本人是linux小白一枚，<font size="6.5" color="blue">在不断尝试中去学习、去进步、去成长、去积累吧</font>，敬自己。</p><h3 id="学习参考"><a href="#学习参考" class="headerlink" title="学习参考"></a>学习参考</h3><p>lsof简书：<a href="https://www.jianshu.com/p/be0c534c6a41" target="_blank" rel="noopener">https://www.jianshu.com/p/be0c534c6a41</a><br>每日一命令lsof：<a href="https://www.cnblogs.com/peida/archive/2013/02/26/2932972.html" target="_blank" rel="noopener">https://www.cnblogs.com/peida/archive/2013/02/26/2932972.html</a></p><p>感谢上面的2篇文章。</p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note danger&quot;&gt;
            &lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;Linux万能命令之lsof，&lt;font size=&quot;6.5&quot; color=&quot;red&quot;&gt;只有你想不到的，没有踏做不到&lt;/font&gt;。&lt;br&gt;&lt;img src=&quot;/images/article_lsof.png&quot; alt&gt;&lt;/p&gt;
          &lt;/div&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://gis90.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://gis90.github.io/tags/Linux/"/>
    
      <category term="Linux增强篇" scheme="https://gis90.github.io/tags/Linux%E5%A2%9E%E5%BC%BA%E7%AF%87/"/>
    
  </entry>
  
  <entry>
    <title>爬虫之公司网站首页Title、Keywords、Description</title>
    <link href="https://gis90.github.io/articles/43681/"/>
    <id>https://gis90.github.io/articles/43681/</id>
    <published>2019-11-04T08:38:46.000Z</published>
    <updated>2019-11-04T08:38:46.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note primary">            <p>工作上涉及公司网站SEO优化相关的工作，但是在<font color="red" size="6.5">Title、Keywords、Description</font>这块有点不清楚。于是，参考了一些与自己公司业务上有相同的公司网站内容，在进行词语分析选取一些关键词，在结合本公司的业务内容关键词进行综合，完成了网站SEO优化的<font color="red" size="6.5">Keywords</font>。</p>          </div><p><img src="/images/article_kwpachong.jpg" style="border:1.5px solid blue"></p><a id="more"></a><hr><p>废话也不多说了，关于爬虫相关使用的教程在前面以及介绍了，而且还有栗子，这里主要贴上相关代码。除了爬取数据之外，本程序还把处理好的数据进行分析选取出现频率最多<strong><em>Keywords</em></strong>，以及把爬取的数据存储到excel中。</p><blockquote><p>思路</p></blockquote><p>抓取数据 -&gt; 解析 -&gt; 存储 -&gt; 分析</p><blockquote><p>特色</p></blockquote><p>在本次爬虫中，运用了<strong><em>gevent协程</em></strong>，玩python不清楚协程的同学请自行脑补。</p><blockquote><p>代码</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">------------------------------------------------</span><br><span class="line"></span><br><span class="line">describe:</span><br><span class="line">    用来抓取指定的物流公司官网的信息，包含title、keywords、description。</span><br><span class="line"></span><br><span class="line">usage:</span><br><span class="line">    python comp_infos_grab.py</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">base_info:</span><br><span class="line">    __version__ = &quot;v.10&quot;</span><br><span class="line">    __author__ = &quot;PyGo&quot;</span><br><span class="line">    __time__ = &quot;2019/12/3&quot;</span><br><span class="line">    __mail__ = &quot;gaoming971366@163.com&quot;</span><br><span class="line"></span><br><span class="line">------------------------------------------------</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">import requests</span><br><span class="line">import gevent</span><br><span class="line">import xlrd</span><br><span class="line">import xlwt</span><br><span class="line">from gevent import monkey; monkey.patch_all()</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">import jieba</span><br><span class="line"></span><br><span class="line">PUBLIC_URL_LIST = &#123;</span><br><span class="line">    &quot;IML俄罗斯海外仓&quot;: &quot;http://www.imlb2c.com/&quot;,</span><br><span class="line">    &quot;旺集科技&quot;: &quot;http://www.wangjigroup.com/&quot;,</span><br><span class="line">    &quot;黑龙江俄速通国际物流有限公司&quot;: &quot;http://www.ruston.cc/&quot;,</span><br><span class="line">    &quot;AliExpress全球速卖通&quot;: &quot;https://sell.aliexpress.com/zh/__pc/shipping/aliexpress_shipping.htm&quot;,</span><br><span class="line">    &quot;中外运集装箱运输有限公司&quot;: &quot;http://www.sinolines.com/&quot;,</span><br><span class="line">    &quot;乐泰国际物流有限公司&quot;: &quot;http://www.letaimzl.com/&quot;,</span><br><span class="line">    &quot;NOEL诺艾尔集团&quot;: &quot;http://www.noelworld.com/&quot;,</span><br><span class="line">    &quot;慧承国际物流&quot;: &quot;http://www.hcwuliu.com/&quot;,</span><br><span class="line">    &quot;满洲里新颖国际货运代理有限公司&quot;: &quot;http://www.mzlxinying.com/&quot;,</span><br><span class="line">    &quot;运盟国际物流&quot;: &quot;http://www.ym-trans.com/&quot;,</span><br><span class="line">    &quot;如易科技&quot;: &quot;http://www.ruecom.cn/&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class companyGrap(object):</span><br><span class="line">    _instance = None</span><br><span class="line"></span><br><span class="line">    def __init__(self):</span><br><span class="line">        super(companyGrap, self).__init__()</span><br><span class="line"></span><br><span class="line">    def __new__(cls, *args, **kwargs):</span><br><span class="line">        if companyGrap._instance is None:</span><br><span class="line">            companyGrap._instance = object.__new__(cls, *args, **kwargs)</span><br><span class="line"></span><br><span class="line">        return companyGrap._instance</span><br><span class="line"></span><br><span class="line">    def _get_infos(self, url):</span><br><span class="line"></span><br><span class="line">        results = dict()</span><br><span class="line">        results[&apos;url&apos;] = url</span><br><span class="line"></span><br><span class="line">        if not url:</span><br><span class="line">            return results</span><br><span class="line"></span><br><span class="line">        payload = &quot;&quot;</span><br><span class="line">        headers = &#123;</span><br><span class="line">            &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        response = requests.get(url, data=payload, headers=headers)</span><br><span class="line">        if response.status_code == 200:</span><br><span class="line">            soup = BeautifulSoup(response.content, &apos;html.parser&apos;)</span><br><span class="line">            head = soup.head</span><br><span class="line">            titles = head.find_all(&apos;title&apos;)</span><br><span class="line">            tl = titles[0].string if titles else &quot;&quot;</span><br><span class="line">            results[&apos;title&apos;] = tl</span><br><span class="line">            keywords = head.find_all(&apos;meta&apos;, attrs=&#123;&apos;name&apos;: &apos;keywords&apos;&#125;)</span><br><span class="line">            kw = keywords[0].attrs.get(&apos;content&apos;) if keywords else &quot;&quot;</span><br><span class="line">            results[&apos;keyword&apos;] = kw</span><br><span class="line">            descriptions = head.find_all(&apos;meta&apos;, attrs=&#123;&apos;name&apos;: &apos;description&apos;&#125;)</span><br><span class="line">            desc = descriptions[0].attrs.get(&apos;content&apos;) if descriptions else &quot;&quot;</span><br><span class="line">            results[&apos;description&apos;] = desc</span><br><span class="line"></span><br><span class="line">        return results</span><br><span class="line"></span><br><span class="line">    def to_excel(self, datas, exlname):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        generate data of excel format to save</span><br><span class="line">        :param datas: excel data</span><br><span class="line">        :param exlname: excel name</span><br><span class="line">        :return: None, excel data</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        f = xlwt.Workbook(encoding=&apos;utf-8&apos;)</span><br><span class="line">        sheet = f.add_sheet(&apos;sheet&apos;, cell_overwrite_ok=True)</span><br><span class="line">        EXCEL_TITLES = [&quot;ID&quot;, &quot;NAME&quot;, &quot;URL&quot;, &apos;TITLE&apos;, &apos;KEYWORDS&apos;, &apos;DESCRIPTION&apos;, &quot;REMARK&quot;]</span><br><span class="line">        BUSINESS = &quot;BUSINESS&quot;</span><br><span class="line"></span><br><span class="line">        style_title = xlwt.XFStyle()</span><br><span class="line">        font = xlwt.Font()</span><br><span class="line">        font.name = &apos;Times New Roman&apos;</span><br><span class="line">        font.bold = True</span><br><span class="line">        font.color_index = 4</span><br><span class="line">        font.height = 220</span><br><span class="line">        style_title.font = font</span><br><span class="line"></span><br><span class="line">        style_content = xlwt.XFStyle()</span><br><span class="line">        font = xlwt.Font()</span><br><span class="line">        font.name = &apos;Times New Roman&apos;</span><br><span class="line">        font.bold = False</span><br><span class="line">        font.color_index = 4</span><br><span class="line">        font.height = 220</span><br><span class="line">        style_content.font = font</span><br><span class="line"></span><br><span class="line">        # 标题</span><br><span class="line">        for i in range(0, len(EXCEL_TITLES)):</span><br><span class="line">            sheet.write(0, i, EXCEL_TITLES[i], style_title)</span><br><span class="line"></span><br><span class="line">        # 合并 &amp;&amp; 重写</span><br><span class="line">        sheet.write_merge(0, 0, 3, 5, BUSINESS, style_title)</span><br><span class="line">        sheet.write_merge(0, 1, 0, 0, &apos;ID&apos;, style_title)</span><br><span class="line">        sheet.write_merge(0, 1, 1, 1, &apos;NAME&apos;, style_title)</span><br><span class="line">        sheet.write_merge(0, 1, 2, 2, &apos;URL&apos;, style_title)</span><br><span class="line">        sheet.write_merge(0, 1, 6, 6, &apos;REMARK&apos;, style_title)</span><br><span class="line">        for i in range(3, 6):</span><br><span class="line">            sheet.write(1, i, EXCEL_TITLES[i], style_content)</span><br><span class="line"></span><br><span class="line">        row = 2</span><br><span class="line">        count = 1</span><br><span class="line">        for line in datas:</span><br><span class="line">            sheet.write(row, 0, count, style_title)</span><br><span class="line">            sheet.write(row, 1, line.get(&apos;name&apos;), style_content)</span><br><span class="line">            sheet.write(row, 2, line.get(&apos;url&apos;), style_content)</span><br><span class="line">            sheet.write(row, 3, line.get(&apos;title&apos;), style_content)</span><br><span class="line">            sheet.write(row, 4, line.get(&apos;keyword&apos;), style_content)</span><br><span class="line">            sheet.write(row, 5, line.get(&apos;description&apos;), style_content)</span><br><span class="line">            row += 1</span><br><span class="line">            count += 1</span><br><span class="line"></span><br><span class="line">        f.save(exlname)</span><br><span class="line"></span><br><span class="line">    def _deal_url(self, k, v):</span><br><span class="line">        return self._get_infos(v)</span><br><span class="line"></span><br><span class="line">    def to_generate_kw(self, datas):</span><br><span class="line">        keywords_src = &quot;&quot;</span><br><span class="line">        for data in datas:</span><br><span class="line">            if not data:</span><br><span class="line">                continue</span><br><span class="line">            keywords_src += data.get(&apos;keyword&apos;)</span><br><span class="line"></span><br><span class="line">        keywords = jieba.lcut(keywords_src, cut_all=False)</span><br><span class="line">        counts = dict()</span><br><span class="line">        for word in keywords:</span><br><span class="line">            if not word:</span><br><span class="line">                continue</span><br><span class="line">            if isinstance(word, unicode):</span><br><span class="line">                word = word.encode(&apos;utf-8&apos;)</span><br><span class="line">            if word in (&apos;|&apos;, &apos;,&apos;, &apos; &apos;, &apos;-&apos;, &apos;，&apos;):</span><br><span class="line">                continue</span><br><span class="line">            counts[word] = counts.get(word, 0) + 1</span><br><span class="line"></span><br><span class="line">        ord_counts = sorted(counts.items(), key=lambda x: x[1], reverse=True)</span><br><span class="line">        for k in ord_counts:</span><br><span class="line">            print &quot;%s: %s&quot; % (k[0], k[1])</span><br><span class="line"></span><br><span class="line">    def run(self, to_excel=False):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        process run</span><br><span class="line">        :param to_excel:</span><br><span class="line">        :return:</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        jobs = list()</span><br><span class="line">        names = list()</span><br><span class="line">        excel_datas = list()</span><br><span class="line">        for k, v in PUBLIC_URL_LIST.iteritems():</span><br><span class="line">            if not k or not v:</span><br><span class="line">                continue</span><br><span class="line">            names.append(k)</span><br><span class="line">            jobs.append(gevent.spawn(self._deal_url, k, v))</span><br><span class="line">        gevent.joinall(jobs)</span><br><span class="line">        for name, job in zip(names, jobs):</span><br><span class="line">            value = job.value</span><br><span class="line">            print &apos;==================%s==================&apos; % name</span><br><span class="line">            print &apos;Title: %s&apos; % value.get(&apos;title&apos;)</span><br><span class="line">            print &apos;Keyword: %s&apos; % value.get(&apos;keyword&apos;)</span><br><span class="line">            print &apos;Description: %s&apos; % value.get(&apos;description&apos;)</span><br><span class="line">            value[&apos;name&apos;] = name</span><br><span class="line">            excel_datas.append(value)</span><br><span class="line"></span><br><span class="line">        self.to_generate_kw(excel_datas)</span><br><span class="line"></span><br><span class="line">        if to_excel:</span><br><span class="line">            print &apos;---------excel ok&apos;</span><br><span class="line">            self.to_excel(excel_datas, &apos;companys.xls&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    companyGrap().run(to_excel=False)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note primary&quot;&gt;
            &lt;p&gt;工作上涉及公司网站SEO优化相关的工作，但是在&lt;font color=&quot;red&quot; size=&quot;6.5&quot;&gt;Title、Keywords、Description&lt;/font&gt;这块有点不清楚。于是，参考了一些与自己公司业务上有相同的公司网站内容，在进行词语分析选取一些关键词，在结合本公司的业务内容关键词进行综合，完成了网站SEO优化的&lt;font color=&quot;red&quot; size=&quot;6.5&quot;&gt;Keywords&lt;/font&gt;。&lt;/p&gt;
          &lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/article_kwpachong.jpg&quot; style=&quot;border:1.5px solid blue&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="https://gis90.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="https://gis90.github.io/tags/Python/"/>
    
      <category term="Python程序篇" scheme="https://gis90.github.io/tags/Python%E7%A8%8B%E5%BA%8F%E7%AF%87/"/>
    
      <category term="爬虫" scheme="https://gis90.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>新MacOS导致微信截图问题</title>
    <link href="https://gis90.github.io/articles/17077/"/>
    <id>https://gis90.github.io/articles/17077/</id>
    <published>2019-10-28T02:05:29.000Z</published>
    <updated>2019-10-28T02:05:29.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note primary">            <h4 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h4><p>Mac更新了新版的OS之后，发现微信截图除了能获取到微信界面信息，其他的信息都获取不到了。微信设置了截图的快捷键，平时也用习惯了，不能快捷键去操作常用的操作，岂不<font color="red" size="6.5">蓝瘦、香菇</font>。</p>          </div><a id="more"></a><hr><p>问题出现的很简单，更新系统前可以使用，更新系统后不能使用了，说明还是系统的问题。直接针对于系统进行排查即可，而且MacOS基于unix开发的，所以跟权限差不多相关。</p><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><blockquote><p>系统偏好设置 -&gt; 安全与隐私</p></blockquote><p><img src="shezhi.png" alt></p><blockquote><p>隐私 -&gt; 找到屏幕录制 -&gt; 勾选微信</p></blockquote><p><img src="anquanyuyinsi.png" alt></p><h4 id="温馨提示"><a href="#温馨提示" class="headerlink" title="温馨提示"></a>温馨提示</h4><font color="red" size="6.5">解决问题要有思路，而且要善于思考。</font>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note primary&quot;&gt;
            &lt;h4 id=&quot;问题背景&quot;&gt;&lt;a href=&quot;#问题背景&quot; class=&quot;headerlink&quot; title=&quot;问题背景&quot;&gt;&lt;/a&gt;问题背景&lt;/h4&gt;&lt;p&gt;Mac更新了新版的OS之后，发现微信截图除了能获取到微信界面信息，其他的信息都获取不到了。微信设置了截图的快捷键，平时也用习惯了，不能快捷键去操作常用的操作，岂不&lt;font color=&quot;red&quot; size=&quot;6.5&quot;&gt;蓝瘦、香菇&lt;/font&gt;。&lt;/p&gt;
          &lt;/div&gt;
    
    </summary>
    
      <category term="生活" scheme="https://gis90.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="不明类别" scheme="https://gis90.github.io/categories/%E4%B8%8D%E6%98%8E%E7%B1%BB%E5%88%AB/"/>
    
    
      <category term="Mac" scheme="https://gis90.github.io/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>爬虫之糗百笑话</title>
    <link href="https://gis90.github.io/articles/32384/"/>
    <id>https://gis90.github.io/articles/32384/</id>
    <published>2019-10-03T11:01:59.000Z</published>
    <updated>2019-10-03T11:01:59.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note primary">            <p>之前已经介绍过了<font color="red" size="6.5">爬虫</font>的利器：Requests、BeautifulSoup。在陆续跟上几个实战来进行演示，本篇主要是爬糗百网站的文本笑话以及笑话图片，纯属于技术宅的磨牙的事情。</p>          </div><p><img src="/images/article_qiubaipachong.gif" style="border:1.5px solid blue"></p><a id="more"></a><hr><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>实现糗百网站的文本笑话以及笑话图片数据获取，并存储到本地。</p><h3 id="技术流程"><a href="#技术流程" class="headerlink" title="技术流程"></a>技术流程</h3><h3 id="具体方案"><a href="#具体方案" class="headerlink" title="具体方案"></a>具体方案</h3><h3 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h3><p>本人不是专业做爬虫数据方向的，业余爱好。</p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note primary&quot;&gt;
            &lt;p&gt;之前已经介绍过了&lt;font color=&quot;red&quot; size=&quot;6.5&quot;&gt;爬虫&lt;/font&gt;的利器：Requests、BeautifulSoup。在陆续跟上几个实战来进行演示，本篇主要是爬糗百网站的文本笑话以及笑话图片，纯属于技术宅的磨牙的事情。&lt;/p&gt;
          &lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/article_qiubaipachong.gif&quot; style=&quot;border:1.5px solid blue&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="https://gis90.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="https://gis90.github.io/tags/Python/"/>
    
      <category term="爬虫" scheme="https://gis90.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>新、旧民主主义革命的异同&lt;font color=&quot;red&quot; size=&quot;4.5&quot;&gt;【历史】&lt;/font&gt;</title>
    <link href="https://gis90.github.io/articles/43171/"/>
    <id>https://gis90.github.io/articles/43171/</id>
    <published>2019-09-16T11:24:01.000Z</published>
    <updated>2019-09-16T11:24:01.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>论述新、旧民主主义革命的异同</p></blockquote><a id="more"></a><hr><blockquote><p>不同点</p></blockquote><table border="1" cellspacing="0" width="50%" height="150">    <tr>        <th style="text-align:center;">类型</th>        <th style="text-align:center;">社会背景</th>        <th style="text-align:center;">革命对象</th>    </tr>    <tr>        <td style="text-align:center;">新民主主义革命</td>        <td rowspan="2" style="text-align:center;">半殖民地半封建社会</td>        <td rowspan="2" style="text-align:center;">反帝反封建</td>    </tr>    <tr>        <td style="text-align:center;">旧民主主义革命</td>    </tr></table><blockquote><p>相同点</p></blockquote><table border="1" cellspacing="0" width="50%" height="150">    <tr>        <th style="text-align:center;">类型</th>        <th style="text-align:center;">领导阶级</th>        <th style="text-align:center;">指导思想</th>        <th style="text-align:center;">革命前景</th>        <th style="text-align:center;">革命性质</th>    </tr>    <tr>        <td style="text-align:center;">新民主主义革命</td>        <td style="text-align:center;">无产阶级</td>        <td style="text-align:center;">马克思列宁主义</td>        <td style="text-align:center;">建立人民民主专政的国家，走社会主义路线</td>        <td style="text-align:center;">无产阶级革命</td>    </tr>    <tr>        <td style="text-align:center;">旧民主主义革命</td>        <td style="text-align:center;">资产阶级</td>        <td style="text-align:center;">三民主义（民权、民主、民生）</td>        <td style="text-align:center;">建立资产阶级共和国，走资本主义路线</td>        <td style="text-align:center;">资产阶级革命</td>    </tr></table>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;论述新、旧民主主义革命的异同&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="公务员" scheme="https://gis90.github.io/categories/%E5%85%AC%E5%8A%A1%E5%91%98/"/>
    
    
      <category term="历史" scheme="https://gis90.github.io/tags/%E5%8E%86%E5%8F%B2/"/>
    
  </entry>
  
  <entry>
    <title>中秋节</title>
    <link href="https://gis90.github.io/articles/65231/"/>
    <id>https://gis90.github.io/articles/65231/</id>
    <published>2019-09-13T10:49:27.000Z</published>
    <updated>2019-09-13T10:49:27.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><font size="4" color="blue">2019-09-13</font><br><font size="5" color="red"><strong>中国节-中秋节</strong></font></blockquote><a id="more"></a><hr><p><img src="zhongqiujie.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;font size=&quot;4&quot; color=&quot;blue&quot;&gt;2019-09-13&lt;/font&gt;&lt;br&gt;&lt;font size=&quot;5&quot; color=&quot;red&quot;&gt;&lt;strong&gt;中国节-中秋节&lt;/strong&gt;&lt;/font&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="节日" scheme="https://gis90.github.io/categories/%E8%8A%82%E6%97%A5/"/>
    
    
      <category term="节日" scheme="https://gis90.github.io/tags/%E8%8A%82%E6%97%A5/"/>
    
      <category term="中国节" scheme="https://gis90.github.io/tags/%E4%B8%AD%E5%9B%BD%E8%8A%82/"/>
    
  </entry>
  
  <entry>
    <title>SSH之快捷配置</title>
    <link href="https://gis90.github.io/articles/24280/"/>
    <id>https://gis90.github.io/articles/24280/</id>
    <published>2019-08-29T11:04:09.000Z</published>
    <updated>2019-08-29T11:04:09.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note warning">            <h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>上篇文章介绍了有关<font color="red" size="4.5">SSH协议</font>的基础知识，正常工作中都是通过下列命令进行ssh连接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh 用户名@服务器IP</span><br></pre></td></tr></table></figure><p>工作中，需要ssh连接到服务器，然后每次需要输入服务的IP或者机器名，而且连接到一台服务器后，还可能跳转到另外一台服务器，每次还需要输入密码，个人感觉比较麻烦。通过配置ssh_config的方式简化连接命令，在ssh远程连接上更加高效。</p>          </div><a id="more"></a><hr><h3 id="结果对比"><a href="#结果对比" class="headerlink" title="结果对比"></a>结果对比</h3><blockquote><p>配置前</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh 用户名@服务器IP</span><br></pre></td></tr></table></figure><p>每次都需要输入密码</p><blockquote><p>配置后</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh 别名</span><br></pre></td></tr></table></figure><p>每日只需输入一次密码</p><h3 id="配置详解"><a href="#配置详解" class="headerlink" title="配置详解"></a>配置详解</h3><p>1 进入到<strong><em>~/.ssh</em></strong>目录，查看是否有<strong><em>config</em></strong>文件，如果没有这个文件，需要通过<strong><em>touch config</em></strong>手动进行建立。</p><p><img src="ssh_config.png" alt></p><p>2 配置文件内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Host XXXX</span><br><span class="line">HostName IP</span><br><span class="line">User mingliang.gao</span><br><span class="line">ControlMaster auto</span><br><span class="line">ControlPath ~/.ssh/master-%r@%h:@%p</span><br><span class="line">ControlPersist yes</span><br><span class="line">PasswordAuthentication no</span><br><span class="line">IdentityFile ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure></p><ul><li>Host：ssh进行连接的别名</li><li>HostName：服务器的IP或者机器名</li><li>User：用户名</li><li>ControlMaster：是否多个会话连接用一个session文件</li><li>ControlPath：session会话文件</li><li>ControlPersist：连接是否保持长连接</li><li>PasswordAuthentication：是否需要密码认证</li><li>IdentityFile：私钥文件</li></ul><p>如果需要了解更多的参数，请<font color="red" size="5"><strong><em>man ssh_config</em></strong></font>进行查看。</p><h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p>配置完之后，每次只需要<strong><em>ssh 别名</em></strong>就可以连接到指定配置的服务器，而且在会话session结束之前只需要第一次密码即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note warning&quot;&gt;
            &lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;上篇文章介绍了有关&lt;font color=&quot;red&quot; size=&quot;4.5&quot;&gt;SSH协议&lt;/font&gt;的基础知识，正常工作中都是通过下列命令进行ssh连接：&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssh 用户名@服务器IP&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;工作中，需要ssh连接到服务器，然后每次需要输入服务的IP或者机器名，而且连接到一台服务器后，还可能跳转到另外一台服务器，每次还需要输入密码，个人感觉比较麻烦。通过配置ssh_config的方式简化连接命令，在ssh远程连接上更加高效。&lt;/p&gt;
          &lt;/div&gt;
    
    </summary>
    
      <category term="服务器" scheme="https://gis90.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="协议类" scheme="https://gis90.github.io/categories/%E5%8D%8F%E8%AE%AE%E7%B1%BB/"/>
    
    
      <category term="SSH" scheme="https://gis90.github.io/tags/SSH/"/>
    
      <category term="协议类" scheme="https://gis90.github.io/tags/%E5%8D%8F%E8%AE%AE%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title>三大作风三大法宝三大灵魂&lt;font color=&quot;red&quot; size=&quot;4.5&quot;&gt;【历史】&lt;/font&gt;</title>
    <link href="https://gis90.github.io/articles/17252/"/>
    <id>https://gis90.github.io/articles/17252/</id>
    <published>2019-08-24T13:09:54.000Z</published>
    <updated>2019-08-24T13:09:54.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>三大作风<br>三大法宝<br>三大灵魂</p></blockquote><a id="more"></a><hr><h3 id="三大作风"><a href="#三大作风" class="headerlink" title="三大作风"></a>三大作风</h3><p>中国共产党的三大作风</p><ul><li>理论和实际相结合</li><li>密切联系群众</li><li>批评与自我批评</li></ul><p>出自《论联合政府》</p><h3 id="三大法宝"><a href="#三大法宝" class="headerlink" title="三大法宝"></a>三大法宝</h3><p>中国革命的三大法宝</p><ul><li>武装斗争</li><li>统一战线</li><li>党的建设</li></ul><p>出自《&lt;共产党人&gt;发刊词》</p><h3 id="三大灵魂"><a href="#三大灵魂" class="headerlink" title="三大灵魂"></a>三大灵魂</h3><p>毛泽东思想的三大灵魂</p><ul><li>实事求是</li><li>群众路线</li><li>独立自主</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;三大作风&lt;br&gt;三大法宝&lt;br&gt;三大灵魂&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="公务员" scheme="https://gis90.github.io/categories/%E5%85%AC%E5%8A%A1%E5%91%98/"/>
    
    
      <category term="历史" scheme="https://gis90.github.io/tags/%E5%8E%86%E5%8F%B2/"/>
    
  </entry>
  
  <entry>
    <title>SSH协议的基础知识</title>
    <link href="https://gis90.github.io/articles/62041/"/>
    <id>https://gis90.github.io/articles/62041/</id>
    <published>2019-08-19T02:07:42.000Z</published>
    <updated>2019-08-19T02:07:42.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note warning">            <h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>因为一些原因，把github.io重新在github搭建一下，但是<strong>hexo deploy</strong>去提交代码的时候，发生代码提交失败的情况。原来在GIS90.github.io Repository上没有进行<strong><em>Deploy keys</em></strong>的配置，导致push失败。</p><p>配置好<strong><em>Deploy keys</em></strong>的配置，代码成功提交，但是为何配置完key就可以成功提交呢？原理是<font color="red" size="4.5">SSH协议</font>。</p>          </div><a id="more"></a><hr><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p><strong><em>The SSH protocol uses encryption to secure the connection between a client and a server. All user authentication, commands, output, and file transfers are encrypted to protect against attacks in the network. For details of how the SSH protocol works, see the protocol page. To understand the SSH File Transfer Protocol, see the SFTP page.</em></strong></p><p><strong><em>The SSH protocol (also referred to as Secure Shell) is a method for secure remote login from one computer to another. It provides several alternative options for strong authentication, and it protects the communications security and integrity with strong encryption. It is a secure alternative to the non-protected login protocols (such as telnet, rlogin) and insecure file transfer methods (such as FTP).</em></strong></p><p>直接摘录了官网的原话，不多说了直接捞干的，大概意思就是说<font color="red" size="4.5">SSH协议是一种连接服务器的一种简单、安全、可靠的连接方法。</font></p><h3 id="验证方式"><a href="#验证方式" class="headerlink" title="验证方式"></a>验证方式</h3><p>目前，后端开发、运维等工作中经常需要登录远程服务并操作，常用的连接方式都是ssh，方式如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh 用户名@IP</span><br><span class="line">ssh 用户名@机器名</span><br></pre></td></tr></table></figure></p><p>使用ssh登录的时候，验证方式主要有2种：</p><blockquote><p>密码验证</p></blockquote><p>使用用户名和密码进行登录，两者匹配才可以登录，但是密码认证有以下的缺点：</p><ul><li>密码泄漏。一个帐户多个人进行使用，需要让所有使用人都知道密码，很容易密码泄露。</li><li>另外，多账户使用修改密码时必须通知所有人，否则就会造成其他人登录失败。</li></ul><blockquote><p>公钥验证</p></blockquote><p>使用公钥、私钥的方式就行验证。保证了多个用户可以通过各自的密钥登录到服务器，互不干扰，而且认证也可以允许使用空密码，省去每次登录都需要输入密码的麻烦。</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>通过<font color="red" size="4.5">ssh-keygen</font>命令进行生成公钥私钥，下面详细说明。</p><p>1、执行<strong><em>ssh-keygen -t rsa</em></strong>命令。<br>通过<strong><em>ssh-keygen –help</em></strong>可知，-t是加密的参数，最常用。除了rsa，还有dsa、ecdsa、ed25519，其中rsa是安全的加密方式。</p><p>2、输入要生成的文件名，默认回车即可。</p><p>3、输入密码，默认回车即可。</p><p>4、输入确认密码，，默认回车即可。</p><p>5、出现下列图案代表成功。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">+--[ RSA 2048]----+</span><br><span class="line">|    .+=*..       |</span><br><span class="line">|  .  += +        |</span><br><span class="line">|   o oo+         |</span><br><span class="line">|  E . . o        |</span><br><span class="line">|      ..S.       |</span><br><span class="line">|      .o .       |</span><br><span class="line">|       .o +      |</span><br><span class="line">|       ...oo     |</span><br><span class="line">|         +.      |</span><br><span class="line">+-----------------+</span><br></pre></td></tr></table></figure></p><p>具体的ssh-keygen参数可以通过<strong><em>ssh-keygen –help</em></strong>进行查看，这里不作详解。</p><h3 id="原理讲解"><a href="#原理讲解" class="headerlink" title="原理讲解"></a>原理讲解</h3><ol><li><h4 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h4><p> 这里主要针对于公钥私钥的验证方式进行讲解，通过执行ssh-kengen命令可以得到<strong>公钥、私钥</strong>，都是经过加密后的文件。<br> 公钥：能被其他人知道的加密文件，id_rsa.pub。<br> 私钥：只能自己知道的加密文件，id_rsa。</p><p> 只要私钥不被泄漏，就不会出现任何指定用户登录的问题。</p><p> <img src="ssh_keys.png" alt></p></li><li><h4 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h4><p> <img src="ssh_yuanli.png" alt></p></li><li><h4 id="验证流程"><a href="#验证流程" class="headerlink" title="验证流程"></a>验证流程</h4><p> 1、Client通过<strong><em>ssh-keygen</em></strong>命令生成公钥和私钥。</p><p> 2、Client将自己的公钥<strong><em>id_rsa.pub</em></strong>存放到Server服务器上的认证文件。</p><p> 3、Client通过<strong><em>ssh</em></strong>命令将用户、IP发送请求连接指定的服务器。</p><p> 4、Server收到到请求之后，先去authorized_keys中进行查找是否有指定的用户，如果有将进行下一步，无此用户拒绝验证连接。</p><p> 5、验证文件中包含指定用户，Server将生成一个随机字符串通过<strong>*公钥</strong>进行加密，发送给Client。</p><p> 6、Client接收到Server加密的字符串，利用<strong><em>私钥</em></strong>进行解密，解密后在将这个随机字符串再发送给Server。</p><p> 7、Server接收到Client发送的解密字符串与生成的原始随机字符串进行比对，如果正确就让客户端登录，否则拒绝。</p></li></ol><h3 id="学习参考"><a href="#学习参考" class="headerlink" title="学习参考"></a>学习参考</h3><p>SSH官网：<a href="https://www.ssh.com/ssh/" target="_blank" rel="noopener">https://www.ssh.com/ssh/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note warning&quot;&gt;
            &lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;因为一些原因，把github.io重新在github搭建一下，但是&lt;strong&gt;hexo deploy&lt;/strong&gt;去提交代码的时候，发生代码提交失败的情况。原来在GIS90.github.io Repository上没有进行&lt;strong&gt;&lt;em&gt;Deploy keys&lt;/em&gt;&lt;/strong&gt;的配置，导致push失败。&lt;/p&gt;&lt;p&gt;配置好&lt;strong&gt;&lt;em&gt;Deploy keys&lt;/em&gt;&lt;/strong&gt;的配置，代码成功提交，但是为何配置完key就可以成功提交呢？原理是&lt;font color=&quot;red&quot; size=&quot;4.5&quot;&gt;SSH协议&lt;/font&gt;。&lt;/p&gt;
          &lt;/div&gt;
    
    </summary>
    
      <category term="服务器" scheme="https://gis90.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="协议类" scheme="https://gis90.github.io/categories/%E5%8D%8F%E8%AE%AE%E7%B1%BB/"/>
    
    
      <category term="SSH" scheme="https://gis90.github.io/tags/SSH/"/>
    
      <category term="协议类" scheme="https://gis90.github.io/tags/%E5%8D%8F%E8%AE%AE%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title>Qunar项目之总结篇</title>
    <link href="https://gis90.github.io/articles/30296/"/>
    <id>https://gis90.github.io/articles/30296/</id>
    <published>2019-08-10T12:10:44.000Z</published>
    <updated>2019-08-10T12:10:44.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note primary">            <p>Qunar负责的项目汇总。</p><font color="#1E90FF" size="6" face="黑体"><strong><em> 感谢Qunar让我成长 ！！！</em></strong></font>          </div><a id="more"></a><hr><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>统计一下负责项目的说明。</p><h3 id="统计"><a href="#统计" class="headerlink" title="统计"></a>统计</h3><table><thead><tr><th style="text-align:center">ID</th><th style="text-align:center">项目名称</th><th style="text-align:center">中文名称</th><th style="text-align:center">重要程度</th><th style="text-align:left">技术架构</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">backyard</td><td style="text-align:center">骆驼帮</td><td style="text-align:center">★★★</td><td style="text-align:left">前后端分离项目【Python + React】</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">isapi</td><td style="text-align:center">员工信息API</td><td style="text-align:center">★★★</td><td style="text-align:left">rest api，Python编写</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">new_hrtools</td><td style="text-align:center">AD账号管理系统</td><td style="text-align:center">★★</td><td style="text-align:left">任务脚本较多，Python编写</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">officedb</td><td style="text-align:center">办公大厦管理系统</td><td style="text-align:center">★</td><td style="text-align:left">后台【Flask】+ 模板</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">opsapp</td><td style="text-align:center">Qtalk Apis</td><td style="text-align:center">★★</td><td style="text-align:left">rest api</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">outage</td><td style="text-align:center">故障系统</td><td style="text-align:center">★★★</td><td style="text-align:left">后台【Flask】+ 前端【angularjs】</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">psapproval</td><td style="text-align:center">qtalk审批申请</td><td style="text-align:center">★★</td><td style="text-align:left">rest api，Python编写</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">wwwhr</td><td style="text-align:center">员工信息采集系统</td><td style="text-align:center">★★</td><td style="text-align:left">后台【Flask】+ 模板</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center">newoa_api</td><td style="text-align:center">newoa审批Api</td><td style="text-align:center">★★</td><td style="text-align:left">rest api，Python编写</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center">opsbi</td><td style="text-align:center">Ops故障可视化bi系统</td><td style="text-align:center">★</td><td style="text-align:left">后台【Flask】+ 前端【angularjs】</td></tr><tr><td style="text-align:center">11</td><td style="text-align:center">smsdb</td><td style="text-align:center">短信狗</td><td style="text-align:center">★★</td><td style="text-align:left">软件 + 硬件</td></tr><tr><td style="text-align:center">12</td><td style="text-align:center">opstools-cron</td><td style="text-align:center">定时任务</td><td style="text-align:center">★★</td><td style="text-align:left">Node</td></tr></tbody></table><h3 id="项目说明"><a href="#项目说明" class="headerlink" title="项目说明"></a>项目说明</h3><ol><li><h4 id="Isapi"><a href="#Isapi" class="headerlink" title="Isapi"></a>Isapi</h4><blockquote><font size="4.5" color="red">简述</font></blockquote><p> Isapi是一个提供qunar员工信息数据的api项目，主要针对的用户群体是内部员工。数据来源于ehr系统（peoplesoft，简称：ps），ps使用的是Oracle数据库，基于ps提供的view试图，把员工数据同步到一个新的数据库，Isapi选择使用了postgresql，把员工信息数据封装json，通过http api接口的方式开放给用户，不仅解决了其他系统使用员工信息数据的问题，还有让ps数据隔离，提高了安全性、可用性。</p> <!-- > <font size=4.5 color='red'>详情</font> <a href="/articles/7285/" target="_blank" class="block_project_a">Qunar项目之Isapi-员工信息apis</a> --></li><li><h4 id="backyard"><a href="#backyard" class="headerlink" title="backyard"></a>backyard</h4><blockquote><font size="4.5" color="red">简述</font></blockquote><p> 用于Qunar员工内部使用的一个web内网系统，主要用于员工信息查询、考勤、公司相关的制度、条例等信息，是一个员工访问量相对较大的一个web系统。</p> <!-- > <font size=4.5 color='red'>详情</font> <a href="/articles/39002/" target="_blank" class="block_project_a">Qunar项目之Backyard-骆驼帮</a> --></li><li><h4 id="new-hrtools"><a href="#new-hrtools" class="headerlink" title="new_hrtools"></a>new_hrtools</h4><blockquote><font size="4.5" color="red">简述</font></blockquote><p> 项目主要用于员工ad账号相关的处理，主要有API接口和定时任务2大部分组成，其中定时任务是重点，与ldap、数据库均有交互，是一样日常运维工作较多的一个项目。</p> <!-- > <font size=4.5 color='red'>详情</font> <a href="/articles/61124/" target="_blank" class="block_project_a">Qunar项目之New-hrtools【AD账号管理系统】</a> --></li><li><h4 id="officedb"><a href="#officedb" class="headerlink" title="officedb"></a>officedb</h4><blockquote><font size="4.5" color="red">简述</font></blockquote><p> Officedb系统是Qunar行政管理员工办公大厦的一个内部系统，主要针对于Qunar行政、QunarIT对办公大厦进行费用、员工信息等管理，实现Qunar办公大厦的自动化。</p> <!-- > <font size=4.5 color='red'>详情</font> <a href="/articles/47129/" target="_blank" class="block_project_a">Qunar项目之Officedb-办公大厦管理系统</a> --></li><li><h4 id="opsapp"><a href="#opsapp" class="headerlink" title="opsapp"></a>opsapp</h4><blockquote><font size="4.5" color="red">简述</font></blockquote><p> opsapp跟Isapi实现的功能大致一样，这个项目是专门用来提供给qtalk移动端在外网情况下进行使用的一个api接口，这个接口实现了访问内网需要的api接口，实现了在非内网情况使用qtalk功能。</p> <!-- > <font size=4.5 color='red'>详情</font> <a href="/articles/9363/" target="_blank" class="block_project_a">Qunar项目之Opsapp-QtalkApis</a> --></li><li><h4 id="outage"><a href="#outage" class="headerlink" title="outage"></a>outage</h4><blockquote><font size="4.5" color="red">简述</font></blockquote><p> 主要用于用户进行报故障所用，主要有故障通报、故障review、故障产品线、对外API4大部分。</p> <!-- > <font size=4.5 color='red'>详情</font> <a href="/articles/26073/" target="_blank" class="block_project_a">Qunar项目之Outage-故障系统</a> --></li><li><h4 id="psapproval"><a href="#psapproval" class="headerlink" title="psapproval"></a>psapproval</h4><blockquote><font size="4.5" color="red">简述</font></blockquote><p> 主要用于ehr系统部分流程审批、申请在qtalk移动端进行操作。ehr系统主要用于管理员工、员工使用的一个人事系统，只能通过pc端进行操作，为了能在qtalk移动端也同样进行操作，psapproval接入ehr的员工使用流程。</p> <!-- > <font size=4.5 color='red'>详情</font> <a href="/articles/204/" target="_blank" class="block_project_a">Qunar项目之Psapproval-Qtalk审批申请</a> --></li><li><h4 id="wwwhr"><a href="#wwwhr" class="headerlink" title="wwwhr"></a>wwwhr</h4><blockquote><font size="4.5" color="red">简述</font></blockquote><p> 用于采集入职Qunar员工基本个人信息的一个外部系统，信息主要用于ehr系统使用，是一个正常入职Qunar员工必须走的一步。</p> <!-- > <font size=4.5 color='red'>详情</font> <a href="/articles/3146/" target="_blank" class="block_project_a">Qunar项目之Wwwhr-信息采集系统</a> --></li><li><h4 id="newoa-api"><a href="#newoa-api" class="headerlink" title="newoa_api"></a>newoa_api</h4><blockquote><font size="4.5" color="red">简述</font></blockquote><p> newoa_api是专门针对于PC端Newoa表单在移动端详情展示，主要用于数据格式化。</p> <!-- > <font size=4.5 color='red'>详情</font> <a href="/articles/34271/" target="_blank" class="block_project_a">Qunar项目之Newoa-api【Newoa审批Api】</a> --></li><li><h4 id="opsbi"><a href="#opsbi" class="headerlink" title="opsbi"></a>opsbi</h4><blockquote><font size="4.5" color="red">简述</font></blockquote><p>Opsbi是针对于Ops组造成故障的数据做的一个可视化web系统，数据源来源于Outage故障系统，是一个前端【angularjs + echart】+ 后台【python】一体的项目。</p><!-- > <font size=4.5 color='red'>详情</font><a href="/articles/63144/" target="_blank" class="block_project_a">Qunar项目之Opsbi-Ops故障可视化bi系统</a> --></li><li><h4 id="smsdb"><a href="#smsdb" class="headerlink" title="smsdb"></a>smsdb</h4><blockquote><font size="4.5" color="red">简述</font></blockquote><p>smsd是一个针对于机票事业部短信收发做的一个项目，实现了机票部门短信接收、发送、代收等功能。</p><!-- > <font size=4.5 color='red'>详情</font><a href="/articles/22299/" target="_blank" class="block_project_a">Qunar项目之Smsdb-短信狗</a> --></li><li><h4 id="opstools-cron"><a href="#opstools-cron" class="headerlink" title="opstools-cron"></a>opstools-cron</h4><blockquote><font size="4.5" color="red">简述</font></blockquote><p>Opstools-cron项目主要针对于其他项目有定时任务写的一个请求request crontab，由pm2进行管理。</p><!-- > <font size=4.5 color='red'>详情</font><a href="/articles/9777/" target="_blank" class="block_project_a">Qunar项目之Opstools-cron【定时任务】</a> --></li></ol><h3 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h3><ol><li><h4 id="提交代码"><a href="#提交代码" class="headerlink" title="提交代码"></a>提交代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1 git add .</span><br><span class="line"></span><br><span class="line">2 git commit -m &quot;XXXX&quot;</span><br><span class="line"></span><br><span class="line">3 git tag q-xxxxxxxx-xx</span><br><span class="line"></span><br><span class="line">4 git push origin master --tags</span><br></pre></td></tr></table></figure></li><li><h4 id="自动化发布"><a href="#自动化发布" class="headerlink" title="自动化发布"></a>自动化发布</h4><p> 1 打开自动化发布url。</p><p> 2 左侧查看通过tag触发构建的项目，等待构建完成。如果构建过程中出现问题，请联系相关负责人进行处理。</p><p> 3 点击Qunar Build，选择QA【beta环境】，先进行beta环境发布，参数详解如下：</p><ul><li><p>server_list_group：A</p></li><li><p>tag_name：q-xxxxxxxx-xx</p></li><li><p>server_list_group代表发布机器组，发哪个组写哪个组名即可，全部写ALL。</p></li><li><p>tag_name为构建的tag名称。</p></li></ul><p>4 QA发布完成环境之后。</p><p>5 在选择OPS【线上环境】进行发布，建议发布一台检查一台的方式去进行发现线上环境。</p></li></ol><h3 id="项目启动"><a href="#项目启动" class="headerlink" title="项目启动"></a>项目启动</h3><ol><li><h4 id="常规"><a href="#常规" class="headerlink" title="常规"></a>常规</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(sudo) python tools/install_venv.py</span><br><span class="line"></span><br><span class="line">(sudo)  tools/with_venv.sh python setup.py develop                  # develop 软链</span><br><span class="line"></span><br><span class="line">(sudo)  tools/with_venv.sh main --config-file 配置文件 -v</span><br></pre></td></tr></table></figure></li><li><h4 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(sudo) virtualenv .venv</span><br><span class="line"></span><br><span class="line">(sudo) source .venv/bin/activate</span><br><span class="line"></span><br><span class="line">(sudo) sudo pip install -r requirements.txt -i 源地址 --trusted-host 源地址域名</span><br><span class="line"></span><br><span class="line">(sudo) tools/with_venv.sh python setup.py install                  # install 复制</span><br><span class="line"></span><br><span class="line">(sudo) tools/with_venv.sh main --config-file 配置文件 -v</span><br></pre></td></tr></table></figure></li></ol><h3 id="supervisorctl管理"><a href="#supervisorctl管理" class="headerlink" title="supervisorctl管理"></a>supervisorctl管理</h3><p>登录服务器上切换到sudo用户，执行supervisorctl：</p><p><img src="qunar_supervisorctl.png" alt></p><p>常用命令说明：</p><ul><li>status 查看项目运行状态</li><li>restart outage-www 重启outage-www 项目</li><li>start outage-www 启动outage-www 项目</li><li>stop outage-www 停止outage-www项目</li><li>start all 启动所有项目</li><li>stop all停止所有项目</li><li>tail -f outage-www 动态的查看outage-www项目日志</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note primary&quot;&gt;
            &lt;p&gt;Qunar负责的项目汇总。&lt;/p&gt;&lt;font color=&quot;#1E90FF&quot; size=&quot;6&quot; face=&quot;黑体&quot;&gt;&lt;strong&gt;&lt;em&gt; 感谢Qunar让我成长 ！！！&lt;/em&gt;&lt;/strong&gt;&lt;/font&gt;
          &lt;/div&gt;
    
    </summary>
    
      <category term="Qunar项目" scheme="https://gis90.github.io/categories/Qunar%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="Python" scheme="https://gis90.github.io/tags/Python/"/>
    
      <category term="项目" scheme="https://gis90.github.io/tags/%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>北京西单抓娃娃心得篇</title>
    <link href="https://gis90.github.io/articles/8059/"/>
    <id>https://gis90.github.io/articles/8059/</id>
    <published>2019-08-05T02:48:37.000Z</published>
    <updated>2019-08-05T02:48:37.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_zhuawawa_main.jpg" alt></p><blockquote class="blockquote-center"><font color="red" size="5.0">本篇文章讲述作者本人总结的抓娃娃技巧</font><br><font color="blue" size="4.0">不光只会敲代码的工程师</font></blockquote><a id="more"></a><hr><p>相信生活中大部分人都看过抓娃娃机，甚至不少人也尝试过，但结果一般都是差强人意。本人在北京上班，经常去西单的一个游戏风云娱乐去抓娃娃，也总结了一些经验，写出来与大家进行<strong><em>Share</em></strong>。</p><h3 id="地点"><a href="#地点" class="headerlink" title="地点"></a>地点</h3><p>北京西单新一代商城7层<br>无直梯，需要一层层电梯上去</p><h3 id="时间"><a href="#时间" class="headerlink" title="时间"></a>时间</h3><p>周一 ～ 周日<br>10:00 ～ 22:00</p><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>这家娱乐地，我并不是为了给这家打广告，而且单纯的觉得这家真的好玩，里面抓娃娃机有不同种的，娃娃更是大小不一样，五花八门，还有跳舞机、篮球机等等，最重要的还有拳皇97、98，相信很多人都有着美好的回忆，而且还经常能遇到<strong><em>cosplay</em></strong>。</p><h3 id="价格"><a href="#价格" class="headerlink" title="价格"></a>价格</h3><p>通过扫码进行网购，反正就是买的多赠送的也多。</p><p><img src="jiage.png" alt></p><h3 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h3><p>我的抓娃娃技巧都是基于这家练出来的，总结一下：</p><ul><li><p>先观察爪子的松紧程度，看别人再决定是否进行抓取，紧的通常抓出来的概率大一些。</p></li><li><p>娃娃的摆放位置，最好选那些靠近出口的，周围又没有阻挡的娃娃，近边的娃娃通常会比远边的娃娃更容易出来。</p></li><li><p>等娃娃机秒数结束，让爪子自然下落，爪子抓到娃娃以后按住，按住会比按一下抓得更紧一些，出来的概率大。</p></li><li><p>抓娃娃的爪子有的时候可以靠摇晃的惯性把娃娃甩出来，有时间需要平稳的爪子取抓取，这种属于难一些的操作，看情况而定，如果不知道怎么选择，建议选择平稳的爪子去抓取娃娃。</p></li><li><p>根据娃娃的形状进行抓取，尽量让爪子抓到娃娃的<font color="red" size="4.0">重心</font>、<font color="red" size="5">重心</font>、<font color="red" size="6.0">重心</font>，看好了。【头大抓身】</p></li><li><p>还可以根据娃娃的材质柔软程度进行抓取，软的相对于硬材质的娃娃好抓，不止轻，抓到了还变形，出来的概率大。</p></li><li><p>还有一种情况，就是尽量选择满的娃娃机，有可能让娃娃抓起在滚落下来，也不失为一种方法。</p></li></ul><h3 id="特别说明"><a href="#特别说明" class="headerlink" title="特别说明"></a>特别说明</h3><p>下面说的这几条都是非常重要的，也是针对于西单这家，掌握了你将会抓的更多：<br><div class="note danger">            <ul><li><font color="blue" size="4.2">娃娃机挡板有2个方向，多抓挡板右侧的，不要抓上侧的，右侧出来的概率远远大于上侧的。</font></li><li><font color="blue" size="4.2">如果特别喜欢哪个，可以让服务人员帮忙摆一下，摆完之后抓取的概率也大大提高。</font></li></ul>          </div></p><h3 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h3><video src="/publicfiles/zhuawawa.mp4" preload="metadata" controls playsinline poster>Sorry, your browser does not support the video tag.</video>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_zhuawawa_main.jpg&quot; alt&gt;&lt;/p&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;font color=&quot;red&quot; size=&quot;5.0&quot;&gt;本篇文章讲述作者本人总结的抓娃娃技巧&lt;/font&gt;&lt;br&gt;&lt;font color=&quot;blue&quot; size=&quot;4.0&quot;&gt;不光只会敲代码的工程师&lt;/font&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="生活" scheme="https://gis90.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="生活" scheme="https://gis90.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="抓娃娃" scheme="https://gis90.github.io/tags/%E6%8A%93%E5%A8%83%E5%A8%83/"/>
    
  </entry>
  
  <entry>
    <title>浪漫二人行之天津二日游</title>
    <link href="https://gis90.github.io/articles/28340/"/>
    <id>https://gis90.github.io/articles/28340/</id>
    <published>2019-07-29T02:56:48.000Z</published>
    <updated>2019-07-29T02:56:48.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_tianjinzhiyan.jpg" alt></p><blockquote class="blockquote-center"><font color="red"><strong>天津之眼</strong></font></blockquote><a id="more"></a><hr><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><div class="note info">            <p>来了北京6年了，一直都没去天津嗨皮过，快离开北京了，觉得去天津转转。本来心里打算有2个嗨皮的地方：北京欢乐谷或者天津之旅，二者进行比较，已经去过上海的迪士尼乐园了，选择天津之旅，了却心里的一件憾事。<br>北京到天津的便利也不用多说，30分钟的城际快轨，超快。曾经的天津市是各国的租界，经历并见证了历史的变迁，重要的是天津还有很多小吃，这很吸引人啊。</p>          </div><h3 id="交通方式"><a href="#交通方式" class="headerlink" title="交通方式"></a>交通方式</h3><p>交通方式选择了城际快轨，仅30min就可以直达。至于天津市内游玩的话，我选择<strong>步行 + 滴滴</strong>混合式。</p><p><img src="checi.png" alt="车次"></p><h3 id="日程安排"><a href="#日程安排" class="headerlink" title="日程安排"></a>日程安排</h3><div class="tabs" id="tianjinzhilv_richeng"><ul class="nav-tabs"><li class="tab active"><a href="#tianjinzhilv_richeng-1">Day1</a></li><li class="tab"><a href="#tianjinzhilv_richeng-2">Day2</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tianjinzhilv_richeng-1"><blockquote><p>日期</p></blockquote><p>2019-08-02</p><blockquote><p>景点</p></blockquote><p>解放桥 + 世纪钟 → 意大利风情街(2小时) → 古文化街(2小时) → 天津之眼(1小时) → 津湾广场(2小时-建议夜景) + 海河</p><blockquote><p>建议</p></blockquote><ul><li>天津之眼建议提前去排队，比较火。</li><li>微信天津之眼摩天轮上购票，可以购提前3天的票。</li></ul></div><div class="tab-pane" id="tianjinzhilv_richeng-2"><blockquote><p>日期</p></blockquote><p>2019-08-03</p><blockquote><p>景点</p></blockquote><p>五大道(2小时) → 天主教天津教区西开主教座堂天主堂(0.5小时) → 瓷房子(0.5小时) → 劝业场商场(和平路店)(2小时) → 南市食品街(2小时)</p></div></div></div><h3 id="必游景点"><a href="#必游景点" class="headerlink" title="必游景点"></a>必游景点</h3><blockquote><p>五大道</p></blockquote><p>历史文化名街，天津明信片的背景图。</p><p><img src="wudadao.jpeg" alt></p><p>著名景点：</p><ul><li>疙瘩楼</li><li>天津市民园体育场</li><li>庆王府</li><li>五大道博物馆</li></ul><blockquote><p>天津之眼</p></blockquote><p>世界上唯一建在桥上的摩天轮 ，可看到方圆40公里以内的景致。</p><p><img src="tianjinzhiyan.jpeg" alt></p><blockquote><p>意大利风情街</p></blockquote><p>近代意大利在国外保留最为完整的历史街区。</p><p><img src="yidalifengqingjie.jpeg" alt></p><p>著名景点：</p><ul><li>马可波罗广场</li><li>梁启超旧居</li><li>新意街步行街</li><li>曹禺故居</li><li>意大利兵营旧址</li></ul><blockquote><p>古文化街</p></blockquote><p>中国味，天津味，文化味，古味。</p><p><img src="guwenhuajie.jpeg" alt></p><p>著名景点：</p><ul><li>泥人张</li><li>天津天后宫</li><li>桂发祥十八街麻花</li></ul><h3 id="美食推荐"><a href="#美食推荐" class="headerlink" title="美食推荐"></a>美食推荐</h3><p>天津是一个美食、小吃的聚集地，在游玩过程中享受。<br>主要推荐：</p><ul><li>意大利风情街</li><li>古文化街</li></ul><h3 id="酒店住宿"><a href="#酒店住宿" class="headerlink" title="酒店住宿"></a>酒店住宿</h3><table><thead><tr><th style="text-align:center">日期</th><th style="text-align:center">名称</th><th style="text-align:center">价格</th><th style="text-align:center">位置</th></tr></thead><tbody><tr><td style="text-align:center">2019-08-02</td><td style="text-align:center">天津津塔河畔公馆</td><td style="text-align:center">243</td><td style="text-align:center">天津和平区天津和平区张自忠路162号津塔公寓2单元</td></tr></tbody></table><p><img src="location.png" alt></p><h3 id="个人建议"><a href="#个人建议" class="headerlink" title="个人建议"></a>个人建议</h3><div class="note danger">            <ul><li>天津之眼摩天轮的<font color="red" size="4.5">票在网上进行购买</font>，成人70一张小孩35，搜索公众号：“天津之眼摩天轮”，在公众号上进行网购预约，可以提前购买3天的，建议选择晚上8点之后的观看时间，夜景很美。</li><li>建议酒店选择在天津站、津湾广场、意大利风情街附近，离海河很近，而且夜景很美，推荐。</li><li>天津吃得很多，暂时没有什么推荐必吃的，所以选择了边玩边吃，走一路吃一路。</li></ul>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_tianjinzhiyan.jpg&quot; alt&gt;&lt;/p&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;font color=&quot;red&quot;&gt;&lt;strong&gt;天津之眼&lt;/strong&gt;&lt;/font&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="旅行记" scheme="https://gis90.github.io/categories/%E6%97%85%E8%A1%8C%E8%AE%B0/"/>
    
    
      <category term="旅行记" scheme="https://gis90.github.io/tags/%E6%97%85%E8%A1%8C%E8%AE%B0/"/>
    
      <category term="美食" scheme="https://gis90.github.io/tags/%E7%BE%8E%E9%A3%9F/"/>
    
  </entry>
  
  <entry>
    <title>Linux学习之番外篇-多命令执行</title>
    <link href="https://gis90.github.io/articles/64874/"/>
    <id>https://gis90.github.io/articles/64874/</id>
    <published>2019-06-26T12:26:09.000Z</published>
    <updated>2019-06-26T12:26:09.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note danger">            <h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>解决多命令command1，command1，command1…。</p>          </div><a id="more"></a><hr><p>学习以下多命令一起执行：&amp;、&amp;&amp;、；、||。</p><h3 id="推荐指数"><a href="#推荐指数" class="headerlink" title="推荐指数"></a>推荐指数</h3><p>🌟🌟🌟🌟🌟</p><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><blockquote><p>;</p></blockquote><p>语法：command1 ; command2 [; command3] …<br>不管前面命令执行成功没有，后面的命令按顺序继续执行。</p><blockquote><p>&amp;</p></blockquote><p>语法：command1 &amp; command2 [&amp; command3] …<br>多命令同时执行，互不影响。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls &amp; ll &amp; ls</span><br></pre></td></tr></table></figure></p><blockquote><p>&amp;&amp;</p></blockquote><p>语法：command1 &amp;&amp; command2 [&amp;&amp; command3] …<br>命令之间使用 &amp;&amp; 连接，实现逻辑<font color="red" size="5">与</font>的功能，只有左边的命令执行成功，后面命令才继续执行。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch 1.txt &amp;&amp; rm ~/Desktop/1.txt &amp;&amp; echo &quot;rm success&quot;</span><br></pre></td></tr></table></figure></p><p>先touch一个1.txt文件，接下来在rm删除，最后输出success。</p><blockquote><p>||</p></blockquote><p>语法：command1 || command2 [|| command3] …<br>命令之间使用 || 连接，实现逻辑<font color="red" size="5">或</font>的功能，只有左边的命令执行失败，后面命令才继续执行。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">las || echo &quot;无命令&quot;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note danger&quot;&gt;
            &lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;解决多命令command1，command1，command1…。&lt;/p&gt;
          &lt;/div&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://gis90.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://gis90.github.io/tags/Linux/"/>
    
      <category term="Linux番外篇" scheme="https://gis90.github.io/tags/Linux%E7%95%AA%E5%A4%96%E7%AF%87/"/>
    
  </entry>
  
  <entry>
    <title>大学之证书那点事</title>
    <link href="https://gis90.github.io/articles/22143/"/>
    <id>https://gis90.github.io/articles/22143/</id>
    <published>2019-06-23T13:24:01.000Z</published>
    <updated>2019-06-23T13:24:01.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>回顾一下<br>大学4年得到的证书</p></blockquote><a id="more"></a><hr><h4 id="CET"><a href="#CET" class="headerlink" title="CET"></a>CET</h4><blockquote><p>CET-4准考证</p></blockquote><div class="tabs" id="cet4准考证"><ul class="nav-tabs"><li class="tab active"><a href="#cet4准考证-1">时间</a></li><li class="tab"><a href="#cet4准考证-2">图片</a></li></ul><div class="tab-content"><div class="tab-pane active" id="cet4准考证-1"><p><strong>2011-12</strong></p></div><div class="tab-pane" id="cet4准考证-2"><p><img src="cet4zhunkaozheng.jpeg" width alt></p></div></div></div><blockquote><p>CET-4准考证</p></blockquote><div class="tabs" id="cet4成绩"><ul class="nav-tabs"><li class="tab active"><a href="#cet4成绩-1">时间</a></li><li class="tab"><a href="#cet4成绩-2">图片</a></li></ul><div class="tab-content"><div class="tab-pane active" id="cet4成绩-1"><p><strong>2011-12</strong></p></div><div class="tab-pane" id="cet4成绩-2"><p><img src="cet4.jpeg" width alt></p></div></div></div><blockquote><p>CET-6准考证</p></blockquote><div class="tabs" id="cet6准考证"><ul class="nav-tabs"><li class="tab active"><a href="#cet6准考证-1">时间</a></li><li class="tab"><a href="#cet6准考证-2">图片</a></li></ul><div class="tab-content"><div class="tab-pane active" id="cet6准考证-1"><p><strong>2012-12</strong></p></div><div class="tab-pane" id="cet6准考证-2"><p><img src="cet6zhunkaozheng.jpeg" width alt></p></div></div></div><h4 id="NCRE"><a href="#NCRE" class="headerlink" title="NCRE"></a>NCRE</h4><blockquote><p>NCRE-3数据库</p></blockquote><div class="tabs" id="ncre-3数据库"><ul class="nav-tabs"><li class="tab active"><a href="#ncre-3数据库-1">时间</a></li><li class="tab"><a href="#ncre-3数据库-2">图片</a></li></ul><div class="tab-content"><div class="tab-pane active" id="ncre-3数据库-1"><p><strong>2011-09</strong></p></div><div class="tab-pane" id="ncre-3数据库-2"><p><img src="jisuanjizhunkaozheng.jpeg" width alt></p></div></div></div><h4 id="研究生"><a href="#研究生" class="headerlink" title="研究生"></a>研究生</h4><blockquote><p>准考证</p></blockquote><div class="tabs" id="研究生准考证"><ul class="nav-tabs"><li class="tab active"><a href="#研究生准考证-1">时间</a></li><li class="tab"><a href="#研究生准考证-2">图片</a></li></ul><div class="tab-content"><div class="tab-pane active" id="研究生准考证-1"><p><strong>2013-01</strong></p></div><div class="tab-pane" id="研究生准考证-2"><p><img src="yanjiushengzhunkaozheng.jpeg" width alt></p></div></div></div><blockquote><p>成绩</p></blockquote><div class="tabs" id="研究生成绩"><ul class="nav-tabs"><li class="tab active"><a href="#研究生成绩-1">时间</a></li><li class="tab"><a href="#研究生成绩-2">图片</a></li></ul><div class="tab-content"><div class="tab-pane active" id="研究生成绩-1"><p><strong>2013-01</strong></p></div><div class="tab-pane" id="研究生成绩-2"><p><img src="kaoyan.jpeg" width alt></p></div></div></div><h4 id="GIS"><a href="#GIS" class="headerlink" title="GIS"></a>GIS</h4><blockquote><p>GIS工程师</p></blockquote><div class="tabs" id="gis工程师"><ul class="nav-tabs"><li class="tab active"><a href="#gis工程师-1">时间</a></li><li class="tab"><a href="#gis工程师-2">图片</a></li></ul><div class="tab-content"><div class="tab-pane active" id="gis工程师-1"><p><strong>2012-11</strong></p></div><div class="tab-pane" id="gis工程师-2"><p><img src="gisgongchengshi.jpg" width alt></p></div></div></div><blockquote><p>作品</p></blockquote><div class="tabs" id="gis作品"><ul class="nav-tabs"><li class="tab active"><a href="#gis作品-1">时间</a></li><li class="tab"><a href="#gis作品-2">图片</a></li></ul><div class="tab-content"><div class="tab-pane active" id="gis作品-1"><p><strong>2010-12</strong></p></div><div class="tab-pane" id="gis作品-2"><p><img src="giszuopin.jpeg" width alt></p></div></div></div><h4 id="表彰"><a href="#表彰" class="headerlink" title="表彰"></a>表彰</h4><blockquote><p>校优实习生</p></blockquote><div class="tabs" id="校优实习生"><ul class="nav-tabs"><li class="tab active"><a href="#校优实习生-1">时间</a></li><li class="tab"><a href="#校优实习生-2">图片</a></li></ul><div class="tab-content"><div class="tab-pane active" id="校优实习生-1"><p><strong>2013-05</strong></p></div><div class="tab-pane" id="校优实习生-2"><p><img src="shixisheng.jpeg" width alt></p></div></div></div><blockquote><p>奖学金</p></blockquote><div class="tabs" id="奖学金"><ul class="nav-tabs"><li class="tab active"><a href="#奖学金-1">时间</a></li><li class="tab"><a href="#奖学金-2">图片</a></li></ul><div class="tab-content"><div class="tab-pane active" id="奖学金-1"><p><strong>2013-06</strong></p></div><div class="tab-pane" id="奖学金-2"><p><img src="jiangxuejin.jpeg" width alt></p></div></div></div><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><blockquote><p>普通话</p></blockquote> <div class="tabs" id="普通话"><ul class="nav-tabs"><li class="tab active"><a href="#普通话-1">时间</a></li><li class="tab"><a href="#普通话-2">图片</a></li></ul><div class="tab-content"><div class="tab-pane active" id="普通话-1"><p> <strong>2012-06</strong></p></div><div class="tab-pane" id="普通话-2"><p><img src="putonghua.jpeg" width alt></p></div></div></div>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;回顾一下&lt;br&gt;大学4年得到的证书&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="大学" scheme="https://gis90.github.io/categories/%E5%A4%A7%E5%AD%A6/"/>
    
    
      <category term="证书" scheme="https://gis90.github.io/tags/%E8%AF%81%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>父亲节</title>
    <link href="https://gis90.github.io/articles/46739/"/>
    <id>https://gis90.github.io/articles/46739/</id>
    <published>2019-06-16T00:45:20.000Z</published>
    <updated>2019-06-16T00:45:20.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><font size="4" color="blue">2019-06-16</font><br><font size="5" color="red"><strong>国际节-父亲节</strong></font></blockquote><a id="more"></a><hr><p><img src="fuqinjie.jpeg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;font size=&quot;4&quot; color=&quot;blue&quot;&gt;2019-06-16&lt;/font&gt;&lt;br&gt;&lt;font size=&quot;5&quot; color=&quot;red&quot;&gt;&lt;strong&gt;国际节-父亲节&lt;/strong&gt;&lt;/font&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="节日" scheme="https://gis90.github.io/categories/%E8%8A%82%E6%97%A5/"/>
    
    
      <category term="节日" scheme="https://gis90.github.io/tags/%E8%8A%82%E6%97%A5/"/>
    
      <category term="国际节" scheme="https://gis90.github.io/tags/%E5%9B%BD%E9%99%85%E8%8A%82/"/>
    
  </entry>
  
  <entry>
    <title>选词填空&lt;font color=&quot;blue&quot; size=&quot;4&quot;&gt;【图】&lt;/font&gt;</title>
    <link href="https://gis90.github.io/articles/9458/"/>
    <id>https://gis90.github.io/articles/9458/</id>
    <published>2019-06-13T01:51:43.000Z</published>
    <updated>2019-06-13T01:51:43.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><font color="#dd0000" size="5">看图笑话</font></blockquote><a id="more"></a><hr><div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 50%;"><img src="enjoy_xuance_1.jpg" width="350" style="border:1.5px solid blue"></div><div class="group-picture-column" style="width: 50%;"><img src="enjoy_xuance_2.jpg" width="350" style="border:1.5px solid blue"></div></div></div></div><p><br></p><div class="note info">            <p>感叹！现在的小学生都这么任性吗？</p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;font color=&quot;#dd0000&quot; size=&quot;5&quot;&gt;看图笑话&lt;/font&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="娱乐" scheme="https://gis90.github.io/categories/%E5%A8%B1%E4%B9%90/"/>
    
    
      <category term="看图笑话" scheme="https://gis90.github.io/tags/%E7%9C%8B%E5%9B%BE%E7%AC%91%E8%AF%9D/"/>
    
  </entry>
  
  <entry>
    <title>鼠标自定义样式</title>
    <link href="https://gis90.github.io/articles/3035/"/>
    <id>https://gis90.github.io/articles/3035/</id>
    <published>2019-06-10T11:03:44.000Z</published>
    <updated>2019-06-10T11:03:44.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note success">            <h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p><strong>自定义鼠标样式</strong>，将优化进行到底。</p>          </div><a id="more"></a><hr><h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><ul><li><p><a class="btn" href="/images/custome_style.7z" title="压缩包"><i class="fa fa-download fa-lg fa-fw"></i>压缩包</a>点击下载样式文件，把<strong>.cur</strong>样式文件copy到<strong>blog/public</strong>目录下。</p></li><li><p>打开自定义样式文件：<strong>blog/themes/next/source/css/_custom/custom.styl</strong>，加入以下代码：</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">body &#123;</span><br><span class="line">    background:url(/images/background.jpg);</span><br><span class="line">    cursor: url(&apos;/images/shubiao_guangmingxi.cur&apos;), auto !important;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我只定义了正常状态的鼠标样式，其他状态的样式根据自己的喜欢定义即可。</p><h3 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h3><p>详细教程：<a href="https://juejin.im/post/5b4876b66fb9a04f9e230066" target="_blank" rel="noopener">https://juejin.im/post/5b4876b66fb9a04f9e230066</a></p><div class="note info">            <h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>鼠标样式文件我是从网上下载的，下载过程十分曲折，显示关注公众号，在网页百度网盘下载，在安装百度网盘。。。。。。麻烦的要死。百度的东西，你懂的，下载完我就卸载了。</p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note success&quot;&gt;
            &lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;自定义鼠标样式&lt;/strong&gt;，将优化进行到底。&lt;/p&gt;
          &lt;/div&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://gis90.github.io/categories/Hexo/"/>
    
      <category term="前端" scheme="https://gis90.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Hexo" scheme="https://gis90.github.io/tags/Hexo/"/>
    
      <category term="Hexo美化" scheme="https://gis90.github.io/tags/Hexo%E7%BE%8E%E5%8C%96/"/>
    
      <category term="前端" scheme="https://gis90.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>端午节</title>
    <link href="https://gis90.github.io/articles/53227/"/>
    <id>https://gis90.github.io/articles/53227/</id>
    <published>2019-06-07T10:49:47.000Z</published>
    <updated>2019-06-07T10:49:47.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><font size="4" color="blue">2019-06-07</font><br><font size="5" color="red"><strong>中国节-端午节</strong></font></blockquote><a id="more"></a><hr><p><img src="67.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;font size=&quot;4&quot; color=&quot;blue&quot;&gt;2019-06-07&lt;/font&gt;&lt;br&gt;&lt;font size=&quot;5&quot; color=&quot;red&quot;&gt;&lt;strong&gt;中国节-端午节&lt;/strong&gt;&lt;/font&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="节日" scheme="https://gis90.github.io/categories/%E8%8A%82%E6%97%A5/"/>
    
    
      <category term="节日" scheme="https://gis90.github.io/tags/%E8%8A%82%E6%97%A5/"/>
    
      <category term="中国节" scheme="https://gis90.github.io/tags/%E4%B8%AD%E5%9B%BD%E8%8A%82/"/>
    
  </entry>
  
</feed>
